package org . apache . batik . dom . svg ; import org . apache . batik . dom . AbstractDocument ; import org . apache . batik . dom . util . XLinkSupport ; import org . apache . batik . dom . util . XMLSupport ; import org . apache . batik . util . DoublyIndexedTable ; import org . apache . batik . util . SVGTypes ; import org . w3c . dom . Node ; import org . w3c . dom . svg . SVGAnimatedBoolean ; import org . w3c . dom . svg . SVGAnimatedEnumeration ; import org . w3c . dom . svg . SVGAnimatedInteger ; import org . w3c . dom . svg . SVGAnimatedLength ; import org . w3c . dom . svg . SVGAnimatedString ; import org . w3c . dom . svg . SVGFilterElement ; public class SVGOMFilterElement extends SVGStylableElement implements SVGFilterElement { protected static DoublyIndexedTable xmlTraitInformation ; static { DoublyIndexedTable t = new DoublyIndexedTable ( SVGStylableElement . xmlTraitInformation ) ; t . put ( null , SVG_FILTER_UNITS_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_IDENT ) ) ; t . put ( null , SVG_PRIMITIVE_UNITS_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_IDENT ) ) ; t . put ( null , SVG_X_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_LENGTH , PERCENTAGE_VIEWPORT_WIDTH ) ) ; t . put ( null , SVG_Y_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_LENGTH , PERCENTAGE_VIEWPORT_HEIGHT ) ) ; t . put ( null , SVG_WIDTH_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_LENGTH , PERCENTAGE_VIEWPORT_WIDTH ) ) ; t . put ( null , SVG_HEIGHT_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_LENGTH , PERCENTAGE_VIEWPORT_HEIGHT ) ) ; t . put ( null , SVG_FILTER_RES_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_NUMBER_OPTIONAL_NUMBER ) ) ; xmlTraitInformation = t ; } protected static final AttributeInitializer attributeInitializer ; static { attributeInitializer = new AttributeInitializer ( 4 ) ; attributeInitializer . addAttribute ( XMLSupport . XMLNS_NAMESPACE_URI , null , "xmlns:xlink" , XLinkSupport . XLINK_NAMESPACE_URI ) ; attributeInitializer . addAttribute ( XLinkSupport . XLINK_NAMESPACE_URI , "xlink" , "type" , "simple" ) ; attributeInitializer . addAttribute ( XLinkSupport . XLINK_NAMESPACE_URI , "xlink" , "show" , "other" ) ; attributeInitializer . addAttribute ( XLinkSupport . XLINK_NAMESPACE_URI , "xlink" , "actuate" , "onLoad" ) ; } protected static final String [ ] UNITS_VALUES = { "" , SVG_USER_SPACE_ON_USE_VALUE , SVG_OBJECT_BOUNDING_BOX_VALUE } ; protected SVGOMAnimatedEnumeration filterUnits ; protected SVGOMAnimatedEnumeration primitiveUnits ; protected SVGOMAnimatedLength x ; protected SVGOMAnimatedLength y ; protected SVGOMAnimatedLength width ; protected SVGOMAnimatedLength height ; protected SVGOMAnimatedString href ; protected SVGOMAnimatedBoolean externalResourcesRequired ; protected SVGOMFilterElement ( ) { } public SVGOMFilterElement ( String prefix , AbstractDocument owner ) { super ( prefix , owner ) ; initializeLiveAttributes ( ) ; } protected void initializeAllLiveAttributes ( ) { super . initializeAllLiveAttributes ( ) ; initializeLiveAttributes ( ) ; } private void initializeLiveAttributes ( ) { filterUnits = createLiveAnimatedEnumeration ( null , SVG_FILTER_UNITS_ATTRIBUTE , UNITS_VALUES , ( short ) 2 ) ; primitiveUnits = createLiveAnimatedEnumeration ( null , SVG_PRIMITIVE_UNITS_ATTRIBUTE , UNITS_VALUES , ( short ) 1 ) ; x = createLiveAnimatedLength ( null , SVG_X_ATTRIBUTE , SVG_FILTER_X_DEFAULT_VALUE , SVGOMAnimatedLength . HORIZONTAL_LENGTH , false ) ; y = createLiveAnimatedLength ( null , SVG_Y_ATTRIBUTE , SVG_FILTER_Y_DEFAULT_VALUE , SVGOMAnimatedLength . VERTICAL_LENGTH , false ) ; width = createLiveAnimatedLength ( null , SVG_WIDTH_ATTRIBUTE , SVG_FILTER_WIDTH_DEFAULT_VALUE , SVGOMAnimatedLength . HORIZONTAL_LENGTH , true ) ; height = createLiveAnimatedLength ( null , SVG_HEIGHT_ATTRIBUTE , SVG_FILTER_HEIGHT_DEFAULT_VALUE , SVGOMAnimatedLength . VERTICAL_LENGTH , true ) ; href = createLiveAnimatedString ( XLINK_NAMESPACE_URI , XLINK_HREF_ATTRIBUTE ) ; externalResourcesRequired = createLiveAnimatedBoolean ( null , SVG_EXTERNAL_RESOURCES_REQUIRED_ATTRIBUTE , false ) ; } public String getLocalName ( ) { return SVG_FILTER_TAG ; } public SVGAnimatedEnumeration getFilterUnits ( ) { return filterUnits ; } public SVGAnimatedEnumeration getPrimitiveUnits ( ) { return primitiveUnits ; } public SVGAnimatedLength getX ( ) { return x ; } public SVGAnimatedLength getY ( ) { return y ; } public SVGAnimatedLength getWidth ( ) { return width ; } public SVGAnimatedLength getHeight ( ) { return height ; } public SVGAnimatedInteger getFilterResX ( ) { throw new UnsupportedOperationException ( "SVGFilterElement.getFilterResX is not implemented" ) ; } public SVGAnimatedInteger getFilterResY ( ) { throw new UnsupportedOperationException ( "SVGFilterElement.getFilterResY is not implemented" ) ; } public void setFilterRes ( int filterResX , int filterResY ) { throw new UnsupportedOperationException ( "SVGFilterElement.setFilterRes is not implemented" ) ; } public SVGAnimatedString getHref ( ) { return href ; } public SVGAnimatedBoolean getExternalResourcesRequired ( ) { return externalResourcesRequired ; } protected DoublyIndexedTable getTraitInformationTable ( ) { return xmlTraitInformation ; } public String getXMLlang ( ) { return XMLSupport . getXMLLang ( this ) ; } public void setXMLlang ( String lang ) { setAttributeNS ( XML_NAMESPACE_URI , XML_LANG_QNAME , lang ) ; } public String getXMLspace ( ) { return XMLSupport . getXMLSpace ( this ) ; } public void setXMLspace ( String space ) { setAttributeNS ( XML_NAMESPACE_URI , XML_SPACE_QNAME , space ) ; } protected AttributeInitializer getAttributeInitializer ( ) { return attributeInitializer ; } protected Node newNode ( ) { return new SVGOMFilterElement ( ) ; } }
