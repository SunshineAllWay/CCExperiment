package org.apache.lucene.document;
import org.apache.lucene.analysis.TokenStream;
import org.apache.lucene.index.FieldInvertState; 
import org.apache.lucene.search.PhraseQuery; 
import org.apache.lucene.search.spans.SpanQuery; 
import java.io.Reader;
import java.io.Serializable;
public interface Fieldable extends Serializable {
  void setBoost(float boost);
  float getBoost();
  String name();
  public String stringValue();
  public Reader readerValue();
  public TokenStream tokenStreamValue();
  boolean  isStored();
  boolean  isIndexed();
  boolean  isTokenized();
  boolean isTermVectorStored();
  boolean isStoreOffsetWithTermVector();
  boolean isStorePositionWithTermVector();
  boolean  isBinary();
  boolean getOmitNorms();
  void setOmitNorms(boolean omitNorms);
  boolean isLazy();
  abstract int getBinaryOffset();
  abstract int getBinaryLength();
  abstract byte[] getBinaryValue();
  abstract byte[] getBinaryValue(byte[] result);
  boolean getOmitTermFreqAndPositions();
  void setOmitTermFreqAndPositions(boolean omitTermFreqAndPositions);
}
