package org . apache . solr . common . params ; import org . apache . solr . common . util . StrUtils ; import java . util . Iterator ; import java . util . Map ; import java . io . IOException ; public class MapSolrParams extends SolrParams { protected final Map < String , String > map ; public MapSolrParams ( Map < String , String > map ) { this . map = map ; } @ Override public String get ( String name ) { return map . get ( name ) ; } @ Override public String [ ] getParams ( String name ) { String val = map . get ( name ) ; return val == null ? null : new String [ ] { val } ; } @ Override public Iterator < String > getParameterNamesIterator ( ) { return map . keySet ( ) . iterator ( ) ; } public Map < String , String > getMap ( ) { return map ; } @ Override public String toString ( ) { StringBuilder sb = new StringBuilder ( 128 ) ; try { boolean first = true ; for ( Map . Entry < String , String > entry : map . entrySet ( ) ) { String key = entry . getKey ( ) ; String val = entry . getValue ( ) ; if ( ! first ) sb . append ( '&' ) ; first = false ; sb . append ( key ) ; sb . append ( '=' ) ; StrUtils . partialURLEncodeVal ( sb , val == null ? "" : val ) ; } } catch ( IOException e ) { throw new RuntimeException ( e ) ; } return sb . toString ( ) ; } }
