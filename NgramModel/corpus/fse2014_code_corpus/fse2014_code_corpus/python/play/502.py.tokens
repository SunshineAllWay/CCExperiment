__version__ = '4.0.1' __all__ = [ , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ] def message_from_string ( s , * args , ** kws ) : from email . parser import Parser return Parser ( * args , ** kws ) . parsestr ( s ) def message_from_file ( fp , * args , ** kws ) : from email . parser import Parser return Parser ( * args , ** kws ) . parse ( fp ) import sys class LazyImporter ( object ) : def __init__ ( self , module_name ) : self . __name__ = 'email.' + module_name def __getattr__ ( self , name ) : __import__ ( self . __name__ ) mod = sys . modules [ self . __name__ ] self . __dict__ . update ( mod . __dict__ ) return getattr ( mod , name ) _LOWERNAMES = [ , , , , , , , , , , , , ] _MIMENAMES = [ , , , , , , , ] for _name in _LOWERNAMES : importer = LazyImporter ( _name . lower ( ) ) sys . modules [ 'email.' + _name ] = importer setattr ( sys . modules [ 'email' ] , _name , importer ) import email . mime for _name in _MIMENAMES : importer = LazyImporter ( 'mime.' + _name . lower ( ) ) sys . modules [ 'email.MIME' + _name ] = importer setattr ( sys . modules [ 'email' ] , 'MIME' + _name , importer ) setattr ( sys . modules [ 'email.mime' ] , _name , importer )
