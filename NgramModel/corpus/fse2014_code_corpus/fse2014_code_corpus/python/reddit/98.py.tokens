from r2 . models . link import Link from r2 . lib . db import tdb_sql import pytz import sqlalchemy as sa from r2 . lib . db . operators import desc import r2 . lib . db . sorts as sorts from datetime import datetime def find_tz ( ) : q = Link . _query ( sort = desc ( '_hot' ) , limit = 1 ) link = list ( q ) [ 0 ] t = tdb_sql . get_thing_table ( Link . _type_id ) [ 0 ] s = sa . select ( [ sa . func . hot ( t . c . ups , t . c . downs , t . c . date ) , t . c . thing_id ] , t . c . thing_id == link . _id ) db_hot = s . execute ( ) . fetchall ( ) [ 0 ] . hot . __float__ ( ) db_hot == round ( db_hot , 7 ) for tz_name in pytz . common_timezones : tz = pytz . timezone ( tz_name ) sorts . epoch = datetime ( 1970 , 1 , 1 , tzinfo = tz ) if db_hot == link . _hot : print tz_name if __name__ == '__main__' : find_tz ( )
