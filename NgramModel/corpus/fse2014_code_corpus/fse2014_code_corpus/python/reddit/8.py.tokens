import paste . deploy . config import paste . fixture from paste . registry import RegistryManager from paste . script import command from paste . deploy import appconfig from r2 . config . environment import load_environment from paste . script . pluginlib import find_egg_info_dir from pylons . wsgiapp import PylonsApp import os , sys class RunCommand ( command . Command ) : max_args = 2 min_args = 1 usage = "CONFIGFILE CMDFILE.py" summary = "Executed CMDFILE with pylons support" group_name = "Reddit" parser = command . Command . standard_parser ( verbose = True ) parser . add_option ( '-c' , '--command' , dest = 'command' , help = "execute command in module" ) parser . add_option ( "" , "--proctitle" , dest = "proctitle" , help = "set the title seen by ps and top" ) def command ( self ) : try : if self . options . proctitle : import setproctitle setproctitle . setproctitle ( "paster " + self . options . proctitle ) except ImportError : pass here_dir = os . getcwd ( ) if self . args [ 0 ] . lower ( ) == 'standalone' : load_environment ( setup_globals = False ) else : config_name = 'config:%s' % self . args [ 0 ] conf = appconfig ( config_name , relative_to = here_dir ) conf . global_conf [ 'running_as_script' ] = True conf . update ( dict ( app_conf = conf . local_conf , global_conf = conf . global_conf ) ) paste . deploy . config . CONFIG . push_thread_config ( conf ) load_environment ( conf . global_conf , conf . local_conf ) sys . path . insert ( 0 , here_dir ) wsgiapp = RegistryManager ( PylonsApp ( ) ) test_app = paste . fixture . TestApp ( wsgiapp ) tresponse = test_app . get ( '/_test_vars' ) request_id = int ( tresponse . body ) test_app . pre_request_hook = lambda self : paste . registry . restorer . restoration_end ( ) test_app . post_request_hook = lambda self : paste . registry . restorer . restoration_begin ( request_id ) paste . registry . restorer . restoration_begin ( request_id ) loaded_namespace = { } if self . args [ 1 : ] : execfile ( self . args [ 1 ] , loaded_namespace ) if self . options . command : exec self . options . command in loaded_namespace
