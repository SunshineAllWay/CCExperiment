from pylons import g from r2 . lib import amqp from datetime import datetime import cPickle as pickle import traceback tz = g . display_tz Q = 'log_q' def _default_dict ( ) : return dict ( time = datetime . now ( tz ) , host = g . reddit_host , port = "default" , pid = g . reddit_pid ) def log_exception ( e , e_type , e_value , e_traceback ) : d = _default_dict ( ) d [ 'type' ] = 'exception' d [ 'traceback' ] = traceback . extract_tb ( e_traceback ) d [ 'exception_type' ] = e . __class__ . __name__ s = str ( e ) d [ 'exception_desc' ] = s [ : 10000 ] amqp . add_item ( Q , pickle . dumps ( d ) ) def log_text ( classification , text = None , level = "info" ) : from r2 . lib . filters import _force_utf8 if text is None : text = classification if level not in ( 'debug' , 'info' , 'warning' , 'error' ) : print "What kind of loglevel is %s supposed to be?" % level level = 'error' d = _default_dict ( ) d [ 'type' ] = 'text' d [ 'level' ] = level d [ 'text' ] = _force_utf8 ( text ) d [ 'classification' ] = classification amqp . add_item ( Q , pickle . dumps ( d ) )
