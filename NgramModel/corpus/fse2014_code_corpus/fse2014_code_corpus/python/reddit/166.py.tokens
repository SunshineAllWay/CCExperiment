import tdb_sql import sqlalchemy as sa def thing_tables ( ) : for type in tdb_sql . types_id . values ( ) : yield type . thing_table for table in tdb_sql . extra_thing_tables . values ( ) : yield table def rel_tables ( ) : for type in tdb_sql . rel_types_id . values ( ) : yield type . rel_table [ 0 ] def dtables ( ) : for type in tdb_sql . types_id . values ( ) : yield type . data_table [ 0 ] for type in tdb_sql . rel_types_id . values ( ) : yield type . rel_table [ 3 ] def exec_all ( command , data = False , rel = False , print_only = False ) : if data : tables = dtables ( ) elif rel : tables = rel_tables ( ) else : tables = thing_tables ( ) for tt in tables : engine = tt . bind if print_only : print command % dict ( type = tt . name ) else : try : engine . execute ( command % dict ( type = tt . name ) ) except : print "FAILED!"
