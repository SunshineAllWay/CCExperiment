from r2 . models import Account , Link , Comment , Trial , Vote , SaveHide from r2 . lib import amqp from time import sleep from r2 . lib . db . operators import asc , desc from pylons import g def run ( verbose = True , sleep_time = 60 , num_items = 1 ) : key = "indextank_cursor" cursor = g . cache . get ( key ) if cursor is None : raise ValueError ( "%s is not set!" % key ) cursor = int ( cursor ) while True : if verbose : print "Looking for %d items with _id < %d" % ( num_items , cursor ) q = Link . _query ( sort = desc ( '_id' ) , limit = num_items ) q . _after ( Link . _byID ( cursor ) ) last_date = None for item in q : cursor = item . _id last_date = item . _date amqp . add_item ( 'indextank_changes' , item . _fullname , message_id = item . _fullname , delivery_mode = amqp . DELIVERY_TRANSIENT ) g . cache . set ( key , cursor ) if verbose : if last_date : last_date = last_date . strftime ( "%Y-%m-%d" ) print ( "Just enqueued %d items. New cursor=%s (%s). Sleeping %d seconds." % ( num_items , cursor , last_date , sleep_time ) ) sleep ( sleep_time )
