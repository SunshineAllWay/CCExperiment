import random , string from pylons import g from Captcha . Base import randomIdentifier from Captcha . Visual import Text , Backgrounds , Distortions , ImageCaptcha from r2 . lib . cache import make_key IDEN_LENGTH = 32 SOL_LENGTH = 6 class RandCaptcha ( ImageCaptcha ) : defaultSize = ( 120 , 50 ) fontFactory = Text . FontFactory ( 18 , "vera/VeraBd.ttf" ) def getLayers ( self , solution = "blah" ) : self . addSolution ( solution ) return ( ( Backgrounds . Grid ( size = 8 , foreground = "white" ) , Distortions . SineWarp ( amplitudeRange = ( 5 , 9 ) ) ) , ( Text . TextLayer ( solution , textColor = 'white' , fontFactory = self . fontFactory ) , Distortions . SineWarp ( ) ) ) def get_iden ( ) : return randomIdentifier ( length = IDEN_LENGTH ) def make_solution ( ) : return randomIdentifier ( alphabet = string . ascii_letters , length = SOL_LENGTH ) . upper ( ) def get_image ( iden ) : key = make_key ( iden ) solution = g . cache . get ( key ) if not solution : solution = make_solution ( ) g . cache . set ( key , solution , time = 300 ) return RandCaptcha ( solution = solution ) . render ( ) def valid_solution ( iden , solution ) : key = make_key ( iden ) if ( not iden or not solution or len ( iden ) != IDEN_LENGTH or len ( solution ) != SOL_LENGTH or solution . upper ( ) != g . cache . get ( key ) ) : solution = make_solution ( ) g . cache . set ( key , solution , time = 300 ) return False else : g . cache . delete ( key ) return True
