from reddit_base import RedditController , proxyurl from r2 . lib . template_helpers import get_domain from r2 . lib . pages import Embed , BoringPage , HelpPage from r2 . lib . filters import websafe , SC_OFF , SC_ON from r2 . lib . memoize import memoize from pylons . i18n import _ from pylons import c , g , request from BeautifulSoup import BeautifulSoup , Tag from urllib2 import HTTPError @ memoize ( "renderurl_cached" , time = 60 ) def renderurl_cached ( path ) : fp = path . rstrip ( "/" ) u = "http://code.reddit.com/wiki" + fp + '?stripped=1' g . log . debug ( "Pulling %s for help" % u ) try : return fp , proxyurl ( u ) except HTTPError , e : if e . code != 404 : print "error %s" % e . code print e . fp . read ( ) return ( None , None ) class EmbedController ( RedditController ) : allow_stylesheets = True def rendercontent ( self , input , fp ) : soup = BeautifulSoup ( input ) output = soup . find ( "div" , { 'class' : 'wiki' , 'id' : 'content' } ) for link in output . findAll ( 'a' ) : if link . has_key ( 'href' ) and link [ 'href' ] . startswith ( "/wiki/help" ) : link [ 'href' ] = link [ 'href' ] [ 5 : ] if c . user_is_loggedin and c . user . can_wiki ( ) : edit_text = _ ( 'edit this page' ) yes_you_can = _ ( "yes, it's okay!" ) read_first = _ ( 'just read this first.' ) url = "http://code.reddit.com/wiki" + websafe ( fp ) + "?action=edit" edittag = """ <div class="editlink"> <hr/> <a href="%s">%s</a>&#32; (<b>%s&#32; <a href="/help/editing_help">%s</a></b>) </div> """ % ( url , edit_text , yes_you_can , read_first ) output . append ( edittag ) output = SC_OFF + unicode ( output ) + SC_ON return HelpPage ( _ ( "help" ) , content = Embed ( content = output ) , show_sidebar = None ) . render ( ) def renderurl ( self , override = None ) : if override : path = override else : path = request . path fp , content = renderurl_cached ( path ) if content is None : self . abort404 ( ) return self . rendercontent ( content , fp ) GET_help = POST_help = renderurl def GET_blog ( self ) : return self . redirect ( "http://blog.%s/" % get_domain ( cname = False , subreddit = False , no_www = True ) ) def GET_faq ( self ) : if c . default_sr : return self . redirect ( '/help/faq' ) else : return self . renderurl ( '/help/faqs/' + c . site . name )
