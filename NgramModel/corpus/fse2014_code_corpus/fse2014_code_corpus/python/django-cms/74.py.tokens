from __future__ import with_statement from cms . conf . global_settings import CMS_TEMPLATE_INHERITANCE_MAGIC from cms . conf . patch import post_patch , post_patch_check from cms . test_utils . testcases import CMSTestCase from cms . test_utils . util . context_managers import SettingsOverride from django . core . exceptions import ImproperlyConfigured from django . template . loader import render_to_string class SettingsTests ( CMSTestCase ) : def test_cms_templates_length ( self ) : improperly_configured_template_tests = ( ( ) , ( ( CMS_TEMPLATE_INHERITANCE_MAGIC , None ) , ) , ) for value_to_test in improperly_configured_template_tests : with SettingsOverride ( DEBUG = True , CMS_TEMPLATES = value_to_test ) : self . assertRaises ( ImproperlyConfigured , post_patch_check ) def test_cms_templates_none ( self ) : with SettingsOverride ( DEBUG = True , CMS_TEMPLATE_INHERITANCE = True , CMS_TEMPLATES = None ) : self . assertRaises ( TypeError , post_patch ) with SettingsOverride ( DEBUG = True , CMS_TEMPLATE_INHERITANCE = False , CMS_TEMPLATES = None ) : self . assertEqual ( None , post_patch ( ) ) def test_cms_templates_with_pathsep ( self ) : from sekizai . context import SekizaiContext with SettingsOverride ( CMS_TEMPLATES = [ ( 'subdir/template.html' , 'Subdir' ) ] , DEBUG = True , TEMPLATE_DEBUG = True ) : context = SekizaiContext ( ) self . assertEqual ( render_to_string ( 'subdir/template.html' , context ) . strip ( ) , 'test' ) def test_cms_templates_valid ( self ) : success_template_tests = ( ( ( 'col_two.html' , 'two columns' ) , ) , ( ( 'col_two.html' , 'two columns' ) , ( 'col_three.html' , 'three columns' ) , ) , ( ( 'col_two.html' , 'two columns' ) , ( 'col_three.html' , 'three columns' ) , ( 'nav_playground.html' , 'navigation examples' ) , ) , ( ( 'col_two.html' , 'two columns' ) , ( 'col_three.html' , 'three columns' ) , ( 'nav_playground.html' , 'navigation examples' ) , ( CMS_TEMPLATE_INHERITANCE_MAGIC , None ) , ) , ( ( CMS_TEMPLATE_INHERITANCE_MAGIC , None ) , ( 'col_two.html' , 'two columns' ) , ( 'col_three.html' , 'three columns' ) , ( 'nav_playground.html' , 'navigation examples' ) , ) , ) for value_to_test in success_template_tests : with SettingsOverride ( DEBUG = True , CMS_TEMPLATES = value_to_test ) : self . assertEqual ( None , post_patch_check ( ) )
