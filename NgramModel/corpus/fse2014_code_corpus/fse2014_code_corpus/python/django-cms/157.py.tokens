from cms . plugins . text import settings as text_settings from cms . utils import cms_static_url from django . conf import settings from django . forms import Textarea from django . template . loader import render_to_string from django . utils . safestring import mark_safe from django . utils . translation . trans_real import get_language class WYMEditor ( Textarea ) : class Media : js = [ cms_static_url ( path ) for path in ( , , , , , ) ] css = { : [ cms_static_url ( path ) for path in ( , ) ] , } def __init__ ( self , attrs = None , installed_plugins = None ) : self . attrs = { 'class' : 'wymeditor' } if attrs : self . attrs . update ( attrs ) super ( WYMEditor , self ) . __init__ ( attrs ) self . installed_plugins = installed_plugins def render_textarea ( self , name , value , attrs = None ) : return super ( WYMEditor , self ) . render ( name , value , attrs ) def render_additions ( self , name , value , attrs = None ) : language = get_language ( ) context = { : name , : language , : settings . STATIC_URL , : mark_safe ( text_settings . WYM_TOOLS ) , : mark_safe ( text_settings . WYM_CONTAINERS ) , : mark_safe ( text_settings . WYM_CLASSES ) , : mark_safe ( text_settings . WYM_STYLES ) , : mark_safe ( text_settings . WYM_STYLESHEET ) , : self . installed_plugins , } return mark_safe ( render_to_string ( , context ) ) def render ( self , name , value , attrs = None ) : return self . render_textarea ( name , value , attrs ) + self . render_additions ( name , value , attrs )
