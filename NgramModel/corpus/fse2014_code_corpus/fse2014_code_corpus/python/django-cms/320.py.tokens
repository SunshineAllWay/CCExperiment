from django . forms . models import BaseInlineFormSet class BaseInlineFormSetWithQuerySet ( BaseInlineFormSet ) : def __init__ ( self , data = None , files = None , instance = None , save_as_new = False , prefix = None , queryset = None ) : from django . db . models . fields . related import RelatedObject if instance is None : self . instance = self . model ( ) else : self . instance = instance self . save_as_new = save_as_new self . rel_name = RelatedObject ( self . fk . rel . to , self . model , self . fk ) . get_accessor_name ( ) if hasattr ( self , 'use_queryset' ) : qs = self . use_queryset else : qs = self . model . _default_manager qs = qs . filter ( ** { self . fk . name : self . instance } ) super ( BaseInlineFormSet , self ) . __init__ ( data , files , prefix = prefix or self . rel_name ,
