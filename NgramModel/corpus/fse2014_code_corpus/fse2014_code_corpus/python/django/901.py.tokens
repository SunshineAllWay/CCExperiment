""" Views and functions for serving static files. These are only to be used during development, and SHOULD NOT be used in a production setting. """ from __future__ import with_statement import mimetypes import os import stat import posixpath import re import urllib from django . http import Http404 , HttpResponse , HttpResponseRedirect , HttpResponseNotModified from django . template import loader , Template , Context , TemplateDoesNotExist from django . utils . http import http_date , parse_http_date from django . utils . translation import ugettext as _ , ugettext_noop def serve ( request , path , document_root = None , show_indexes = False ) : path = posixpath . normpath ( urllib . unquote ( path ) ) path = path . lstrip ( '/' ) newpath = '' for part in path . split ( '/' ) : if not part : continue drive , part = os . path . splitdrive ( part ) head , part = os . path . split ( part ) if part in ( os . curdir , os . pardir ) : continue newpath = os . path . join ( newpath , part ) . replace ( '\\' , '/' ) if newpath and path != newpath : return HttpResponseRedirect ( newpath ) fullpath = os . path . join ( document_root , newpath ) if os . path . isdir ( fullpath ) : if show_indexes : return directory_index ( newpath , fullpath ) raise Http404 ( _ ( u"Directory indexes are not allowed here." ) ) if not os . path . exists ( fullpath ) : raise Http404 ( _ ( u'"%s" does not exist' ) % fullpath ) statobj = os . stat ( fullpath ) mimetype , encoding = mimetypes . guess_type ( fullpath ) mimetype = mimetype or 'application/octet-stream' if not was_modified_since ( request . META . get ( 'HTTP_IF_MODIFIED_SINCE' ) , statobj . st_mtime , statobj . st_size ) : return HttpResponseNotModified ( mimetype = mimetype ) with open ( fullpath , 'rb' ) as f : response = HttpResponse ( f . read ( ) , mimetype = mimetype ) response [ "Last-Modified" ] = http_date ( statobj . st_mtime ) if stat . S_ISREG ( statobj . st_mode ) : response [ "Content-Length" ] = statobj . st_size if encoding : response [ "Content-Encoding" ] = encoding return response DEFAULT_DIRECTORY_INDEX_TEMPLATE = """ {% load i18n %} <!DOCTYPE html> <html lang="en"> <head> <meta http-equiv="Content-type" content="text/html; charset=utf-8" /> <meta http-equiv="Content-Language" content="en-us" /> <meta name="robots" content="NONE,NOARCHIVE" /> <title>{% blocktrans %}Index of {{ directory }}{% endblocktrans %}</title> </head> <body> <h1>{% blocktrans %}Index of {{ directory }}{% endblocktrans %}</h1> <ul> {% ifnotequal directory "/" %} <li><a href="../">../</a></li> {% endifnotequal %} {% for f in file_list %} <li><a href="{{ f|urlencode }}">{{ f }}</a></li> {% endfor %} </ul> </body> </html> """ template_translatable = ugettext_noop ( u"Index of %(directory)s" ) def directory_index ( path , fullpath ) : try : t = loader . select_template ( [ 'static/directory_index.html' , ] ) except TemplateDoesNotExist : t = Template ( DEFAULT_DIRECTORY_INDEX_TEMPLATE , name = 'Default directory index template' ) files = [ ] for f in os . listdir ( fullpath ) : if not f . startswith ( '.' ) : if os . path . isdir ( os . path . join ( fullpath , f ) ) : f += '/' files . append ( f ) c = Context ( { : path + '/' , : files , } ) return HttpResponse ( t . render ( c ) ) def was_modified_since ( header = None , mtime = 0 , size = 0 ) : try : if header is None : raise ValueError matches = re . match ( r"^([^;]+)(; length=([0-9]+))?$" , header , re . IGNORECASE ) header_mtime = parse_http_date ( matches . group ( 1 ) ) header_len = matches . group ( 3 ) if header_len and int ( header_len ) != size : raise ValueError if mtime > header_mtime : raise ValueError except ( AttributeError , ValueError , OverflowError ) : return True return False
