from ctypes import c_void_p from types import NoneType from django . contrib . gis . geos . error import GEOSException try : from django . contrib . gis import gdal except ImportError : class GDALInfo ( object ) : HAS_GDAL = False GEOJSON = False gdal = GDALInfo ( ) try : import numpy except ImportError : numpy = False class GEOSBase ( object ) : _ptr = None ptr_type = c_void_p def _get_ptr ( self ) : if self . _ptr : return self . _ptr else : raise GEOSException ( 'NULL GEOS %s pointer encountered.' % self . __class__ . __name__ ) def _set_ptr ( self , ptr ) : if isinstance ( ptr , ( self . ptr_type , NoneType ) ) : self . _ptr = ptr else : raise TypeError ( 'Incompatible pointer type' ) ptr = property ( _get_ptr , _set_ptr )
