from django . contrib . gis . gdal import OGRGeomType from django . db . backends . sqlite3 . introspection import DatabaseIntrospection , FlexibleFieldLookupDict class GeoFlexibleFieldLookupDict ( FlexibleFieldLookupDict ) : base_data_types_reverse = FlexibleFieldLookupDict . base_data_types_reverse . copy ( ) base_data_types_reverse . update ( { 'point' : 'GeometryField' , : 'GeometryField' , : 'GeometryField' , : 'GeometryField' , : 'GeometryField' , : 'GeometryField' , : 'GeometryField' , } ) class SpatiaLiteIntrospection ( DatabaseIntrospection ) : data_types_reverse = GeoFlexibleFieldLookupDict ( ) def get_geometry_type ( self , table_name , geo_col ) : cursor = self . connection . cursor ( ) try : cursor . execute ( 'SELECT "coord_dimension", "srid", "type" ' , ( table_name , geo_col ) ) row = cursor . fetchone ( ) if not row : raise Exception ( 'Could not find a geometry column for "%s"."%s"' % ( table_name , geo_col ) ) field_type = OGRGeomType ( row [ 2 ] ) . django dim = row [ 0 ] srid = row [ 1 ] field_params = { } if srid != 4326 : field_params [ 'srid' ] = srid if isinstance ( dim , basestring ) and 'Z' in dim : field_params [ 'dim' ] = 3 finally : cursor . close ( ) return field_type , field_params
