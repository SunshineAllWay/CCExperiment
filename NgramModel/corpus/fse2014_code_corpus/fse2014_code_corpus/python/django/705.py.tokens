import datetime from django . utils import feedgenerator , tzinfo , unittest class FeedgeneratorTest ( unittest . TestCase ) : def test_get_tag_uri ( self ) : self . assertEqual ( feedgenerator . get_tag_uri ( 'http://example.org/foo/bar#headline' , datetime . date ( 2004 , 10 , 25 ) ) , ) def test_get_tag_uri_with_port ( self ) : self . assertEqual ( feedgenerator . get_tag_uri ( 'http://www.example.org:8000/2008/11/14/django#headline' , datetime . datetime ( 2008 , 11 , 14 , 13 , 37 , 0 ) ) , ) def test_rfc2822_date ( self ) : self . assertEqual ( feedgenerator . rfc2822_date ( datetime . datetime ( 2008 , 11 , 14 , 13 , 37 , 0 ) ) , ) def test_rfc2822_date_with_timezone ( self ) : self . assertEqual ( feedgenerator . rfc2822_date ( datetime . datetime ( 2008 , 11 , 14 , 13 , 37 , 0 , tzinfo = tzinfo . FixedOffset ( datetime . timedelta ( minutes = 60 ) ) ) ) , ) def test_rfc2822_date_without_time ( self ) : self . assertEqual ( feedgenerator . rfc2822_date ( datetime . date ( 2008 , 11 , 14 ) ) , ) def test_rfc3339_date ( self ) : self . assertEqual ( feedgenerator . rfc3339_date ( datetime . datetime ( 2008 , 11 , 14 , 13 , 37 , 0 ) ) , ) def test_rfc3339_date_with_timezone ( self ) : self . assertEqual ( feedgenerator . rfc3339_date ( datetime . datetime ( 2008 , 11 , 14 , 13 , 37 , 0 , tzinfo = tzinfo . FixedOffset ( datetime . timedelta ( minutes = 120 ) ) ) ) , ) def test_rfc3339_date_without_time ( self ) : self . assertEqual ( feedgenerator . rfc3339_date ( datetime . date ( 2008 , 11 , 14 ) ) , ) def test_atom1_mime_type ( self ) : atom_feed = feedgenerator . Atom1Feed ( "title" , "link" , "description" ) self . assertEqual ( atom_feed . mime_type , "application/atom+xml; charset=utf-8" ) def test_rss_mime_type ( self ) : rss_feed = feedgenerator . Rss201rev2Feed ( "title" , "link" , "description" ) self . assertEqual ( rss_feed . mime_type , "application/rss+xml; charset=utf-8" ) def test_feed_without_feed_url_gets_rendered_without_atom_link ( self ) : feed = feedgenerator . Rss201rev2Feed ( 'title' , '/link/' , 'descr' ) self . assertEquals ( feed . feed [ 'feed_url' ] , None ) feed_content = feed . writeString ( 'utf-8' ) self . assertNotIn ( '<atom:link href=' , feed_content ) def test_feed_with_feed_url_gets_rendered_with_atom_link ( self ) : feed = feedgenerator . Rss201rev2Feed ( 'title' , '/link/' , 'descr' , feed_url = '/feed/' ) self . assertEquals ( feed . feed [ 'feed_url' ] , '/feed/' ) feed_content = feed . writeString ( 'utf-8' ) self . assertIn ( '<atom:link href="/feed/" rel="self"></atom:link>' , feed_content )
