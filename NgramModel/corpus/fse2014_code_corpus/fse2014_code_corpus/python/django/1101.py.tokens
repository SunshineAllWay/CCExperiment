""" Functions that modify an HTTP request or response in some way. """ def fix_location_header ( request , response ) : if 'Location' in response and request . get_host ( ) : response [ 'Location' ] = request . build_absolute_uri ( response [ 'Location' ] ) return response def conditional_content_removal ( request , response ) : if 100 <= response . status_code < 200 or response . status_code in ( 204 , 304 ) : response . content = '' response [ 'Content-Length' ] = 0 if request . method == 'HEAD' : response . content = '' return response def fix_IE_for_attach ( request , response ) : useragent = request . META . get ( 'HTTP_USER_AGENT' , '' ) . upper ( ) if 'MSIE' not in useragent and 'CHROMEFRAME' not in useragent : return response offending_headers = ( 'no-cache' , 'no-store' ) if response . has_header ( 'Content-Disposition' ) : try : del response [ 'Pragma' ] except KeyError : pass if response . has_header ( 'Cache-Control' ) : cache_control_values = [ value . strip ( ) for value in response [ 'Cache-Control' ] . split ( ',' ) if value . strip ( ) . lower ( ) not in offending_headers ] if not len ( cache_control_values ) : del response [ 'Cache-Control' ] else : response [ 'Cache-Control' ] = ', ' . join ( cache_control_values ) return response def fix_IE_for_vary ( request , response ) : useragent = request . META . get ( 'HTTP_USER_AGENT' , '' ) . upper ( ) if 'MSIE' not in useragent and 'CHROMEFRAME' not in useragent : return response safe_mime_types = ( 'text/html' , 'text/plain' , 'text/sgml' ) mime_type = response . get ( 'Content-Type' , '' ) . partition ( ';' ) [ 0 ] if mime_type not in safe_mime_types : try : del response [ 'Vary' ] except KeyError : pass return response
