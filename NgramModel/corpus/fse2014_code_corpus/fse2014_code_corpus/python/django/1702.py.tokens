from ctypes import c_void_p from django . contrib . gis . gdal . base import GDALBase from django . contrib . gis . gdal . error import OGRException from django . contrib . gis . gdal . prototypes import ds as capi class Driver ( GDALBase ) : _alias = { 'esri' : 'ESRI Shapefile' , : 'ESRI Shapefile' , : 'ESRI Shapefile' , : 'TIGER' , : 'TIGER' , } def __init__ ( self , dr_input ) : if isinstance ( dr_input , basestring ) : self . _register ( ) if dr_input . lower ( ) in self . _alias : name = self . _alias [ dr_input . lower ( ) ] else : name = dr_input dr = capi . get_driver_by_name ( name ) elif isinstance ( dr_input , int ) : self . _register ( ) dr = capi . get_driver ( dr_input ) elif isinstance ( dr_input , c_void_p ) : dr = dr_input else : raise OGRException ( 'Unrecognized input type for OGR Driver: %s' % str ( type ( dr_input ) ) ) if not dr : raise OGRException ( 'Could not initialize OGR Driver on input: %s' % str ( dr_input ) ) self . ptr = dr def __str__ ( self ) : return capi . get_driver_name ( self . ptr ) def _register ( self ) : if not self . driver_count : capi . register_all ( ) @ property def driver_count ( self ) : return capi . get_driver_count ( )
