from __future__ import with_statement , absolute_import from django . conf import settings if __name__ == '__main__' : settings . configure ( ) from datetime import date , datetime , timedelta import time import os import sys import traceback import warnings from urlparse import urljoin from django import template from django . template import base as template_base , RequestContext , Template , Context from django . core import urlresolvers from django . template import loader from django . template . loaders import app_directories , filesystem , cached from django . test import RequestFactory from django . test . utils import ( get_warnings_state , restore_warnings_state , setup_test_template_loader , restore_template_loaders , override_settings ) from django . utils import unittest from django . utils . formats import date_format from django . utils . translation import activate , deactivate , ugettext as _ from django . utils . safestring import mark_safe from django . utils . tzinfo import LocalTimezone from . callables import CallableVariablesTests from . context import ContextTests from . custom import CustomTagTests , CustomFilterTests from . parser import ParserTests from . unicode import UnicodeTests from . nodelist import NodelistTest , ErrorIndexTest from . smartif import SmartIfTests from . response import ( TemplateResponseTest , BaseTemplateResponseTest , CacheMiddlewareTest , SimpleTemplateResponseTest , CustomURLConfTest ) try : from . loaders import RenderToStringTest , EggLoaderTest except ImportError , e : if "pkg_resources" in e . message : pass else : raise from . import filters register = template . Library ( ) class EchoNode ( template . Node ) : def __init__ ( self , contents ) : self . contents = contents def render ( self , context ) : return " " . join ( self . contents ) def do_echo ( parser , token ) : return EchoNode ( token . contents . split ( ) [ 1 : ] ) def do_upper ( value ) : return value . upper ( ) register . tag ( "echo" , do_echo ) register . tag ( "other_echo" , do_echo ) register . filter ( "upper" , do_upper ) template . libraries [ 'testtags' ] = register class SomeException ( Exception ) : silent_variable_failure = True class SomeOtherException ( Exception ) : pass class ContextStackException ( Exception ) : pass class ShouldNotExecuteException ( Exception ) : pass class SomeClass : def __init__ ( self ) : self . otherclass = OtherClass ( ) def method ( self ) : return "SomeClass.method" def method2 ( self , o ) : return o def method3 ( self ) : raise SomeException def method4 ( self ) : raise SomeOtherException def __getitem__ ( self , key ) : if key == 'silent_fail_key' : raise SomeException elif key == 'noisy_fail_key' : raise SomeOtherException raise KeyError def silent_fail_attribute ( self ) : raise SomeException silent_fail_attribute = property ( silent_fail_attribute ) def noisy_fail_attribute ( self ) : raise SomeOtherException noisy_fail_attribute = property ( noisy_fail_attribute ) class OtherClass : def method ( self ) : return "OtherClass.method" class TestObj ( object ) : def is_true ( self ) : return True def is_false ( self ) : return False def is_bad ( self ) : raise ShouldNotExecuteException ( ) class SilentGetItemClass ( object ) : def __getitem__ ( self , key ) : raise SomeException class SilentAttrClass ( object ) : def b ( self ) : raise SomeException b = property ( b ) class UTF8Class : def __str__ ( self ) : return u'ŠĐĆŽćžšđ' . encode ( 'utf-8' ) class Templates ( unittest . TestCase ) : def setUp ( self ) : self . _warnings_state = get_warnings_state ( ) warnings . filterwarnings ( 'ignore' , category = DeprecationWarning , module = 'django.template.defaulttags' ) self . old_static_url = settings . STATIC_URL self . old_media_url = settings . MEDIA_URL settings . STATIC_URL = u"/static/" settings . MEDIA_URL = u"/media/" def tearDown ( self ) : settings . STATIC_URL = self . old_static_url settings . MEDIA_URL = self . old_media_url restore_warnings_state ( self . _warnings_state ) def test_loaders_security ( self ) : ad_loader = app_directories . Loader ( ) fs_loader = filesystem . Loader ( ) def test_template_sources ( path , template_dirs , expected_sources ) : if isinstance ( expected_sources , list ) : expected_sources = [ os . path . abspath ( s ) for s in expected_sources ] func1 = lambda p , t : list ( ad_loader . get_template_sources ( p , t ) ) func2 = lambda p , t : list ( fs_loader . get_template_sources ( p , t ) ) for func in ( func1 , func2 ) : if isinstance ( expected_sources , list ) : self . assertEqual ( func ( path , template_dirs ) , expected_sources ) else : self . assertRaises ( expected_sources , func , path , template_dirs ) template_dirs = [ '/dir1' , '/dir2' ] test_template_sources ( 'index.html' , template_dirs , [ '/dir1/index.html' , '/dir2/index.html' ] ) test_template_sources ( '/etc/passwd' , template_dirs , [ ] ) test_template_sources ( 'etc/passwd' , template_dirs , [ '/dir1/etc/passwd' , '/dir2/etc/passwd' ] ) test_template_sources ( '../etc/passwd' , template_dirs , [ ] ) test_template_sources ( '../../../etc/passwd' , template_dirs , [ ] ) test_template_sources ( '/dir1/index.html' , template_dirs , [ '/dir1/index.html' ] ) test_template_sources ( '../dir2/index.html' , template_dirs , [ '/dir2/index.html' ] ) test_template_sources ( '/dir1blah' , template_dirs , [ ] ) test_template_sources ( '../dir1blah' , template_dirs , [ ] ) test_template_sources ( '\xc3\x85ngstr\xc3\xb6m' , template_dirs , [ u'/dir1/Ångström' , u'/dir2/Ångström' ] ) test_template_sources ( u'Ångström' , template_dirs , [ u'/dir1/Ångström' , u'/dir2/Ångström' ] ) test_template_sources ( u'Ångström' , [ '/Straße' ] , [ u'/Straße/Ångström' ] ) test_template_sources ( '\xc3\x85ngstr\xc3\xb6m' , [ '/Straße' ] , [ u'/Straße/Ångström' ] ) test_template_sources ( '\xc3\xc3' , template_dirs , UnicodeDecodeError ) if os . path . normcase ( '/TEST' ) == os . path . normpath ( '/test' ) : template_dirs = [ '/dir1' , '/DIR2' ] test_template_sources ( 'index.html' , template_dirs , [ '/dir1/index.html' , '/DIR2/index.html' ] ) test_template_sources ( '/DIR1/index.HTML' , template_dirs , [ '/DIR1/index.HTML' ] ) def test_loader_debug_origin ( self ) : old_td , settings . TEMPLATE_DEBUG = settings . TEMPLATE_DEBUG , True old_loaders = loader . template_source_loaders try : loader . template_source_loaders = ( filesystem . Loader ( ) , ) load_name = '404.html' template = loader . get_template ( load_name ) template_name = template . nodelist [ 0 ] . source [ 0 ] . name self . assertTrue ( template_name . endswith ( load_name ) , % template_name ) cache_loader = cached . Loader ( ( '' , ) ) cache_loader . _cached_loaders = loader . template_source_loaders loader . template_source_loaders = ( cache_loader , ) template = loader . get_template ( load_name ) template_name = template . nodelist [ 0 ] . source [ 0 ] . name self . assertTrue ( template_name . endswith ( load_name ) , % template_name ) template = loader . get_template ( load_name ) template_name = template . nodelist [ 0 ] . source [ 0 ] . name self . assertTrue ( template_name . endswith ( load_name ) , % template_name ) finally : loader . template_source_loaders = old_loaders settings . TEMPLATE_DEBUG = old_td def test_include_missing_template ( self ) : old_td , settings . TEMPLATE_DEBUG = settings . TEMPLATE_DEBUG , True old_loaders = loader . template_source_loaders try : loader . template_source_loaders = ( app_directories . Loader ( ) , ) load_name = 'test_include_error.html' r = None try : tmpl = loader . select_template ( [ load_name ] ) r = tmpl . render ( template . Context ( { } ) ) except template . TemplateDoesNotExist , e : settings . TEMPLATE_DEBUG = old_td self . assertEqual ( e . args [ 0 ] , 'missing.html' ) self . assertEqual ( r , None , 'Template rendering unexpectedly succeeded, produced: ->%r<-' % r ) finally : loader . template_source_loaders = old_loaders settings . TEMPLATE_DEBUG = old_td def test_extends_include_missing_baseloader ( self ) : old_td , settings . TEMPLATE_DEBUG = settings . TEMPLATE_DEBUG , True old_loaders = loader . template_source_loaders try : loader . template_source_loaders = ( app_directories . Loader ( ) , ) load_name = 'test_extends_error.html' tmpl = loader . get_template ( load_name ) r = None try : r = tmpl . render ( template . Context ( { } ) ) except template . TemplateDoesNotExist , e : settings . TEMPLATE_DEBUG = old_td self . assertEqual ( e . args [ 0 ] , 'missing.html' ) self . assertEqual ( r , None , 'Template rendering unexpectedly succeeded, produced: ->%r<-' % r ) finally : loader . template_source_loaders = old_loaders settings . TEMPLATE_DEBUG = old_td def test_extends_include_missing_cachedloader ( self ) : old_td , settings . TEMPLATE_DEBUG = settings . TEMPLATE_DEBUG , True old_loaders = loader . template_source_loaders try : cache_loader = cached . Loader ( ( '' , ) ) cache_loader . _cached_loaders = ( app_directories . Loader ( ) , ) loader . template_source_loaders = ( cache_loader , ) load_name = 'test_extends_error.html' tmpl = loader . get_template ( load_name ) r = None try : r = tmpl . render ( template . Context ( { } ) ) except template . TemplateDoesNotExist , e : self . assertEqual ( e . args [ 0 ] , 'missing.html' ) self . assertEqual ( r , None , 'Template rendering unexpectedly succeeded, produced: ->%r<-' % r ) tmpl = loader . get_template ( load_name ) try : tmpl . render ( template . Context ( { } ) ) except template . TemplateDoesNotExist , e : self . assertEqual ( e . args [ 0 ] , 'missing.html' ) self . assertEqual ( r , None , 'Template rendering unexpectedly succeeded, produced: ->%r<-' % r ) finally : loader . template_source_loaders = old_loaders settings . TEMPLATE_DEBUG = old_td def test_token_smart_split ( self ) : token = template . Token ( template . TOKEN_BLOCK , 'sometag _("Page not found") value|yesno:_("yes,no")' ) split = token . split_contents ( ) self . assertEqual ( split , [ "sometag" , '_("Page not found")' , 'value|yesno:_("yes,no")' ] ) @ override_settings ( SETTINGS_MODULE = None , TEMPLATE_DEBUG = True ) def test_url_reverse_no_settings_module ( self ) : from django . template import Template , Context t = Template ( '{% url will_not_match %}' ) c = Context ( ) with self . assertRaises ( urlresolvers . NoReverseMatch ) : t . render ( c ) @ override_settings ( DEBUG = True , TEMPLATE_DEBUG = True ) def test_no_wrapped_exception ( self ) : c = Context ( { "coconuts" : lambda : 42 / 0 } ) t = Template ( "{{ coconuts }}" ) with self . assertRaises ( ZeroDivisionError ) as cm : t . render ( c ) self . assertEqual ( cm . exception . django_template_source [ 1 ] , ( 0 , 14 ) ) def test_invalid_block_suggestion ( self ) : from django . template import Template , TemplateSyntaxError try : t = Template ( "{% if 1 %}lala{% endblock %}{% endif %}" ) except TemplateSyntaxError , e : self . assertEqual ( e . args [ 0 ] , "Invalid block tag: 'endblock', expected 'elif', 'else' or 'endif'" ) def test_templates ( self ) : template_tests = self . get_template_tests ( ) filter_tests = filters . get_filter_tests ( ) overlapping_names = [ name for name in filter_tests if name in template_tests ] assert not overlapping_names , 'Duplicate test name(s): %s' % ', ' . join ( overlapping_names ) template_tests . update ( filter_tests ) cache_loader = setup_test_template_loader ( dict ( [ ( name , t [ 0 ] ) for name , t in template_tests . iteritems ( ) ] ) , use_cached_loader = True , ) failures = [ ] tests = template_tests . items ( ) tests . sort ( ) old_td , settings . TEMPLATE_DEBUG = settings . TEMPLATE_DEBUG , False old_invalid = settings . TEMPLATE_STRING_IF_INVALID expected_invalid_str = 'INVALID' old_allowed_include_roots = settings . ALLOWED_INCLUDE_ROOTS settings . ALLOWED_INCLUDE_ROOTS = os . path . dirname ( os . path . abspath ( __file__ ) ) urlresolvers . reverse ( 'regressiontests.templates.views.client_action' , kwargs = { 'id' : 0 , 'action' : "update" } ) for name , vals in tests : if isinstance ( vals [ 2 ] , tuple ) : normal_string_result = vals [ 2 ] [ 0 ] invalid_string_result = vals [ 2 ] [ 1 ] if isinstance ( invalid_string_result , tuple ) : expected_invalid_str = 'INVALID %s' invalid_string_result = invalid_string_result [ 0 ] % invalid_string_result [ 1 ] template_base . invalid_var_format_string = True try : template_debug_result = vals [ 2 ] [ 2 ] except IndexError : template_debug_result = normal_string_result else : normal_string_result = vals [ 2 ] invalid_string_result = vals [ 2 ] template_debug_result = vals [ 2 ] if 'LANGUAGE_CODE' in vals [ 1 ] : activate ( vals [ 1 ] [ 'LANGUAGE_CODE' ] ) else : activate ( 'en-us' ) for invalid_str , template_debug , result in [ ( '' , False , normal_string_result ) , ( expected_invalid_str , False , invalid_string_result ) , ( '' , True , template_debug_result ) ] : settings . TEMPLATE_STRING_IF_INVALID = invalid_str settings . TEMPLATE_DEBUG = template_debug for is_cached in ( False , True ) : try : try : test_template = loader . get_template ( name ) except ShouldNotExecuteException : failures . append ( "Template test (Cached='%s', TEMPLATE_STRING_IF_INVALID='%s', TEMPLATE_DEBUG=%s): %s -- FAILED. Template loading invoked method that shouldn't have been invoked." % ( is_cached , invalid_str , template_debug , name ) ) try : output = self . render ( test_template , vals ) except ShouldNotExecuteException : failures . append ( "Template test (Cached='%s', TEMPLATE_STRING_IF_INVALID='%s', TEMPLATE_DEBUG=%s): %s -- FAILED. Template rendering invoked method that shouldn't have been invoked." % ( is_cached , invalid_str , template_debug , name ) ) except ContextStackException : failures . append ( "Template test (Cached='%s', TEMPLATE_STRING_IF_INVALID='%s', TEMPLATE_DEBUG=%s): %s -- FAILED. Context stack was left imbalanced" % ( is_cached , invalid_str , template_debug , name ) ) continue except Exception : exc_type , exc_value , exc_tb = sys . exc_info ( ) if exc_type != result : tb = '\n' . join ( traceback . format_exception ( exc_type , exc_value , exc_tb ) ) failures . append ( "Template test (Cached='%s', TEMPLATE_STRING_IF_INVALID='%s', TEMPLATE_DEBUG=%s): %s -- FAILED. Got %s, exception: %s\n%s" % ( is_cached , invalid_str , template_debug , name , exc_type , exc_value , tb ) ) continue if output != result : failures . append ( "Template test (Cached='%s', TEMPLATE_STRING_IF_INVALID='%s', TEMPLATE_DEBUG=%s): %s -- FAILED. Expected %r, got %r" % ( is_cached , invalid_str , template_debug , name , result , output ) ) cache_loader . reset ( ) if 'LANGUAGE_CODE' in vals [ 1 ] : deactivate ( ) if template_base . invalid_var_format_string : expected_invalid_str = 'INVALID' template_base . invalid_var_format_string = False restore_template_loaders ( ) deactivate ( ) settings . TEMPLATE_DEBUG = old_td settings . TEMPLATE_STRING_IF_INVALID = old_invalid settings . ALLOWED_INCLUDE_ROOTS = old_allowed_include_roots self . assertEqual ( failures , [ ] , "Tests failed:\n%s\n%s" % ( '-' * 70 , ( "\n%s\n" % ( '-' * 70 ) ) . join ( failures ) ) ) def render ( self , test_template , vals ) : context = template . Context ( vals [ 1 ] ) before_stack_size = len ( context . dicts ) output = test_template . render ( context ) if len ( context . dicts ) != before_stack_size : raise ContextStackException return output def get_template_tests ( self ) : basedir = os . path . dirname ( os . path . abspath ( __file__ ) ) tests = { : ( "something cool" , { } , "something cool" ) , : ( "{{ headline }}" , { 'headline' : 'Success' } , "Success" ) , : ( "{{ first }} --- {{ second }}" , { "first" : 1 , "second" : 2 } , "1 --- 2" ) , : ( "as{{ missing }}df" , { } , ( "asdf" , "asINVALIDdf" ) ) , : ( "{{ multi word variable }}" , { } , template . TemplateSyntaxError ) , : ( "{{ }}" , { } , template . TemplateSyntaxError ) , : ( "{{ }}" , { } , template . TemplateSyntaxError ) , : ( "{{ var.method }}" , { "var" : SomeClass ( ) } , "SomeClass.method" ) , : ( "{{ var.otherclass.method }}" , { "var" : SomeClass ( ) } , "OtherClass.method" ) , : ( "{{ var.blech }}" , { "var" : SomeClass ( ) } , ( "" , "INVALID" ) ) , : ( "{{ var.__dict__ }}" , { "var" : SomeClass ( ) } , template . TemplateSyntaxError ) , : ( "{{ va>r }}" , { } , template . TemplateSyntaxError ) , : ( "{{ (var.r) }}" , { } , template . TemplateSyntaxError ) , : ( "{{ sp%am }}" , { } , template . TemplateSyntaxError ) , : ( "{{ eggs! }}" , { } , template . TemplateSyntaxError ) , : ( "{{ moo? }}" , { } , template . TemplateSyntaxError ) , : ( "{{ foo.bar }}" , { "foo" : { "bar" : "baz" } } , "baz" ) , : ( "{{ foo.spam }}" , { "foo" : { "bar" : "baz" } } , ( "" , "INVALID" ) ) , : ( "{{ var.method2 }}" , { "var" : SomeClass ( ) } , ( "" , "INVALID" ) ) , : ( "a {{ moo %} b" , { } , "a {{ moo %} b" ) , : ( "{{ moo #}" , { } , "{{ moo #}" ) , : ( "{{ moo #} {{ cow }}" , { "cow" : "cow" } , template . TemplateSyntaxError ) , : ( "{{ moo\n }}" , { } , "{{ moo\n }}" ) , : ( '{{ "fred" }}' , { } , "fred" ) , : ( r'{{ "\"fred\"" }}' , { } , "\"fred\"" ) , : ( r'{{ _("\"fred\"") }}' , { } , "\"fred\"" ) , : ( "{{ a.b }}" , { 'a' : SilentGetItemClass ( ) } , ( '' , 'INVALID' ) ) , : ( "{{ a.b }}" , { 'a' : SilentAttrClass ( ) } , ( '' , 'INVALID' ) ) , : ( "{{ 1.2.3 }}" , { "1" : { "2" : { "3" : "d" } } } , "d" ) , : ( "{{ 1.2.3 }}" , { "1" : { "2" : ( "a" , "b" , "c" , "d" ) } } , "d" ) , : ( "{{ 1.2.3 }}" , { "1" : ( ( "x" , "x" , "x" , "x" ) , ( "y" , "y" , "y" , "y" ) , ( "a" , "b" , "c" , "d" ) ) } , "d" ) , : ( "{{ 1.2.3 }}" , { "1" : ( "xxxx" , "yyyy" , "abcd" ) } , "d" ) , : ( "{{ 1.2.3 }}" , { "1" : ( { "x" : "x" } , { "y" : "y" } , { "z" : "z" , "3" : "d" } ) } , "d" ) , : ( "{{ 1 }}" , { "1" : "abc" } , "1" ) , : ( "{{ 1.2 }}" , { "1" : "abc" } , "1.2" ) , : ( '{{ callable }}' , { "callable" : lambda : "foo bar" } , "foo bar" ) , : ( '{{ var.callable }}' , { "var" : { "callable" : lambda : "foo bar" } } , "foo bar" ) , : ( "{{ var.1 }}" , { "var" : [ "first item" , "second item" ] } , "second item" ) , : ( "{{ var.5 }}" , { "var" : [ "first item" , "second item" ] } , ( "" , "INVALID" ) ) , : ( "{{ var.1 }}" , { "var" : None } , ( "" , "INVALID" ) ) , : ( "{{ var.1 }}" , { "var" : { } } , ( "" , "INVALID" ) ) , : ( "{{ var.1 }}" , { "var" : { '1' : "hello" } } , "hello" ) , : ( "{{ var.1 }}" , { "var" : { 1 : "hello" } } , "hello" ) , : ( "{{ var.1 }}" , { "var" : { '1' : "hello" , 1 : "world" } } , "hello" ) , : ( "{{ var|upper }}" , { "var" : "Django is the greatest!" } , "DJANGO IS THE GREATEST!" ) , : ( "{{ var|upper|lower }}" , { "var" : "Django is the greatest!" } , "django is the greatest!" ) , : ( "{{ var |upper }}" , { } , template . TemplateSyntaxError ) , : ( "{{ var| upper }}" , { } , template . TemplateSyntaxError ) , : ( "{{ var|does_not_exist }}" , { } , template . TemplateSyntaxError ) , : ( "{{ var|fil(ter) }}" , { } , template . TemplateSyntaxError ) , : ( "{% nothing_to_see_here %}" , { } , template . TemplateSyntaxError ) , : ( "{% %}" , { } , template . TemplateSyntaxError ) , : ( '{{ var|removetags:"b i"|upper|lower }}' , { "var" : "<b><i>Yes</i></b>" } , "yes" ) , : ( r'{{ var|default_if_none:" endquote\" hah" }}' , { "var" : None } , ' endquote" hah' ) , : ( r'{{ var|default_if_none:var2 }}' , { "var" : None , "var2" : "happy" } , 'happy' ) , : ( r'{{ var|yesno:"yup,nup,mup" }} {{ var|yesno }}' , { "var" : True } , 'yup yes' ) , : ( r'1{{ var.method3 }}2' , { "var" : SomeClass ( ) } , ( "12" , "1INVALID2" ) ) , : ( r'1{{ var.method4 }}2' , { "var" : SomeClass ( ) } , ( SomeOtherException , SomeOtherException ) ) , : ( r'{{ var|default_if_none:"foo\bar" }}' , { "var" : None } , r'foo\bar' ) , : ( r'{{ var|default_if_none:"foo\now" }}' , { "var" : None } , r'foo\now' ) , : ( r'{{ var|join:"" }}' , { 'var' : [ 'a' , 'b' , 'c' ] } , 'abc' ) , : ( r'{{ var }}' , { 'var' : UTF8Class ( ) } , u'\u0160\u0110\u0106\u017d\u0107\u017e\u0161\u0111' ) , : ( '{{ var|truncatewords:1 }}' , { "var" : "hello world" } , "hello ..." ) , : ( '{{ ""|default_if_none:"was none" }}' , { } , "" ) , : ( r'1{{ var.silent_fail_key }}2' , { "var" : SomeClass ( ) } , ( "12" , "1INVALID2" ) ) , : ( r'1{{ var.silent_fail_attribute }}2' , { "var" : SomeClass ( ) } , ( "12" , "1INVALID2" ) ) , : ( r'1{{ var.noisy_fail_key }}2' , { "var" : SomeClass ( ) } , ( SomeOtherException , SomeOtherException ) ) , : ( r'1{{ var.noisy_fail_attribute }}2' , { "var" : SomeClass ( ) } , ( SomeOtherException , SomeOtherException ) ) , : ( "{# this is hidden #}hello" , { } , "hello" ) , : ( "{# this is hidden #}hello{# foo #}" , { } , "hello" ) , : ( "foo{# {% if %} #}" , { } , "foo" ) , : ( "foo{# {% endblock %} #}" , { } , "foo" ) , : ( "foo{# {% somerandomtag %} #}" , { } , "foo" ) , : ( "foo{# {% #}" , { } , "foo" ) , : ( "foo{# %} #}" , { } , "foo" ) , : ( "foo{# %} #}bar" , { } , "foobar" ) , : ( "foo{# {{ #}" , { } , "foo" ) , : ( "foo{# }} #}" , { } , "foo" ) , : ( "foo{# { #}" , { } , "foo" ) , : ( "foo{# } #}" , { } , "foo" ) , : ( "{% comment %}this is hidden{% endcomment %}hello" , { } , "hello" ) , : ( "{% comment %}this is hidden{% endcomment %}hello{% comment %}foo{% endcomment %}" , { } , "hello" ) , : ( "foo{% comment %} {% if %} {% endcomment %}" , { } , "foo" ) , : ( "foo{% comment %} {% endblock %} {% endcomment %}" , { } , "foo" ) , : ( "foo{% comment %} {% somerandomtag %} {% endcomment %}" , { } , "foo" ) , : ( '{% cycle a %}' , { } , template . TemplateSyntaxError ) , : ( '{% cycle a,b,c as abc %}{% cycle abc %}' , { } , 'ab' ) , : ( '{% cycle a,b,c as abc %}{% cycle abc %}{% cycle abc %}' , { } , 'abc' ) , : ( '{% cycle a,b,c as abc %}{% cycle abc %}{% cycle abc %}{% cycle abc %}' , { } , 'abca' ) , : ( '{% cycle %}' , { } , template . TemplateSyntaxError ) , : ( '{% cycle a %}' , { } , template . TemplateSyntaxError ) , : ( '{% cycle a,b,c as foo %}{% cycle bar %}' , { } , template . TemplateSyntaxError ) , : ( '{% cycle a,b,c as foo %}{% cycle foo %}{{ foo }}{{ foo }}{% cycle foo %}{{ foo }}' , { } , 'abbbcc' ) , : ( "{% for i in test %}{% cycle a,b %}{{ i }},{% endfor %}" , { 'test' : range ( 5 ) } , 'a0,b1,a2,b3,a4,' ) , : ( "{% cycle 'a' 'b' 'c' as abc %}{% cycle abc %}" , { } , 'ab' ) , : ( "{% cycle 'a' 'b' 'c' as abc %}{% cycle abc %}{% cycle abc %}" , { } , 'abc' ) , : ( "{% cycle 'a' 'b' 'c' as abc %}{% cycle abc %}{% cycle abc %}{% cycle abc %}" , { } , 'abca' ) , : ( "{% for i in test %}{% cycle 'a' 'b' %}{{ i }},{% endfor %}" , { 'test' : range ( 5 ) } , 'a0,b1,a2,b3,a4,' ) , : ( "{% cycle one two as foo %}{% cycle foo %}" , { 'one' : '1' , 'two' : '2' } , '12' ) , : ( "{% for i in test %}{% cycle aye bee %}{{ i }},{% endfor %}" , { 'test' : range ( 5 ) , 'aye' : 'a' , 'bee' : 'b' } , 'a0,b1,a2,b3,a4,' ) , : ( "{% cycle one|lower two as foo %}{% cycle foo %}" , { 'one' : 'A' , 'two' : '2' } , 'a2' ) , : ( "{% cycle 'a' 'b' 'c' as abc silent %}{% cycle abc %}{% cycle abc %}{% cycle abc %}{% cycle abc %}" , { } , "" ) , : ( "{% cycle 'a' 'b' 'c' as foo invalid_flag %}" , { } , template . TemplateSyntaxError ) , : ( "{% cycle 'a' 'b' as silent %}{% cycle silent %}" , { } , "ab" ) , : ( "{% cycle one two as foo %} &amp; {% cycle foo %}" , { 'one' : 'A & B' , 'two' : 'C & D' } , "A & B &amp; C & D" ) , : ( "{% filter force_escape %}{% cycle one two as foo %} & {% cycle foo %}{% endfilter %}" , { 'one' : 'A & B' , 'two' : 'C & D' } , "A &amp; B &amp; C &amp; D" ) , : ( "{% for x in values %}{% cycle 'a' 'b' 'c' as abc silent %}{{ x }}{% endfor %}" , { 'values' : [ 1 , 2 , 3 , 4 ] } , "1234" ) , : ( "{% for x in values %}{% cycle 'a' 'b' 'c' as abc silent %}{{ abc }}{{ x }}{% endfor %}" , { 'values' : [ 1 , 2 , 3 , 4 ] } , "a1b2c3a4" ) , : ( '{{ abc }}' , { 'abc' : 'xxx' } , 'xxx' ) , : ( "{% for x in values %}{% cycle 'a' 'b' 'c' as abc silent %}{% include 'included-cycle' %}{% endfor %}" , { 'values' : [ 1 , 2 , 3 , 4 ] } , "abca" ) , : ( "{% extends 'nonexistent' %}" , { } , ( template . TemplateDoesNotExist , template . TemplateDoesNotExist ) ) , : ( "{% extends nonexistent %}" , { } , ( template . TemplateSyntaxError , template . TemplateDoesNotExist ) ) , : ( "{% extends 'inheritance01' %}{% block first %}2{% endblock %}{% extends 'inheritance16' %}" , { } , template . TemplateSyntaxError ) , : ( "{% extends 'inheritance17' %}{% block first %}{% echo 400 %}5678{% endblock %}" , { } , template . TemplateSyntaxError ) , : ( '{% filter upper %}{% endfilter %}' , { } , '' ) , : ( '{% filter upper %}django{% endfilter %}' , { } , 'DJANGO' ) , : ( '{% filter upper|lower %}django{% endfilter %}' , { } , 'django' ) , : ( '{% filter cut:remove %}djangospam{% endfilter %}' , { 'remove' : 'spam' } , 'django' ) , : ( '{% firstof a b c %}' , { 'a' : 0 , 'b' : 0 , 'c' : 0 } , '' ) , : ( '{% firstof a b c %}' , { 'a' : 1 , 'b' : 0 , 'c' : 0 } , '1' ) , : ( '{% firstof a b c %}' , { 'a' : 0 , 'b' : 2 , 'c' : 0 } , '2' ) , : ( '{% firstof a b c %}' , { 'a' : 0 , 'b' : 0 , 'c' : 3 } , '3' ) , : ( '{% firstof a b c %}' , { 'a' : 1 , 'b' : 2 , 'c' : 3 } , '1' ) , : ( '{% firstof a b c %}' , { 'b' : 0 , 'c' : 3 } , '3' ) , : ( '{% firstof a b "c" %}' , { 'a' : 0 } , 'c' ) , : ( '{% firstof a b "c and d" %}' , { 'a' : 0 , 'b' : 0 } , 'c and d' ) , : ( '{% firstof %}' , { } , template . TemplateSyntaxError ) , : ( '{% firstof a %}' , { 'a' : '<' } , '<' ) , : ( "{% for val in values %}{{ val }}{% endfor %}" , { "values" : [ 1 , 2 , 3 ] } , "123" ) , : ( "{% for val in values reversed %}{{ val }}{% endfor %}" , { "values" : [ 1 , 2 , 3 ] } , "321" ) , : ( "{% for val in values %}{{ forloop.counter }}{% endfor %}" , { "values" : [ 6 , 6 , 6 ] } , "123" ) , : ( "{% for val in values %}{{ forloop.counter0 }}{% endfor %}" , { "values" : [ 6 , 6 , 6 ] } , "012" ) , : ( "{% for val in values %}{{ forloop.revcounter }}{% endfor %}" , { "values" : [ 6 , 6 , 6 ] } , "321" ) , : ( "{% for val in values %}{{ forloop.revcounter0 }}{% endfor %}" , { "values" : [ 6 , 6 , 6 ] } , "210" ) , : ( "{% for val in values %}{% if forloop.first %}f{% else %}x{% endif %}{% endfor %}" , { "values" : [ 6 , 6 , 6 ] } , "fxx" ) , : ( "{% for val in values %}{% if forloop.last %}l{% else %}x{% endif %}{% endfor %}" , { "values" : [ 6 , 6 , 6 ] } , "xxl" ) , : ( "{% for key,value in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , "one:1/two:2/" ) , : ( "{% for key, value in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , "one:1/two:2/" ) , : ( "{% for key , value in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , "one:1/two:2/" ) , : ( "{% for key ,value in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , "one:1/two:2/" ) , : ( "{% for key value in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , template . TemplateSyntaxError ) , : ( "{% for key,,value in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , template . TemplateSyntaxError ) , : ( "{% for key,value, in items %}{{ key }}:{{ value }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , template . TemplateSyntaxError ) , : ( "{% for val in items %}{{ val.0 }}:{{ val.1 }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , "one:1/two:2/" ) , : ( "{% for x,y in items %}{{ x }}:{{ y }}/{% endfor %}" , { "items" : ( ( 'one' , 1 , 'carrot' ) , ( 'two' , 2 , 'orange' ) ) } , "one:1/two:2/" ) , : ( "{% for x,y,z in items %}{{ x }}:{{ y }},{{ z }}/{% endfor %}" , { "items" : ( ( 'one' , 1 ) , ( 'two' , 2 ) ) } , ( "one:1,/two:2,/" , "one:1,INVALID/two:2,INVALID/" ) ) , : ( "{% for x,y,z in items %}{{ x }}:{{ y }},{{ z }}/{% endfor %}" , { "items" : ( ( 'one' , 1 , 'carrot' ) , ( 'two' , 2 ) ) } , ( "one:1,carrot/two:2,/" , "one:1,carrot/two:2,INVALID/" ) ) , : ( "{% for x,y,z in items %}{{ x }}:{{ y }},{{ z }}/{% endfor %}" , { "items" : ( ( 'one' , 1 , 'carrot' ) , ( 'two' , 2 , 'cheese' ) ) } , ( "one:1,carrot/two:2,cheese/" , "one:1,carrot/two:2,cheese/" ) ) , : ( "{% for x,y in items %}{{ x }}:{{ y }}/{% endfor %}" , { "items" : ( 1 , 2 ) } , ( ":/:/" , "INVALID:INVALID/INVALID:INVALID/" ) ) , : ( "{% for val in values %}{{ val }}{% empty %}empty text{% endfor %}" , { "values" : [ 1 , 2 , 3 ] } , "123" ) , : ( "{% for val in values %}{{ val }}{% empty %}values array empty{% endfor %}" , { "values" : [ ] } , "values array empty" ) , : ( "{% for val in values %}{{ val }}{% empty %}values array not found{% endfor %}" , { } , "values array not found" ) , : ( "{% if foo %}yes{% else %}no{% endif %}" , { "foo" : True } , "yes" ) , : ( "{% if foo %}yes{% else %}no{% endif %}" , { "foo" : False } , "no" ) , : ( "{% if foo %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if foo %}foo{% elif bar %}bar{% endif %}" , { 'foo' : True } , "foo" ) , : ( "{% if foo %}foo{% elif bar %}bar{% endif %}" , { 'bar' : True } , "bar" ) , : ( "{% if foo %}foo{% elif bar %}bar{% endif %}" , { } , "" ) , : ( "{% if foo %}foo{% elif bar %}bar{% else %}nothing{% endif %}" , { 'foo' : True } , "foo" ) , : ( "{% if foo %}foo{% elif bar %}bar{% else %}nothing{% endif %}" , { 'bar' : True } , "bar" ) , : ( "{% if foo %}foo{% elif bar %}bar{% else %}nothing{% endif %}" , { } , "nothing" ) , : ( "{% if foo %}foo{% elif bar %}bar{% elif baz %}baz{% else %}nothing{% endif %}" , { 'foo' : True } , "foo" ) , : ( "{% if foo %}foo{% elif bar %}bar{% elif baz %}baz{% else %}nothing{% endif %}" , { 'bar' : True } , "bar" ) , : ( "{% if foo %}foo{% elif bar %}bar{% elif baz %}baz{% else %}nothing{% endif %}" , { 'baz' : True } , "baz" ) , : ( "{% if foo %}foo{% elif bar %}bar{% elif baz %}baz{% else %}nothing{% endif %}" , { } , "nothing" ) , : ( "{% if foo|length == 5 %}yes{% else %}no{% endif %}" , { 'foo' : 'abcde' } , "yes" ) , : ( "{% if foo|upper == 'ABC' %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if foo == bar %}yes{% else %}no{% endif %}" , { } , "yes" ) , : ( "{% if foo == bar %}yes{% else %}no{% endif %}" , { 'foo' : 1 } , "no" ) , : ( "{% if foo == bar %}yes{% else %}no{% endif %}" , { 'foo' : 1 , 'bar' : 1 } , "yes" ) , : ( "{% if foo == bar %}yes{% else %}no{% endif %}" , { 'foo' : 1 , 'bar' : 2 } , "no" ) , : ( "{% if foo == '' %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if 2 > 1 %}yes{% else %}no{% endif %}" , { } , "yes" ) , : ( "{% if 1 > 1 %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if 1 >= 1 %}yes{% else %}no{% endif %}" , { } , "yes" ) , : ( "{% if 1 >= 2 %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if 1 < 2 %}yes{% else %}no{% endif %}" , { } , "yes" ) , : ( "{% if 1 < 1 %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if 1 <= 1 %}yes{% else %}no{% endif %}" , { } , "yes" ) , : ( "{% if 2 <= 1 %}yes{% else %}no{% endif %}" , { } , "no" ) , : ( "{% if 1 in x %}yes{% else %}no{% endif %}" , { 'x' : [ 1 ] } , "yes" ) , : ( "{% if 2 in x %}yes{% else %}no{% endif %}" , { 'x' : [ 1 ] } , "no" ) , : ( "{% if 1 not in x %}yes{% else %}no{% endif %}" , { 'x' : [ 1 ] } , "no" ) , : ( "{% if 2 not in x %}yes{% else %}no{% endif %}" , { 'x' : [ 1 ] } , "yes" ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'yes' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'no' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'no' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'no' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : False } , 'no' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'bar' : False } , 'no' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : True } , 'no' ) , : ( "{% if foo and bar %}yes{% else %}no{% endif %}" , { 'bar' : True } , 'no' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'yes' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'yes' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'yes' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'no' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : False } , 'no' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'bar' : False } , 'no' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : True } , 'yes' ) , : ( "{% if foo or bar %}yes{% else %}no{% endif %}" , { 'bar' : True } , 'yes' ) , : ( "{% if foo or bar or baz %}yes{% else %}no{% endif %}" , { 'baz' : True } , 'yes' ) , : ( "{% if not foo %}no{% else %}yes{% endif %}" , { 'foo' : True } , 'yes' ) , : ( "{% if not not foo %}no{% else %}yes{% endif %}" , { 'foo' : True } , 'no' ) , : ( "{% if foo and not bar %}yes{% else %}no{% endif %}" , { } , 'no' ) , : ( "{% if foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'no' ) , : ( "{% if foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'yes' ) , : ( "{% if foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'no' ) , : ( "{% if foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'no' ) , : ( "{% if not foo and bar %}yes{% else %}no{% endif %}" , { } , 'no' ) , : ( "{% if not foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'no' ) , : ( "{% if not foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'no' ) , : ( "{% if not foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'yes' ) , : ( "{% if not foo and bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'no' ) , : ( "{% if foo or not bar %}yes{% else %}no{% endif %}" , { } , 'yes' ) , : ( "{% if foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'yes' ) , : ( "{% if foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'yes' ) , : ( "{% if foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'no' ) , : ( "{% if foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'yes' ) , : ( "{% if not foo or bar %}yes{% else %}no{% endif %}" , { } , 'yes' ) , : ( "{% if not foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'yes' ) , : ( "{% if not foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'no' ) , : ( "{% if not foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'yes' ) , : ( "{% if not foo or bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'yes' ) , : ( "{% if not foo and not bar %}yes{% else %}no{% endif %}" , { } , 'yes' ) , : ( "{% if not foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'no' ) , : ( "{% if not foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'no' ) , : ( "{% if not foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'no' ) , : ( "{% if not foo and not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'yes' ) , : ( "{% if not foo or not bar %}yes{% else %}no{% endif %}" , { } , 'yes' ) , : ( "{% if not foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : True } , 'no' ) , : ( "{% if not foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : True , 'bar' : False } , 'yes' ) , : ( "{% if not foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : True } , 'yes' ) , : ( "{% if not foo or not bar %}yes{% else %}no{% endif %}" , { 'foo' : False , 'bar' : False } , 'yes' ) , : ( "{% if %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if foo and %}yes{% else %}no{% endif %}" , { 'foo' : True } , template . TemplateSyntaxError ) , : ( "{% if foo or %}yes{% else %}no{% endif %}" , { 'foo' : True } , template . TemplateSyntaxError ) , : ( "{% if not foo and %}yes{% else %}no{% endif %}" , { 'foo' : True } , template . TemplateSyntaxError ) , : ( "{% if not foo or %}yes{% else %}no{% endif %}" , { 'foo' : True } , template . TemplateSyntaxError ) , : ( "{% if abc def %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if not %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if and %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if or %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if == %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if 1 == %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( "{% if a not b %}yes{% endif %}" , { } , template . TemplateSyntaxError ) , : ( '{% if x.is_true or x.is_bad %}yes{% else %}no{% endif %}' , { 'x' : TestObj ( ) } , "yes" ) , : ( '{% if x.is_false and x.is_bad %}yes{% else %}no{% endif %}' , { 'x' : TestObj ( ) } , "no" ) , : ( "{% if x|default_if_none:y %}yes{% endif %}" , { } , '' ) , : ( "{% if x|default_if_none:y %}yes{% endif %}" , { 'y' : 0 } , '' ) , : ( "{% if x|default_if_none:y %}yes{% endif %}" , { 'y' : 1 } , 'yes' ) , : ( "{% if x|default_if_none:y %}yes{% else %}no{% endif %}" , { } , 'no' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% endfor %}' , { 'num' : ( 1 , 2 , 3 ) } , '123' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% endfor %}' , { 'num' : ( 1 , 1 , 3 ) } , '13' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% endfor %}' , { 'num' : ( 1 , 1 , 1 ) } , '1' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% for x in numx %}{% ifchanged %}{{ x }}{% endifchanged %}{% endfor %}{% endfor %}' , { 'num' : ( 1 , 2 , 3 ) , 'numx' : ( 2 , 2 , 2 ) } , '122232' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% for x in numx %}{% ifchanged %}{{ x }}{% endifchanged %}{% endfor %}{% endfor %}' , { 'num' : ( 1 , 1 , 1 ) , 'numx' : ( 1 , 2 , 3 ) } , '1123123123' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% for x in numx %}{% ifchanged %}{{ x }}{% endifchanged %}{% endfor %}{% endfor %}' , { 'num' : ( 1 , 1 , 1 ) , 'numx' : ( 2 , 2 , 2 ) } , '1222' ) , : ( '{% for n in num %}{% ifchanged %}{{ n }}{% endifchanged %}{% for x in numx %}{% ifchanged %}{{ x }}{% endifchanged %}{% for y in numy %}{% ifchanged %}{{ y }}{% endifchanged %}{% endfor %}{% endfor %}{% endfor %}' , { 'num' : ( 1 , 1 , 1 ) , 'numx' : ( 2 , 2 , 2 ) , 'numy' : ( 3 , 3 , 3 ) } , '1233323332333' ) , : ( '{% for data in datalist %}{% for c,d in data %}{% if c %}{% ifchanged %}{{ d }}{% endifchanged %}{% endif %}{% endfor %}{% endfor %}' , { 'datalist' : [ [ ( 1 , 'a' ) , ( 1 , 'a' ) , ( 0 , 'b' ) , ( 1 , 'c' ) ] , [ ( 0 , 'a' ) , ( 1 , 'c' ) , ( 1 , 'd' ) , ( 1 , 'd' ) , ( 0 , 'e' ) ] ] } , 'accd' ) , : ( '{% for n in num %}{% ifchanged n %}..{% endifchanged %}{{ n }}{% endfor %}' , { 'num' : ( 1 , 2 , 3 ) } , '..1..2..3' ) , : ( '{% for n in num %}{% for x in numx %}{% ifchanged n %}..{% endifchanged %}{{ x }}{% endfor %}{% endfor %}' , { 'num' : ( 1 , 2 , 3 ) , 'numx' : ( 5 , 6 , 7 ) } , '..567..567..567' ) , : ( '{% for n in num %}{{ n }}{% for x in numx %}{% ifchanged x n %}{{ x }}{% endifchanged %}{% endfor %}{% endfor %}' , { 'num' : ( 1 , 1 , 2 ) , 'numx' : ( 5 , 6 , 6 ) } , '156156256' ) , : ( '{% for d in days %}{% ifchanged %}{{ d.day }}{% endifchanged %}{% for h in d.hours %}{% ifchanged d h %}{{ h }}{% endifchanged %}{% endfor %}{% endfor %}' , { 'days' : [ { 'day' : 1 , 'hours' : [ 1 , 2 , 3 ] } , { 'day' : 2 , 'hours' : [ 3 ] } , ] } , '112323' ) , : ( '{% for d in days %}{% ifchanged d.day %}{{ d.day }}{% endifchanged %}{% for h in d.hours %}{% ifchanged d.day h %}{{ h }}{% endifchanged %}{% endfor %}{% endfor %}' , { 'days' : [ { 'day' : 1 , 'hours' : [ 1 , 2 , 3 ] } , { 'day' : 2 , 'hours' : [ 3 ] } , ] } , '112323' ) , : ( '{% for id in ids %}{{ id }}{% ifchanged id %}-first{% else %}-other{% endifchanged %},{% endfor %}' , { 'ids' : [ 1 , 1 , 2 , 2 , 2 , 3 ] } , '1-first,1-other,2-first,2-other,2-other,3-first,' ) , : ( '{% for id in ids %}{{ id }}-{% ifchanged id %}{% cycle red,blue %}{% else %}grey{% endifchanged %},{% endfor %}' , { 'ids' : [ 1 , 1 , 2 , 2 , 2 , 3 ] } , '1-red,1-grey,2-blue,2-grey,2-grey,3-red,' ) , : ( '{% for id in ids %}{{ id }}{% ifchanged id %}-{% cycle red,blue %}{% else %}{% endifchanged %},{% endfor %}' , { 'ids' : [ 1 , 1 , 2 , 2 , 2 , 3 ] } , '1-red,1,2-blue,2,2,3-red,' ) , : ( '{% for id in ids %}{% ifchanged %}***{{ id }}*{% else %}...{% endifchanged %}{{ forloop.counter }}{% endfor %}' , { 'ids' : [ 1 , 1 , 2 , 2 , 2 , 3 , 4 ] } , '***1*1...2***2*3...4...5***3*6***4*7' ) , : ( "{% ifequal a b %}yes{% endifequal %}" , { "a" : 1 , "b" : 2 } , "" ) , : ( "{% ifequal a b %}yes{% endifequal %}" , { "a" : 1 , "b" : 1 } , "yes" ) , : ( "{% ifequal a b %}yes{% else %}no{% endifequal %}" , { "a" : 1 , "b" : 2 } , "no" ) , : ( "{% ifequal a b %}yes{% else %}no{% endifequal %}" , { "a" : 1 , "b" : 1 } , "yes" ) , : ( "{% ifequal a 'test' %}yes{% else %}no{% endifequal %}" , { "a" : "test" } , "yes" ) , : ( "{% ifequal a 'test' %}yes{% else %}no{% endifequal %}" , { "a" : "no" } , "no" ) , : ( '{% ifequal a "test" %}yes{% else %}no{% endifequal %}' , { "a" : "test" } , "yes" ) , : ( '{% ifequal a "test" %}yes{% else %}no{% endifequal %}' , { "a" : "no" } , "no" ) , : ( '{% ifequal a "test" %}yes{% else %}no{% endifequal %}' , { } , "no" ) , : ( '{% ifequal a b %}yes{% else %}no{% endifequal %}' , { } , "yes" ) , : ( '{% ifequal a "test man" %}yes{% else %}no{% endifequal %}' , { } , "no" ) , : ( '{% ifequal a "test man" %}yes{% else %}no{% endifequal %}' , { 'a' : 'foo' } , "no" ) , : ( '{% ifequal a "test man" %}yes{% else %}no{% endifequal %}' , { 'a' : 'test man' } , "yes" ) , : ( "{% ifequal a 'test man' %}yes{% else %}no{% endifequal %}" , { 'a' : 'test man' } , "yes" ) , : ( "{% ifequal a 'i \"love\" you' %}yes{% else %}no{% endifequal %}" , { 'a' : '' } , "no" ) , : ( "{% ifequal a 'i \"love\" you' %}yes{% else %}no{% endifequal %}" , { 'a' : 'i "love" you' } , "yes" ) , : ( "{% ifequal a 'i \"love\" you' %}yes{% else %}no{% endifequal %}" , { 'a' : 'i love you' } , "no" ) , : ( r"{% ifequal a 'I\'m happy' %}yes{% else %}no{% endifequal %}" , { 'a' : "I'm happy" } , "yes" ) , : ( r"{% ifequal a 'slash\man' %}yes{% else %}no{% endifequal %}" , { 'a' : r"slash\man" } , "yes" ) , : ( r"{% ifequal a 'slash\man' %}yes{% else %}no{% endifequal %}" , { 'a' : r"slashman" } , "no" ) , : ( '{% ifequal x 5 %}yes{% endifequal %}' , { 'x' : '5' } , '' ) , : ( '{% ifequal x 5 %}yes{% endifequal %}' , { 'x' : 5 } , 'yes' ) , : ( '{% ifequal x 5.2 %}yes{% endifequal %}' , { 'x' : 5 } , '' ) , : ( '{% ifequal x 5.2 %}yes{% endifequal %}' , { 'x' : 5.2 } , 'yes' ) , : ( '{% ifequal x 0.2 %}yes{% endifequal %}' , { 'x' : .2 } , 'yes' ) , : ( '{% ifequal x .2 %}yes{% endifequal %}' , { 'x' : .2 } , 'yes' ) , : ( '{% ifequal x 2. %}yes{% endifequal %}' , { 'x' : 2 } , '' ) , : ( '{% ifequal x "5" %}yes{% endifequal %}' , { 'x' : 5 } , '' ) , : ( '{% ifequal x "5" %}yes{% endifequal %}' , { 'x' : '5' } , 'yes' ) , : ( '{% ifequal x -5 %}yes{% endifequal %}' , { 'x' : - 5 } , 'yes' ) , : ( '{% ifequal x -5.2 %}yes{% endifequal %}' , { 'x' : - 5.2 } , 'yes' ) , : ( '{% ifequal x +5 %}yes{% endifequal %}' , { 'x' : 5 } , 'yes' ) , : ( '{% ifequal a|upper "A" %}x{% endifequal %}' , { 'a' : 'a' } , 'x' ) , : ( '{% ifequal "A" a|upper %}x{% endifequal %}' , { 'a' : 'a' } , 'x' ) , : ( '{% ifequal a|upper b|upper %}x{% endifequal %}' , { 'a' : 'x' , 'b' : 'X' } , 'x' ) , : ( '{% ifequal x|slice:"1" "a" %}x{% endifequal %}' , { 'x' : 'aaa' } , 'x' ) , : ( '{% ifequal x|slice:"1"|upper "A" %}x{% endifequal %}' , { 'x' : 'aaa' } , 'x' ) , : ( "{% ifnotequal a b %}yes{% endifnotequal %}" , { "a" : 1 , "b" : 2 } , "yes" ) , : ( "{% ifnotequal a b %}yes{% endifnotequal %}" , { "a" : 1 , "b" : 1 } , "" ) , : ( "{% ifnotequal a b %}yes{% else %}no{% endifnotequal %}" , { "a" : 1 , "b" : 2 } , "yes" ) , : ( "{% ifnotequal a b %}yes{% else %}no{% endifnotequal %}" , { "a" : 1 , "b" : 1 } , "no" ) , : ( '{% include "basic-syntax01" %}' , { } , "something cool" ) , : ( '{% include "basic-syntax02" %}' , { 'headline' : 'Included' } , "Included" ) , : ( '{% include template_name %}' , { 'template_name' : 'basic-syntax02' , 'headline' : 'Included' } , "Included" ) , : ( 'a{% include "nonexistent" %}b' , { } , ( "ab" , "ab" , template . TemplateDoesNotExist ) ) , : ( 'template with a space' , { } , 'template with a space' ) , : ( '{% include "include 05"%}' , { } , 'template with a space' ) , : ( '{% include "basic-syntax02" with headline="Inline" %}' , { 'headline' : 'Included' } , 'Inline' ) , : ( '{% include headline with headline="Dynamic" %}' , { 'headline' : 'basic-syntax02' } , 'Dynamic' ) , : ( '{{ first }}--{% include "basic-syntax03" with first=second|lower|upper second=first|upper %}--{{ second }}' , { 'first' : 'Ul' , 'second' : 'lU' } , 'Ul--LU --- UL--lU' ) , : ( '{% include "basic-syntax03" only %}' , { 'first' : '1' } , ( ' --- ' , 'INVALID --- INVALID' ) ) , : ( '{% include "basic-syntax03" only with second=2 %}' , { 'first' : '1' } , ( ' --- 2' , 'INVALID --- 2' ) ) , : ( '{% include "basic-syntax03" with first=1 only %}' , { 'second' : '2' } , ( '1 --- ' , '1 --- INVALID' ) ) , : ( '{% autoescape off %}{% include "basic-syntax03" %}{% endautoescape %}' , { 'first' : '&' } , ( '& --- ' , '& --- INVALID' ) ) , : ( '{% autoescape off %}{% include "basic-syntax03" with first=var1 only %}{% endautoescape %}' , { 'var1' : '&' } , ( '& --- ' , '& --- INVALID' ) ) , : ( '{% include "basic-syntax01" with %}' , { } , template . TemplateSyntaxError ) , : ( '{% include "basic-syntax01" with "no key" %}' , { } , template . TemplateSyntaxError ) , : ( '{% include "basic-syntax01" with dotted.arg="error" %}' , { } , template . TemplateSyntaxError ) , : ( '{% include "basic-syntax01" something_random %}' , { } , template . TemplateSyntaxError ) , : ( '{% include "basic-syntax01" foo="duplicate" foo="key" %}' , { } , template . TemplateSyntaxError ) , : ( '{% include "basic-syntax01" only only %}' , { } , template . TemplateSyntaxError ) , : ( '{% load bad_tag %}{% badtag %}' , { } , RuntimeError ) , : ( '{% load broken_tag %}' , { } , template . TemplateSyntaxError ) , : ( '{% include "include-fail1" %}' , { } , ( '' , '' , RuntimeError ) ) , : ( '{% include "include-fail2" %}' , { } , ( '' , '' , template . TemplateSyntaxError ) ) , : ( '{% include failed_include %}' , { 'failed_include' : 'include-fail1' } , ( '' , '' , RuntimeError ) ) , : ( '{% include failed_include %}' , { 'failed_include' : 'include-fail2' } , ( '' , '' , template . TemplateSyntaxError ) ) , : ( "1{% block first %}_{% block second %}2{% endblock second %}_{% endblock first %}3" , { } , '1_2_3' ) , : ( "1{% block first %}_{% block second %}2{% endblock first %}_{% endblock second %}3" , { } , template . TemplateSyntaxError ) , : ( "1{% block first %}_{% block second %}2{% endblock %}_{% endblock second %}3" , { } , template . TemplateSyntaxError ) , : ( "1{% block first %}_{% block second %}2{% endblock second %}_{% endblock third %}3" , { } , template . TemplateSyntaxError ) , : ( "1{% block first %}_{% block second %}2{% endblock first %}" , { } , template . TemplateSyntaxError ) , : ( "1{% block first %}_{% block second %}2{% endblock %}_{% endblock first %}3" , { } , '1_2_3' ) , : ( "1{% block first %}_{% block second %}2{% endblock second %}_{% endblock %}3" , { } , '1_2_3' ) , : ( "1{% block first %}&{% endblock %}3{% block second %}_{% endblock %}" , { } , '1&3_' ) , : ( "{% extends 'inheritance01' %}{% block first %}2{% endblock %}{% block second %}4{% endblock %}" , { } , '1234' ) , : ( "{% extends 'inheritance02' %}" , { } , '1234' ) , : ( "{% extends 'inheritance01' %}" , { } , '1&3_' ) , : ( '{% extends "inheritance02" %}' , { } , '1234' ) , : ( "{% extends foo %}" , { 'foo' : 'inheritance02' } , '1234' ) , : ( "{% extends 'inheritance01' %}{% block second %}5{% endblock %}" , { } , '1&35' ) , : ( "{% extends 'inheritance02' %}{% block second %}5{% endblock %}" , { } , '1235' ) , : ( "{% extends 'inheritance04' %}" , { } , '1&3_' ) , : ( "{% extends 'inheritance04' %} " , { } , '1&3_' ) , : ( "{% extends 'inheritance04' %}{% block first %}2{% endblock %}{% block second %}4{% endblock %}" , { } , '1234' ) , : ( "{% extends 'inheritance07' %}{% block first %}2{% endblock %}" , { } , '1235' ) , : ( "{% extends 'inheritance02' %}{% block first %}a{% endblock %}{% block second %}b{% endblock %}" , { } , '1a3b' ) , : ( "{% extends 'inheritance01' %}{% block newblock %}NO DISPLAY{% endblock %}" , { } , '1&3_' ) , : ( "{% extends 'inheritance01' %}{% block first %}2{% block inner %}inner{% endblock %}{% endblock %}" , { } , '12inner3_' ) , : ( "{% extends 'inheritance15' %}{% block inner %}out{% endblock %}" , { } , '12out3_' ) , : ( "{% load testtags %}{% block first %}1234{% endblock %}" , { } , '1234' ) , : ( "{% load testtags %}{% echo this that theother %}5678" , { } , 'this that theother5678' ) , : ( "{% extends 'inheritance01' %}{% block first %}{% load testtags %}{% echo 400 %}5678{% endblock %}" , { } , '140056783_' ) , : ( "{% extends 'inheritance01' %}{% block first %}{{ block.super }}a{% endblock %}" , { } , '1&a3_' ) , : ( "{% extends 'inheritance02' %}{% block first %}{{ block.super }}a{% endblock %}" , { } , '12a34' ) , : ( "{% extends 'inheritance04' %}{% block first %}{{ block.super }}a{% endblock %}" , { } , '1&a3_' ) , : ( "{% extends 'inheritance20' %}{% block first %}{{ block.super }}b{% endblock %}" , { } , '1&ab3_' ) , : ( "{% extends context_template %}{% block first %}2{% endblock %}{% block second %}4{% endblock %}" , { 'context_template' : template . Template ( "1{% block first %}_{% endblock %}3{% block second %}_{% endblock %}" ) } , '1234' ) , : ( "{% extends context_template.1 %}{% block first %}2{% endblock %}{% block second %}4{% endblock %}" , { 'context_template' : [ template . Template ( "Wrong" ) , template . Template ( "1{% block first %}_{% endblock %}3{% block second %}_{% endblock %}" ) ] } , '1234' ) , : ( "no tags" , { } , 'no tags' ) , : ( "{% extends 'inheritance26' %}" , { } , 'no tags' ) , : ( "{% block first %}!{% endblock %}" , { } , '!' ) , : ( "{% extends 'inheritance 28' %}" , { } , '!' ) , : ( "1{% if optional %}{% block opt %}2{% endblock %}{% endif %}3" , { 'optional' : True } , '123' ) , : ( "{% extends 'inheritance30' %}{% block opt %}two{% endblock %}" , { 'optional' : True } , '1two3' ) , : ( "{% extends 'inheritance30' %}{% block opt %}two{% endblock %}" , { } , '13' ) , : ( "1{% ifequal optional 1 %}{% block opt %}2{% endblock %}{% endifequal %}3" , { 'optional' : 1 } , '123' ) , : ( "{% extends 'inheritance33' %}{% block opt %}two{% endblock %}" , { 'optional' : 1 } , '1two3' ) , : ( "{% extends 'inheritance33' %}{% block opt %}two{% endblock %}" , { 'optional' : 2 } , '13' ) , : ( "{% for n in numbers %}_{% block opt %}{{ n }}{% endblock %}{% endfor %}_" , { 'numbers' : '123' } , '_1_2_3_' ) , : ( "{% extends 'inheritance36' %}{% block opt %}X{% endblock %}" , { 'numbers' : '123' } , '_X_X_X_' ) , : ( "{% extends 'inheritance36' %}{% block opt %}X{% endblock %}" , { } , '_' ) , : ( "{% extends 'inheritance30' %}{% block opt %}new{{ block.super }}{% endblock %}" , { 'optional' : True } , '1new23' ) , : ( "{% extends 'inheritance33' %}{% block opt %}new{{ block.super }}{% endblock %}" , { 'optional' : 1 } , '1new23' ) , : ( "{% extends 'inheritance36' %}{% block opt %}new{{ block.super }}{% endblock %}" , { 'numbers' : '123' } , '_new1_new2_new3_' ) , : ( "{% load testtags subpackage.echo %}{% echo test %} {% echo2 \"test\" %}" , { } , "test test" ) , : ( "{% load subpackage.echo %}{% echo2 \"test\" %}" , { } , "test" ) , : ( "{% load echo from testtags %}{% echo this that theother %}" , { } , 'this that theother' ) , : ( "{% load echo other_echo from testtags %}{% echo this that theother %} {% other_echo and another thing %}" , { } , 'this that theother and another thing' ) , : ( "{% load echo upper from testtags %}{% echo this that theother %} {{ statement|upper }}" , { 'statement' : 'not shouting' } , 'this that theother NOT SHOUTING' ) , : ( "{% load echo2 from subpackage.echo %}{% echo2 \"test\" %}" , { } , "test" ) , : ( "{% load echo other_echo bad_tag from testtags %}" , { } , template . TemplateSyntaxError ) , : ( "{% load echo other_echo bad_tag from %}" , { } , template . TemplateSyntaxError ) , : ( "{% load from testtags %}" , { } , template . TemplateSyntaxError ) , : ( "{% load echo from bad_library %}" , { } , template . TemplateSyntaxError ) , : ( "{% load subpackage.echo_invalid %}" , { } , template . TemplateSyntaxError ) , : ( "{% load subpackage.missing %}" , { } , template . TemplateSyntaxError ) , : ( "{% spaceless %} <b> <i> text </i> </b> {% endspaceless %}" , { } , "<b><i> text </i></b>" ) , : ( "{% spaceless %} <b> \n <i> text </i> \n </b> {% endspaceless %}" , { } , "<b><i> text </i></b>" ) , : ( "{% spaceless %}<b><i>text</i></b>{% endspaceless %}" , { } , "<b><i>text</i></b>" ) , : ( "{% spaceless %}<b> <i>{{ text }}</i> </b>{% endspaceless %}" , { 'text' : 'This & that' } , "<b><i>This &amp; that</i></b>" ) , : ( "{% autoescape off %}{% spaceless %}<b> <i>{{ text }}</i> </b>{% endspaceless %}{% endautoescape %}" , { 'text' : 'This & that' } , "<b><i>This & that</i></b>" ) , : ( "{% spaceless %}<b> <i>{{ text|safe }}</i> </b>{% endspaceless %}" , { 'text' : 'This & that' } , "<b><i>This & that</i></b>" ) , : ( "{% load i18n %}{% trans 'xxxyyyxxx' %}" , { } , "xxxyyyxxx" ) , : ( '{% load i18n %}{% trans "xxxyyyxxx" %}' , { } , "xxxyyyxxx" ) , : ( '{% load i18n %}{% blocktrans %}{{ anton }}{% endblocktrans %}' , { 'anton' : '\xc3\x85' } , u"Å" ) , : ( '{% load i18n %}{% blocktrans with berta=anton|lower %}{{ berta }}{% endblocktrans %}' , { 'anton' : '\xc3\x85' } , u'å' ) , : ( '{% load i18n %}{% blocktrans with anton|lower as berta %}{{ berta }}{% endblocktrans %}' , { 'anton' : '\xc3\x85' } , u'å' ) , : ( '{% load i18n %}{% blocktrans %}xxx{{ anton }}xxx{% endblocktrans %}' , { 'anton' : 'yyy' } , "xxxyyyxxx" ) , : ( '{% load i18n %}{% trans "Page not found" %}' , { 'LANGUAGE_CODE' : 'de' } , "Seite nicht gefunden" ) , : ( '{% load i18n %}{% blocktrans count counter=number %}singular{% plural %}{{ counter }} plural{% endblocktrans %}' , { 'number' : 1 } , "singular" ) , : ( '{% load i18n %}{% blocktrans count number as counter %}singular{% plural %}{{ counter }} plural{% endblocktrans %}' , { 'number' : 1 } , "singular" ) , : ( '{% load i18n %}{% blocktrans count number as counter %}singular{% plural %}{{ counter }} plural{% endblocktrans %}' , { 'number' : 2 } , "2 plural" ) , : ( '{% load i18n %}{% blocktrans count counter=number %}singular{% plural %}{{ counter }} plural{% endblocktrans %}' , { 'number' : 2 } , "2 plural" ) , : ( '{% load i18n %}{% trans "Page not found" noop %}' , { 'LANGUAGE_CODE' : 'de' } , "Page not found" ) , : ( '{{ bool|yesno:_("yes,no,maybe") }}' , { 'bool' : True , 'LANGUAGE_CODE' : 'de' } , 'Ja' ) , : ( '{{ bool|yesno:"ja,nein" }}' , { 'bool' : True } , 'ja' ) , : ( '{% load i18n %}{% get_available_languages as langs %}{% for lang in langs %}{% ifequal lang.0 "de" %}{{ lang.0 }}{% endifequal %}{% endfor %}' , { } , 'de' ) , : ( '{{ _("Password") }}' , { 'LANGUAGE_CODE' : 'de' } , 'Passwort' ) , : ( '{% cycle "foo" _("Password") _(\'Password\') as c %} {% cycle c %} {% cycle c %}' , { 'LANGUAGE_CODE' : 'de' } , 'foo Passwort Passwort' ) , : ( '{{ absent|default:_("Password") }}' , { 'LANGUAGE_CODE' : 'de' , 'absent' : "" } , 'Passwort' ) , : ( '{{ _("<") }}' , { 'LANGUAGE_CODE' : 'de' } , '<' ) , : ( '{% load i18n %}{% blocktrans with berta=anton|escape %}{{ berta }}{% endblocktrans %}' , { 'anton' : 'α & β' } , u'α &amp; β' ) , : ( '{% load i18n %}{% blocktrans with berta=anton|force_escape %}{{ berta }}{% endblocktrans %}' , { 'anton' : 'α & β' } , u'α &amp; β' ) , : ( '{% load i18n %}{% blocktrans %}{{ andrew }}{% endblocktrans %}' , { 'andrew' : 'a & b' } , u'a &amp; b' ) , : ( '{% load i18n %}{% trans andrew %}' , { 'andrew' : 'a & b' } , u'a &amp; b' ) , : ( '{% load i18n %}{% blocktrans %}{{ andrew }}{% endblocktrans %}' , { 'andrew' : mark_safe ( 'a & b' ) } , u'a & b' ) , : ( '{% load i18n %}{% trans andrew %}' , { 'andrew' : mark_safe ( 'a & b' ) } , u'a & b' ) , : ( '{% load i18n %}{% blocktrans with anton|escape as berta %}{{ berta }}{% endblocktrans %}' , { 'anton' : 'α & β' } , u'α &amp; β' ) , : ( '{% load i18n %}{% blocktrans with anton|force_escape as berta %}{{ berta }}{% endblocktrans %}' , { 'anton' : 'α & β' } , u'α &amp; β' ) , : ( '{% load i18n %}{% trans "Page not found"|capfirst|slice:"6:" %}' , { 'LANGUAGE_CODE' : 'de' } , u'nicht gefunden' ) , : ( "{% load i18n %}{% trans 'Page not found'|upper %}" , { 'LANGUAGE_CODE' : 'de' } , u'SEITE NICHT GEFUNDEN' ) , : ( '{% load i18n %}{% trans somevar|upper %}' , { 'somevar' : 'Page not found' , 'LANGUAGE_CODE' : 'de' } , u'SEITE NICHT GEFUNDEN' ) , : ( '{% load i18n %}{% blocktrans with extra_field=myextra_field count counter=number %}singular {{ extra_field }}{% plural %}plural{% endblocktrans %}' , { 'number' : 1 , 'myextra_field' : 'test' } , "singular test" ) , : ( '{% load i18n %}{% blocktrans with myextra_field as extra_field count number as counter %}singular {{ extra_field }}{% plural %}plural{% endblocktrans %}' , { 'number' : 1 , 'myextra_field' : 'test' } , "singular test" ) , : ( '{% load i18n %}{% blocktrans count counter=number %}{{ counter }} result{% plural %}{{ counter }} results{% endblocktrans %}' , { 'number' : 1 , 'LANGUAGE_CODE' : 'ru' } , u'1 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442' ) , : ( '{% load i18n %}{% blocktrans count number as counter %}{{ counter }} result{% plural %}{{ counter }} results{% endblocktrans %}' , { 'number' : 1 , 'LANGUAGE_CODE' : 'ru' } , u'1 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442' ) , : ( '{% load i18n %}{% blocktrans with a=anton b=berta %}{{ a }} + {{ b }}{% endblocktrans %}' , { 'anton' : 'α' , 'berta' : 'β' } , u'α + β' ) , : ( '{% load i18n %}{% blocktrans with anton as a and berta as b %}{{ a }} + {{ b }}{% endblocktrans %}' , { 'anton' : 'α' , 'berta' : 'β' } , u'α + β' ) , : ( '{% load i18n %}{% get_language_info for "de" as l %}{{ l.code }}: {{ l.name }}/{{ l.name_local }} bidi={{ l.bidi }}' , { } , 'de: German/Deutsch bidi=False' ) , : ( '{% load i18n %}{% get_language_info for LANGUAGE_CODE as l %}{{ l.code }}: {{ l.name }}/{{ l.name_local }} bidi={{ l.bidi }}' , { 'LANGUAGE_CODE' : 'fi' } , 'fi: Finnish/suomi bidi=False' ) , : ( '{% load i18n %}{% get_language_info_list for langcodes as langs %}{% for l in langs %}{{ l.code }}: {{ l.name }}/{{ l.name_local }} bidi={{ l.bidi }}; {% endfor %}' , { 'langcodes' : [ 'it' , 'no' ] } , u'it: Italian/italiano bidi=False; no: Norwegian/Norsk bidi=False; ' ) , : ( '{% load i18n %}{% get_language_info_list for langcodes as langs %}{% for l in langs %}{{ l.code }}: {{ l.name }}/{{ l.name_local }} bidi={{ l.bidi }}; {% endfor %}' , { 'langcodes' : ( ( 'sl' , 'Slovenian' ) , ( 'fa' , 'Persian' ) ) } , u'sl: Slovenian/Sloven\u0161\u010dina bidi=False; fa: Persian/\u0641\u0627\u0631\u0633\u06cc bidi=True; ' ) , : ( '{% load i18n %}{{ "hu"|language_name }} {{ "hu"|language_name_local }} {{ "hu"|language_bidi }}' , { } , u'Hungarian Magyar False' ) , : ( '{% load i18n %}{{ langcode|language_name }} {{ langcode|language_name_local }} {{ langcode|language_bidi }}' , { 'langcode' : 'nl' } , u'Dutch Nederlands False' ) , : ( '{% load i18n %}{% blocktrans %}{{ missing }}{% endblocktrans %}' , { } , u'' ) , : ( '{% load i18n %}{% trans "Page not found" as page_not_found %}{{ page_not_found }}' , { 'LANGUAGE_CODE' : 'de' } , "Seite nicht gefunden" ) , : ( '{% load i18n %}{% trans "Page not found" noop as page_not_found %}{{ page_not_found }}' , { 'LANGUAGE_CODE' : 'de' } , "Page not found" ) , : ( '{% load i18n %}{% trans "Page not found" as page_not_found noop %}{{ page_not_found }}' , { 'LANGUAGE_CODE' : 'de' } , "Page not found" ) , : ( '{% load i18n %}{% trans "Page not found" as page_not_found %}{% blocktrans %}Error: {{ page_not_found }}{% endblocktrans %}' , { 'LANGUAGE_CODE' : 'de' } , "Error: Seite nicht gefunden" ) , : ( '{{ var|default:"Foo" }}' , { } , ( 'Foo' , 'INVALID' ) ) , : ( '{{ var|default_if_none:"Foo" }}' , { } , ( '' , 'INVALID' ) ) , : ( '{% for v in var %}({{ v }}){% endfor %}' , { } , '' ) , : ( '{% if var %}Yes{% else %}No{% endif %}' , { } , 'No' ) , : ( '{% if var|default:"Foo" %}Yes{% else %}No{% endif %}' , { } , 'Yes' ) , : ( '{{ var }}' , { } , ( '' , ( 'INVALID %s' , 'var' ) ) ) , : ( '{{ var.prop }}' , { 'var' : { } } , ( '' , ( 'INVALID %s' , 'var.prop' ) ) ) , : ( """ Hello, boys. How are you gentlemen. """ , { } , ) , : ( '{% regroup data by bar as grouped %}' , { 'data' : [ { 'foo' : 'c' , 'bar' : 1 } , { 'foo' : 'd' , 'bar' : 1 } , { 'foo' : 'a' , 'bar' : 2 } , { 'foo' : 'b' , 'bar' : 2 } , { 'foo' : 'x' , 'bar' : 3 } ] } , ) , : ( '{% regroup data by bar as grouped %}' , { } , '' ) , : ( '{% regroup data by at|date:"m" as grouped %}' , { 'data' : [ { 'at' : date ( 2012 , 2 , 14 ) } , { 'at' : date ( 2012 , 2 , 28 ) } , { 'at' : date ( 2012 , 7 , 4 ) } ] } , ) , : ( '{% regroup data by bar|join:"" as grouped %}' , { 'data' : [ { 'foo' : 'x' , 'bar' : [ 'ab' , 'c' ] } , { 'foo' : 'y' , 'bar' : [ 'a' , 'bc' ] } , { 'foo' : 'z' , 'bar' : [ 'a' , 'd' ] } ] } , ) , : ( '{%% ssi %s %%}' % os . path . join ( basedir , 'templates' , 'ssi_include.html' ) , { } , 'This is for testing an ssi include. {{ test }}\n' ) , : ( '{%% ssi %s %%}' % os . path . join ( basedir , 'not_here' ) , { } , '' ) , : ( '{%% ssi %s parsed %%}' % os . path . join ( basedir , 'templates' , 'ssi_include.html' ) , { 'test' : 'Look ma! It parsed!' } , 'This is for testing an ssi include. Look ma! It parsed!\n' ) , : ( '{%% ssi %s parsed %%}' % os . path . join ( basedir , 'not_here' ) , { 'test' : 'Look ma! It parsed!' } , '' ) , : ( '{%% ssi %s %%}' % os . path . join ( basedir , 'templates' , 'ssi include with spaces.html' ) , { } , template . TemplateSyntaxError ) , : ( '{%% ssi %s parsed %%}' % os . path . join ( basedir , 'templates' , 'ssi include with spaces.html' ) , { 'test' : 'Look ma! It parsed!' } , template . TemplateSyntaxError ) , : ( '{%% load ssi from future %%}{%% ssi "%s" %%}' % os . path . join ( basedir , 'templates' , 'ssi_include.html' ) , { } , 'This is for testing an ssi include. {{ test }}\n' ) , : ( '{%% load ssi from future %%}{%% ssi "%s" %%}' % os . path . join ( basedir , 'not_here' ) , { } , '' ) , : ( "{%% load ssi from future %%}{%% ssi '%s' %%}" % os . path . join ( basedir , 'not_here' ) , { } , '' ) , : ( '{% load ssi from future %}{% ssi ssi_file %}' , { 'ssi_file' : os . path . join ( basedir , 'templates' , 'ssi_include.html' ) } , 'This is for testing an ssi include. {{ test }}\n' ) , : ( '{% load ssi from future %}{% ssi ssi_file %}' , { 'ssi_file' : 'no_file' } , '' ) , : ( '{%% load ssi from future %%}{%% ssi "%s" parsed %%}' % os . path . join ( basedir , 'templates' , 'ssi_include.html' ) , { 'test' : 'Look ma! It parsed!' } , 'This is for testing an ssi include. Look ma! It parsed!\n' ) , : ( '{%% load ssi from future %%}{%% ssi "%s" parsed %%}' % os . path . join ( basedir , 'not_here' ) , { 'test' : 'Look ma! It parsed!' } , '' ) , : ( '{%% load ssi from future %%}{%% ssi "%s" %%}' % os . path . join ( basedir , 'templates' , 'ssi include with spaces.html' ) , { } , 'This is for testing an ssi include with spaces in its name. {{ test }}\n' ) , : ( '{%% load ssi from future %%}{%% ssi "%s" parsed %%}' % os . path . join ( basedir , 'templates' , 'ssi include with spaces.html' ) , { 'test' : 'Look ma! It parsed!' } , 'This is for testing an ssi include with spaces in its name. Look ma! It parsed!\n' ) , : ( '{% templatetag openblock %}' , { } , '{%' ) , : ( '{% templatetag closeblock %}' , { } , '%}' ) , : ( '{% templatetag openvariable %}' , { } , '{{' ) , : ( '{% templatetag closevariable %}' , { } , '}}' ) , : ( '{% templatetag %}' , { } , template . TemplateSyntaxError ) , : ( '{% templatetag foo %}' , { } , template . TemplateSyntaxError ) , : ( '{% templatetag openbrace %}' , { } , '{' ) , : ( '{% templatetag closebrace %}' , { } , '}' ) , : ( '{% templatetag openbrace %}{% templatetag openbrace %}' , { } , '{{' ) , : ( '{% templatetag closebrace %}{% templatetag closebrace %}' , { } , '}}' ) , : ( '{% templatetag opencomment %}' , { } , '{#' ) , : ( '{% templatetag closecomment %}' , { } , '#}' ) , : ( '{% load custom %}{% minusone 7 %}' , { } , '6' ) , : ( '{% load custom %}{% minustwo 7 %}' , { } , '5' ) , : ( '{% load custom %}{% minustwo_overridden_name 7 %}' , { } , template . TemplateSyntaxError ) , : ( '{% widthratio a b 0 %}' , { 'a' : 50 , 'b' : 100 } , '0' ) , : ( '{% widthratio a b 100 %}' , { 'a' : 0 , 'b' : 0 } , '0' ) , : ( '{% widthratio a b 100 %}' , { 'a' : 0 , 'b' : 100 } , '0' ) , : ( '{% widthratio a b 100 %}' , { 'a' : 50 , 'b' : 100 } , '50' ) , : ( '{% widthratio a b 100 %}' , { 'a' : 100 , 'b' : 100 } , '100' ) , : ( '{% widthratio a b 100 %}' , { 'a' : 50 , 'b' : 80 } , '63' ) , : ( '{% widthratio a b 100 %}' , { 'a' : 50 , 'b' : 70 } , '71' ) , : ( '{% widthratio %}' , { } , template . TemplateSyntaxError ) , : ( '{% widthratio a b %}' , { 'a' : 50 , 'b' : 100 } , template . TemplateSyntaxError ) , : ( '{% widthratio a b 100.0 %}' , { 'a' : 50 , 'b' : 100 } , '50' ) , : ( '{% widthratio a b c %}' , { 'a' : 50 , 'b' : 100 , 'c' : 100 } , '50' ) , : ( '{% with key=dict.key %}{{ key }}{% endwith %}' , { 'dict' : { 'key' : 50 } } , '50' ) , : ( '{% with dict.key as key %}{{ key }}{% endwith %}' , { 'dict' : { 'key' : 50 } } , '50' ) , : ( '{{ key }}{% with key=dict.key %}{{ key }}-{{ dict.key }}-{{ key }}{% endwith %}{{ key }}' , { 'dict' : { 'key' : 50 } } , ( '50-50-50' , 'INVALID50-50-50INVALID' ) ) , : ( '{{ key }}{% with dict.key as key %}{{ key }}-{{ dict.key }}-{{ key }}{% endwith %}{{ key }}' , { 'dict' : { 'key' : 50 } } , ( '50-50-50' , 'INVALID50-50-50INVALID' ) ) , : ( '{% with a=alpha b=beta %}{{ a }}{{ b }}{% endwith %}' , { 'alpha' : 'A' , 'beta' : 'B' } , 'AB' ) , : ( '{% with dict.key xx key %}{{ key }}{% endwith %}' , { 'dict' : { 'key' : 50 } } , template . TemplateSyntaxError ) , : ( '{% with dict.key as %}{{ key }}{% endwith %}' , { 'dict' : { 'key' : 50 } } , template . TemplateSyntaxError ) , : ( '{% now "j n Y" %}' , { } , "%d %d %d" % ( datetime . now ( ) . day , datetime . now ( ) . month , datetime . now ( ) . year ) ) , : ( '{% now "DATE_FORMAT" %}' , { } , date_format ( datetime . now ( ) ) ) , : ( "{% now 'j n Y' %}" , { } , "%d %d %d" % ( datetime . now ( ) . day , datetime . now ( ) . month , datetime . now ( ) . year ) ) , : ( "{% now 'DATE_FORMAT' %}" , { } , date_format ( datetime . now ( ) ) ) , : ( '''{% now 'j "n" Y'%}''' , { } , '''%d "%d" %d''' % ( datetime . now ( ) . day , datetime . now ( ) . month , datetime . now ( ) . year ) ) , : ( '''{% now "j 'n' Y"%}''' , { } , '''%d '%d' %d''' % ( datetime . now ( ) . day , datetime . now ( ) . month , datetime . now ( ) . year ) ) , : ( '{% url regressiontests.templates.views.client_action id=client.id,action="update" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( '{% url regressiontests.templates.views.client_action client.id,"update" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( "{% url regressiontests.templates.views.client_action id=client.id,action='update' %}" , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( "{% url regressiontests.templates.views.client_action client.id,'update' %}" , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id,action="two words" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/two%20words/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id, action=arg|join:"-" %}' , { 'client' : { 'id' : 1 } , 'arg' : [ 'a' , 'b' ] } , '/url_tag/client/1/a-b/' ) , : ( '{% url regressiontests.templates.views.client_action client.id, arg|join:"-" %}' , { 'client' : { 'id' : 1 } , 'arg' : [ 'a' , 'b' ] } , '/url_tag/client/1/a-b/' ) , : ( '{% url regressiontests.templates.views.client_action action="update",id="1" %}' , { } , '/url_tag/client/1/update/' ) , : ( "{% url regressiontests.templates.views.client_action action='update',id='1' %}" , { } , '/url_tag/client/1/update/' ) , : ( '{% url regressiontests.templates.views.client_action client_id=client.my_id,action=action %}' , { 'client' : { 'my_id' : 1 } , 'action' : 'update' } , '/url_tag/client/1/update/' ) , : ( '{% url regressiontests.templates.views.client client.id %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id action="update" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( '{% url regressiontests.templates.views.client_action client.id "update" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( "{% url regressiontests.templates.views.client_action id=client.id action='update' %}" , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( "{% url regressiontests.templates.views.client_action client.id 'update' %}" , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( '{% url regressiontests.templates.views.index %}' , { } , '/url_tag/' ) , : ( '{% url named.client client.id %}' , { 'client' : { 'id' : 1 } } , '/url_tag/named-client/1/' ) , : ( u'{% url метка_оператора v %}' , { 'v' : u'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% url метка_оператора_2 tag=v %}' , { 'v' : u'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% url regressiontests.templates.views.client2 tag=v %}' , { 'v' : u'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% url метка_оператора v %}' , { 'v' : 'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% url метка_оператора_2 tag=v %}' , { 'v' : 'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id action="two words" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/two%20words/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id action="==" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/==/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id action="," %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/,/' ) , : ( '{% url regressiontests.templates.views.client_action id=client.id action=arg|join:"-" %}' , { 'client' : { 'id' : 1 } , 'arg' : [ 'a' , 'b' ] } , '/url_tag/client/1/a-b/' ) , : ( '{% url regressiontests.templates.views.client_action client.id arg|join:"-" %}' , { 'client' : { 'id' : 1 } , 'arg' : [ 'a' , 'b' ] } , '/url_tag/client/1/a-b/' ) , : ( '{% url regressiontests.templates.views.client_action 12 "test" %}' , { } , '/url_tag/client/12/test/' ) , : ( '{% url regressiontests.templates.views.client "1,2" %}' , { } , '/url_tag/client/1,2/' ) , : ( '{% url %}' , { } , template . TemplateSyntaxError ) , : ( '{% url no_such_view %}' , { } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% url regressiontests.templates.views.client %}' , { } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% url view id, %}' , { } , template . TemplateSyntaxError ) , : ( '{% url view id= %}' , { } , template . TemplateSyntaxError ) , : ( '{% url view a.id=id %}' , { } , template . TemplateSyntaxError ) , : ( '{% url view a.id!id %}' , { } , template . TemplateSyntaxError ) , : ( '{% url view id="unterminatedstring %}' , { } , template . TemplateSyntaxError ) , : ( '{% url view id=", %}' , { } , template . TemplateSyntaxError ) , : ( '{% url regressiontests.templates.views.index as url %}' , { } , '' ) , : ( '{% url regressiontests.templates.views.index as url %}{{ url }}' , { } , '/url_tag/' ) , : ( '{% url no_such_view as url %}{{ url }}' , { } , '' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client" client.id %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" id=client.id action="update" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" client.id "update" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( "{% load url from future %}{% url 'regressiontests.templates.views.client_action' id=client.id action='update' %}" , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( "{% load url from future %}{% url 'regressiontests.templates.views.client_action' client.id 'update' %}" , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/update/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.index" %}' , { } , '/url_tag/' ) , : ( '{% load url from future %}{% url "named.client" client.id %}' , { 'client' : { 'id' : 1 } } , '/url_tag/named-client/1/' ) , : ( u'{% load url from future %}{% url "метка_оператора" v %}' , { 'v' : u'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% load url from future %}{% url "метка_оператора_2" tag=v %}' , { 'v' : u'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% load url from future %}{% url "regressiontests.templates.views.client2" tag=v %}' , { 'v' : u'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% load url from future %}{% url "метка_оператора" v %}' , { 'v' : 'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( u'{% load url from future %}{% url "метка_оператора_2" tag=v %}' , { 'v' : 'Ω' } , '/url_tag/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" id=client.id action="two words" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/two%20words/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" id=client.id action="==" %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/==/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" id=client.id action="," %}' , { 'client' : { 'id' : 1 } } , '/url_tag/client/1/,/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" id=client.id action=arg|join:"-" %}' , { 'client' : { 'id' : 1 } , 'arg' : [ 'a' , 'b' ] } , '/url_tag/client/1/a-b/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" client.id arg|join:"-" %}' , { 'client' : { 'id' : 1 } , 'arg' : [ 'a' , 'b' ] } , '/url_tag/client/1/a-b/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client_action" 12 "test" %}' , { } , '/url_tag/client/12/test/' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client" "1,2" %}' , { } , '/url_tag/client/1,2/' ) , : ( '{% load url from future %}{% url named_url client.id %}' , { 'named_url' : 'regressiontests.templates.views.client' , 'client' : { 'id' : 1 } } , '/url_tag/client/1/' ) , : ( '{% load url from future %}{% url url_name_in_var client.id %}' , { 'url_name_in_var' : 'named.client' , 'client' : { 'id' : 1 } } , '/url_tag/named-client/1/' ) , : ( '{% load url from future %}{% url %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "no_such_view" %}' , { } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.client" %}' , { } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% load url from future %}{% url "view" id, %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "view" id= %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "view" a.id=id %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "view" a.id!id %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "view" id="unterminatedstring %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "view" id=", %}' , { } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url named_url %}' , { } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% load url from future %}{% url named_url %}' , { 'named_url' : 'no_such_view' } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% load url from future %}{% url named_url %}' , { 'named_url' : 'regressiontests.templates.views.client' } , ( urlresolvers . NoReverseMatch , urlresolvers . NoReverseMatch ) ) , : ( '{% load url from future %}{% url named_url id, %}' , { 'named_url' : 'view' } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url named_url id= %}' , { 'named_url' : 'view' } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url named_url a.id=id %}' , { 'named_url' : 'view' } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url named_url a.id!id %}' , { 'named_url' : 'view' } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url named_url id="unterminatedstring %}' , { 'named_url' : 'view' } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url named_url id=", %}' , { 'named_url' : 'view' } , template . TemplateSyntaxError ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.index" as url %}' , { } , '' ) , : ( '{% load url from future %}{% url "regressiontests.templates.views.index" as url %}{{ url }}' , { } , '/url_tag/' ) , : ( '{% load url from future %}{% url "no_such_view" as url %}{{ url }}' , { } , '' ) , : ( '{% load cache %}{% cache 2 test %}cache03{% endcache %}' , { } , 'cache03' ) , : ( '{% load cache %}{% cache 2 test %}cache04{% endcache %}' , { } , 'cache03' ) , : ( '{% load cache %}{% cache 2 test foo %}cache05{% endcache %}' , { 'foo' : 1 } , 'cache05' ) , : ( '{% load cache %}{% cache 2 test foo %}cache06{% endcache %}' , { 'foo' : 2 } , 'cache06' ) , : ( '{% load cache %}{% cache 2 test foo %}cache07{% endcache %}' , { 'foo' : 1 } , 'cache05' ) , : ( '{% load cache %}{% cache time test foo %}cache08{% endcache %}' , { 'foo' : 2 , 'time' : 2 } , 'cache06' ) , : ( '{% load cache %}{% cache %}{% endcache %}' , { } , template . TemplateSyntaxError ) , : ( '{% load cache %}{% cache 1 %}{% endcache %}' , { } , template . TemplateSyntaxError ) , : ( '{% load cache %}{% cache foo bar %}{% endcache %}' , { } , template . TemplateSyntaxError ) , : ( '{% load cache %}{% cache foo bar %}{% endcache %}' , { 'foo' : 'fail' } , template . TemplateSyntaxError ) , : ( '{% load cache %}{% cache foo bar %}{% endcache %}' , { 'foo' : [ ] } , template . TemplateSyntaxError ) , : ( '{% load cache %}{% cache 1 foo bar %}{% endcache %}' , { 'foo' : 'foo' , 'bar' : 'with spaces' } , '' ) , : ( '{% load cache %}{% cache 10 long_cache_key poem %}Some Content{% endcache %}' , { 'poem' : 'Oh freddled gruntbuggly/Thy micturations are to me/As plurdled gabbleblotchits/On a lurgid bee/That mordiously hath bitled out/Its earted jurtles/Into a rancid festering/Or else I shall rend thee in the gobberwarts with my blurglecruncheon/See if I dont.' } , 'Some Content' ) , : ( "{% autoescape off %}hello{% endautoescape %}" , { } , "hello" ) , : ( "{% autoescape off %}{{ first }}{% endautoescape %}" , { "first" : "<b>hello</b>" } , "<b>hello</b>" ) , : ( "{% autoescape on %}{{ first }}{% endautoescape %}" , { "first" : "<b>hello</b>" } , "&lt;b&gt;hello&lt;/b&gt;" ) , : ( "{% autoescape off %}{{ first }} {% autoescape on%}{{ first }}{% endautoescape %}{% endautoescape %}" , { "first" : "<a>" } , "<a> &lt;a&gt;" ) , : ( "{% autoescape on %}{{ first }}{% endautoescape %}" , { "first" : "<b>first</b>" } , "&lt;b&gt;first&lt;/b&gt;" ) , : ( "{{ first }}" , { "first" : mark_safe ( "<b>first</b>" ) } , "<b>first</b>" ) , : ( "{% autoescape on %}{{ first }}{% endautoescape %}" , { "first" : mark_safe ( u"<b>Apple</b>" ) } , u"<b>Apple</b>" ) , : ( r'{% autoescape on %}{{ var|default_if_none:" endquote\" hah" }}{% endautoescape %}' , { "var" : None } , ' endquote" hah' ) , : ( r'{{ unsafe }}' , { 'unsafe' : filters . UnsafeClass ( ) } , 'you &amp; me' ) , : ( r'{{ safe }}' , { 'safe' : filters . SafeClass ( ) } , 'you &gt; me' ) , : ( "{{ first }}{% filter safe %}{{ first }} x<y{% endfilter %}" , { "first" : "<a>" } , template . TemplateSyntaxError ) , : ( '{% ifequal var "this & that" %}yes{% endifequal %}' , { "var" : "this & that" } , "yes" ) , : ( '{{ var|cut:"&" }}' , { "var" : "this & that" } , "this that" ) , : ( '{{ var|join:" & \" }}' , { "var" : ( "Tom" , "Dick" , "Harry" ) } , "Tom & Dick & Harry" ) , : ( '{{ "this & that" }}' , { } , "this & that" ) , : ( '{% for l in var %}{{ l }},{% endfor %}' , { 'var' : 'K&R' } , "K,&amp;,R," ) , : ( '{{ var.key }}' , { "var" : { "key" : "this & that" } } , "this &amp; that" ) , : ( '{% load static %}{% get_static_prefix %}' , { } , settings . STATIC_URL ) , : ( '{% load static %}{% get_static_prefix as static_prefix %}{{ static_prefix }}' , { } , settings . STATIC_URL ) , : ( '{% load static %}{% get_media_prefix %}' , { } , settings . MEDIA_URL ) , : ( '{% load static %}{% get_media_prefix as media_prefix %}{{ media_prefix }}' , { } , settings . MEDIA_URL ) , : ( '{% load static %}{% static "admin/base.css" %}' , { } , urljoin ( settings . STATIC_URL , 'admin/base.css' ) ) , : ( '{% load static %}{% static base_css %}' , { 'base_css' : 'admin/base.css' } , urljoin ( settings . STATIC_URL , 'admin/base.css' ) ) , } if ' ' in basedir : for test_name in 'old-ssi01' , 'old-ssi02' , 'old-ssi06' , 'old-ssi07' : tests [ test_name ] = tests [ test_name ] [ : - 1 ] + ( template . TemplateSyntaxError , ) return tests class TemplateTagLoading ( unittest . TestCase ) : def setUp ( self ) : self . old_path = sys . path [ : ] self . old_apps = settings . INSTALLED_APPS self . egg_dir = '%s/eggs' % os . path . dirname ( __file__ ) self . old_tag_modules = template_base . templatetags_modules template_base . templatetags_modules = [ ] def tearDown ( self ) : settings . INSTALLED_APPS = self . old_apps sys . path = self . old_path template_base . templatetags_modules = self . old_tag_modules def test_load_error ( self ) : ttext = "{% load broken_tag %}" self . assertRaises ( template . TemplateSyntaxError , template . Template , ttext ) try : template . Template ( ttext ) except template . TemplateSyntaxError , e : self . assertTrue ( 'ImportError' in e . args [ 0 ] ) self . assertTrue ( 'Xtemplate' in e . args [ 0 ] ) def test_load_error_egg ( self ) : ttext = "{% load broken_egg %}" egg_name = '%s/tagsegg.egg' % self . egg_dir sys . path . append ( egg_name ) settings . INSTALLED_APPS = ( 'tagsegg' , ) self . assertRaises ( template . TemplateSyntaxError , template . Template , ttext ) try : template . Template ( ttext ) except template . TemplateSyntaxError , e : self . assertTrue ( 'ImportError' in e . args [ 0 ] ) self . assertTrue ( 'Xtemplate' in e . args [ 0 ] ) def test_load_working_egg ( self ) : ttext = "{% load working_egg %}" egg_name = '%s/tagsegg.egg' % self . egg_dir sys . path . append ( egg_name ) settings . INSTALLED_APPS = ( 'tagsegg' , ) t = template . Template ( ttext ) class RequestContextTests ( BaseTemplateResponseTest ) : def setUp ( self ) : templates = { : Template ( '{{ var|default:"none" }}' ) , } setup_test_template_loader ( templates ) self . fake_request = RequestFactory ( ) . get ( '/' ) def tearDown ( self ) : restore_template_loaders ( ) def test_include_only ( self ) : ctx = RequestContext ( self . fake_request , { 'var' : 'parent' } ) self . assertEqual ( template . Template ( '{% include "child" %}' ) . render ( ctx ) , ) self . assertEqual ( template . Template ( '{% include "child" only %}' ) . render ( ctx ) , )
