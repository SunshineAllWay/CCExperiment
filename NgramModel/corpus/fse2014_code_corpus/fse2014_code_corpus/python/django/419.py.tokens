from __future__ import absolute_import from django . test import TestCase from . models import Source , Item class ReverseSingleRelatedTests ( TestCase ) : def test_reverse_single_related ( self ) : public_source = Source . objects . create ( is_public = True ) public_item = Item . objects . create ( source = public_source ) private_source = Source . objects . create ( is_public = False ) private_item = Item . objects . create ( source = private_source ) self . assertQuerysetEqual ( Source . objects . all ( ) , [ "<Source: Source object>" ] ) self . assertEqual ( public_item . source , public_source ) self . assertEqual ( private_item . source , private_source ) Source . objects . use_for_related_fields = True private_item = Item . objects . get ( pk = private_item . pk ) self . assertRaises ( Source . DoesNotExist , lambda : private_item . source )
