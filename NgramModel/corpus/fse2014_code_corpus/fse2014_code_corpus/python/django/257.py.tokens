from django . core . exceptions import ValidationError from django . forms . util import flatatt , ErrorDict , ErrorList from django . test import TestCase from django . utils . safestring import mark_safe from django . utils . translation import ugettext_lazy class FormsUtilTestCase ( TestCase ) : def test_flatatt ( self ) : self . assertEqual ( flatatt ( { 'id' : "header" } ) , u' id="header"' ) self . assertEqual ( flatatt ( { 'class' : "news" , 'title' : "Read this" } ) , u' class="news" title="Read this"' ) self . assertEqual ( flatatt ( { } ) , u'' ) def test_validation_error ( self ) : self . assertHTMLEqual ( str ( ErrorList ( ValidationError ( "There was an error." ) . messages ) ) , ) self . assertHTMLEqual ( unicode ( ErrorList ( ValidationError ( u"Not \u03C0." ) . messages ) ) , ) self . assertHTMLEqual ( str ( ErrorList ( ValidationError ( ugettext_lazy ( "Error." ) ) . messages ) ) , ) self . assertHTMLEqual ( str ( ErrorList ( ValidationError ( [ "Error one." , "Error two." ] ) . messages ) ) , ) self . assertHTMLEqual ( str ( ErrorList ( ValidationError ( [ "First error." , u"Not \u03C0." , ugettext_lazy ( "Error." ) ] ) . messages ) ) , ) class VeryBadError : def __unicode__ ( self ) : return u"A very bad error." self . assertHTMLEqual ( str ( ErrorList ( ValidationError ( VeryBadError ( ) ) . messages ) ) , ) example = 'Example of link: <a href="http://www.example.com/">example</a>' self . assertHTMLEqual ( str ( ErrorList ( [ example ] ) ) , ) self . assertHTMLEqual ( str ( ErrorList ( [ mark_safe ( example ) ] ) ) , ) self . assertHTMLEqual ( str ( ErrorDict ( { 'name' : example } ) ) , ) self . assertHTMLEqual ( str ( ErrorDict ( { 'name' : mark_safe ( example ) } ) ) , )
