from django . template import Node from django . template import TemplateSyntaxError , Library from django . utils import formats from django . utils . encoding import force_unicode register = Library ( ) @ register . filter ( is_safe = False ) def localize ( value ) : return force_unicode ( formats . localize ( value , use_l10n = True ) ) @ register . filter ( is_safe = False ) def unlocalize ( value ) : return force_unicode ( value ) class LocalizeNode ( Node ) : def __init__ ( self , nodelist , use_l10n ) : self . nodelist = nodelist self . use_l10n = use_l10n def __repr__ ( self ) : return "<LocalizeNode>" def render ( self , context ) : old_setting = context . use_l10n context . use_l10n = self . use_l10n output = self . nodelist . render ( context ) context . use_l10n = old_setting return output @ register . tag ( 'localize' ) def localize_tag ( parser , token ) : use_l10n = None bits = list ( token . split_contents ( ) ) if len ( bits ) == 1 : use_l10n = True elif len ( bits ) > 2 or bits [ 1 ] not in ( 'on' , 'off' ) : raise TemplateSyntaxError ( "%r argument should be 'on' or 'off'" % bits [ 0 ] ) else : use_l10n = bits [ 1 ] == 'on' nodelist = parser . parse ( ( 'endlocalize' , ) ) parser . delete_first_token ( ) return LocalizeNode ( nodelist , use_l10n )
