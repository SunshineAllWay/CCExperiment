from django . contrib . gis . db import models from django . contrib . gis . tests . utils import mysql , spatialite null_flag = not mysql class Country ( models . Model ) : name = models . CharField ( max_length = 30 ) mpoly = models . MultiPolygonField ( ) objects = models . GeoManager ( ) def __unicode__ ( self ) : return self . name class City ( models . Model ) : name = models . CharField ( max_length = 30 ) point = models . PointField ( ) objects = models . GeoManager ( ) def __unicode__ ( self ) : return self . name class PennsylvaniaCity ( City ) : county = models . CharField ( max_length = 30 ) founded = models . DateTimeField ( null = True ) objects = models . GeoManager ( ) class State ( models . Model ) : name = models . CharField ( max_length = 30 ) poly = models . PolygonField ( null = null_flag ) objects = models . GeoManager ( ) def __unicode__ ( self ) : return self . name class Track ( models . Model ) : name = models . CharField ( max_length = 30 ) line = models . LineStringField ( ) objects = models . GeoManager ( ) def __unicode__ ( self ) : return self . name if not spatialite : class Feature ( models . Model ) : name = models . CharField ( max_length = 20 ) geom = models . GeometryField ( ) objects = models . GeoManager ( ) def __unicode__ ( self ) : return self . name class MinusOneSRID ( models . Model ) : geom = models . PointField ( srid = - 1 ) objects = models . GeoManager ( )
