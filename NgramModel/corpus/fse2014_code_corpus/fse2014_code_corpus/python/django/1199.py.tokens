"""Functions to parse datetime objects.""" import datetime import re from django . utils . timezone import utc from django . utils . tzinfo import FixedOffset date_re = re . compile ( ) datetime_re = re . compile ( ) time_re = re . compile ( ) def parse_date ( value ) : match = date_re . match ( value ) if match : kw = dict ( ( k , int ( v ) ) for k , v in match . groupdict ( ) . iteritems ( ) ) return datetime . date ( ** kw ) def parse_time ( value ) : match = time_re . match ( value ) if match : kw = match . groupdict ( ) if kw [ 'microsecond' ] : kw [ 'microsecond' ] = kw [ 'microsecond' ] . ljust ( 6 , '0' ) kw = dict ( ( k , int ( v ) ) for k , v in kw . iteritems ( ) if v is not None ) return datetime . time ( ** kw ) def parse_datetime ( value ) : match = datetime_re . match ( value ) if match : kw = match . groupdict ( ) if kw [ 'microsecond' ] : kw [ 'microsecond' ] = kw [ 'microsecond' ] . ljust ( 6 , '0' ) tzinfo = kw . pop ( 'tzinfo' ) if tzinfo == 'Z' : tzinfo = utc elif tzinfo is not None : offset = 60 * int ( tzinfo [ 1 : 3 ] ) + int ( tzinfo [ 4 : 6 ] ) if tzinfo [ 0 ] == '-' : offset = - offset tzinfo = FixedOffset ( offset ) kw = dict ( ( k , int ( v ) ) for k , v in kw . iteritems ( ) if v is not None ) kw [ 'tzinfo' ] = tzinfo return datetime . datetime ( ** kw )
