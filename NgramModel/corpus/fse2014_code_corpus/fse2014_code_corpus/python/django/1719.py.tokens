""" This module has the mock object definitions used to hold reference geometry for the GEOS and GDAL tests. """ import gzip import os from django . contrib import gis from django . utils import simplejson GEOMETRIES = None TEST_DATA = os . path . join ( os . path . dirname ( gis . __file__ ) , 'tests' , 'data' ) def tuplize ( seq ) : if isinstance ( seq , ( list , tuple ) ) : return tuple ( [ tuplize ( i ) for i in seq ] ) return seq def strconvert ( d ) : return dict ( [ ( str ( k ) , v ) for k , v in d . iteritems ( ) ] ) def get_ds_file ( name , ext ) : return os . path . join ( TEST_DATA , name , name + '.%s' % ext ) class TestObj ( object ) : def __init__ ( self , ** kwargs ) : for key , value in kwargs . items ( ) : setattr ( self , key , value ) class TestDS ( TestObj ) : def __init__ ( self , name , ** kwargs ) : ext = kwargs . pop ( 'ext' , 'shp' ) self . ds = get_ds_file ( name , ext ) super ( TestDS , self ) . __init__ ( ** kwargs ) class TestGeom ( TestObj ) : def __init__ ( self , ** kwargs ) : coords = kwargs . pop ( 'coords' , None ) if coords : self . coords = tuplize ( coords ) centroid = kwargs . pop ( 'centroid' , None ) if centroid : self . centroid = tuple ( centroid ) ext_ring_cs = kwargs . pop ( 'ext_ring_cs' , None ) if ext_ring_cs : ext_ring_cs = tuplize ( ext_ring_cs ) self . ext_ring_cs = ext_ring_cs super ( TestGeom , self ) . __init__ ( ** kwargs ) class TestGeomSet ( object ) : def __init__ ( self , ** kwargs ) : for key , value in kwargs . items ( ) : setattr ( self , key , [ TestGeom ( ** strconvert ( kw ) ) for kw in value ] ) class TestDataMixin ( object ) : @ property def geometries ( self ) : global GEOMETRIES if GEOMETRIES is None : gzf = gzip . GzipFile ( os . path . join ( TEST_DATA , 'geometries.json.gz' ) ) geometries = simplejson . loads ( gzf . read ( ) ) GEOMETRIES = TestGeomSet ( ** strconvert ( geometries ) ) return GEOMETRIES
