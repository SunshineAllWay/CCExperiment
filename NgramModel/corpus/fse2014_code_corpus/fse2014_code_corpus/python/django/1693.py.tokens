from ctypes import c_void_p from types import NoneType from django . contrib . gis . gdal . error import GDALException class GDALBase ( object ) : _ptr = None ptr_type = c_void_p def _get_ptr ( self ) : if self . _ptr : return self . _ptr else : raise GDALException ( 'GDAL %s pointer no longer valid.' % self . __class__ . __name__ ) def _set_ptr ( self , ptr ) : if isinstance ( ptr , ( int , long ) ) : self . _ptr = self . ptr_type ( ptr ) elif isinstance ( ptr , ( self . ptr_type , NoneType ) ) : self . _ptr = ptr else : raise TypeError ( 'Incompatible pointer type' ) ptr = property ( _get_ptr , _set_ptr )
