from __future__ import absolute_import from operator import attrgetter from django . test import TestCase from . models import Person class RecursiveM2MTests ( TestCase ) : def test_recursive_m2m ( self ) : a , b , c , d = [ Person . objects . create ( name = name ) for name in [ "Anne" , "Bill" , "Chuck" , "David" ] ] a . friends . add ( b , c ) d . friends . add ( a , c ) self . assertQuerysetEqual ( a . friends . all ( ) , [ , , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . friends . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( c . friends . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( d . friends . all ( ) , [ , , ] , attrgetter ( "name" ) ) b . friends . add ( a ) self . assertQuerysetEqual ( a . friends . all ( ) , [ , , , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . friends . all ( ) , [ , ] , attrgetter ( "name" ) ) b . friends . remove ( a ) self . assertQuerysetEqual ( a . friends . all ( ) , [ , , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . friends . all ( ) , [ ] ) a . friends . clear ( ) self . assertQuerysetEqual ( a . friends . all ( ) , [ ] ) self . assertQuerysetEqual ( c . friends . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( d . friends . all ( ) , [ , ] , attrgetter ( "name" ) ) a . idols . add ( b , c ) b . idols . add ( a ) d . stalkers . add ( a , c ) self . assertQuerysetEqual ( a . idols . all ( ) , [ , , , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( a . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . idols . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( c . idols . all ( ) , [ , ] , attrgetter ( "name" ) , ) self . assertQuerysetEqual ( c . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( d . idols . all ( ) , [ ] ) self . assertQuerysetEqual ( d . stalkers . all ( ) , [ , , ] , attrgetter ( "name" ) ) b . stalkers . add ( a ) self . assertQuerysetEqual ( a . idols . all ( ) , [ , , , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( a . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . idols . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) , ) b . stalkers . remove ( a ) self . assertQuerysetEqual ( a . idols . all ( ) , [ , , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( a . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . idols . all ( ) , [ , ] , attrgetter ( "name" ) ) self . assertQuerysetEqual ( b . stalkers . all ( ) , [ ] ) a . idols . clear ( ) self . assertQuerysetEqual ( a . idols . all ( ) , [ ] ) self . assertQuerysetEqual ( c . stalkers . all ( ) , [ ] ) self . assertQuerysetEqual ( d . stalkers . all ( ) , [ , ] , attrgetter ( "name" ) )
