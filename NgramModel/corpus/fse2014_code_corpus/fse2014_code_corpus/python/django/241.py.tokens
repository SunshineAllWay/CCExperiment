from __future__ import absolute_import from django . test import TestCase from . models import RelatedModel , RestrictedModel , OneToOneRestrictedModel class CustomManagersRegressTestCase ( TestCase ) : def test_filtered_default_manager ( self ) : related = RelatedModel . objects . create ( name = "xyzzy" ) obj = RestrictedModel . objects . create ( name = "hidden" , related = related ) obj . name = "still hidden" obj . save ( ) self . assertEqual ( RestrictedModel . plain_manager . count ( ) , 1 ) def test_delete_related_on_filtered_manager ( self ) : related = RelatedModel . objects . create ( name = "xyzzy" ) for name , public in ( ( 'one' , True ) , ( 'two' , False ) , ( 'three' , False ) ) : RestrictedModel . objects . create ( name = name , is_public = public , related = related ) obj = RelatedModel . objects . get ( name = "xyzzy" ) obj . delete ( ) self . assertEqual ( len ( RestrictedModel . plain_manager . all ( ) ) , 0 ) def test_delete_one_to_one_manager ( self ) : obj = RelatedModel . objects . create ( name = "xyzzy" ) OneToOneRestrictedModel . objects . create ( name = "foo" , is_public = False , related = obj ) obj = RelatedModel . objects . get ( name = "xyzzy" ) obj . delete ( ) self . assertEqual ( len ( OneToOneRestrictedModel . plain_manager . all ( ) ) , 0 )
