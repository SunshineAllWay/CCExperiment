""" Chile specific form helpers. """ from __future__ import absolute_import from django . contrib . localflavor . cl . cl_regions import REGION_CHOICES from django . core . validators import EMPTY_VALUES from django . forms import ValidationError from django . forms . fields import RegexField , Select from django . utils . translation import ugettext_lazy as _ from django . utils . encoding import smart_unicode class CLRegionSelect ( Select ) : def __init__ ( self , attrs = None ) : super ( CLRegionSelect , self ) . __init__ ( attrs , choices = REGION_CHOICES ) class CLRutField ( RegexField ) : default_error_messages = { : _ ( 'Enter a valid Chilean RUT.' ) , : _ ( 'Enter a valid Chilean RUT. The format is XX.XXX.XXX-X.' ) , : _ ( 'The Chilean RUT is not valid.' ) , } def __init__ ( self , * args , ** kwargs ) : if 'strict' in kwargs : del kwargs [ 'strict' ] super ( CLRutField , self ) . __init__ ( r'^(\d{1,2}\.)?\d{3}\.\d{3}-[\dkK]$' , error_message = self . default_error_messages [ 'strict' ] , * args , ** kwargs ) else : super ( CLRutField , self ) . __init__ ( r'^[\d\.]{1,11}-?[\dkK]$' , * args , ** kwargs ) def clean ( self , value ) : super ( CLRutField , self ) . clean ( value ) if value in EMPTY_VALUES : return u'' rut , verificador = self . _canonify ( value ) if self . _algorithm ( rut ) == verificador : return self . _format ( rut , verificador ) else : raise ValidationError ( self . error_messages [ 'checksum' ] ) def _algorithm ( self , rut ) : suma = 0 multi = 2 for r in rut [ : : - 1 ] : suma += int ( r ) * multi multi += 1 if multi == 8 : multi = 2 return u'0123456789K0' [ 11 - suma % 11 ] def _canonify ( self , rut ) : rut = smart_unicode ( rut ) . replace ( ' ' , '' ) . replace ( '.' , '' ) . replace ( '-' , '' ) return rut [ : - 1 ] , rut [ - 1 ] . upper ( ) def _format ( self , code , verifier = None ) : if verifier is None : verifier = code [ - 1 ] code = code [ : - 1 ] while len ( code ) > 3 and '.' not in code [ : 3 ] : pos = code . find ( '.' ) if pos == - 1 : new_dot = - 3 else : new_dot = pos - 3 code = code [ : new_dot ] + '.' + code [ new_dot : ] return u'%s-%s' % ( code , verifier )
