""" A collection of utility routines and classes used by the spatial backends. """ def gqn ( val ) : if isinstance ( val , basestring ) : if isinstance ( val , unicode ) : val = val . encode ( 'ascii' ) return "'%s'" % val else : return str ( val ) class SpatialOperation ( object ) : sql_template = '%(geo_col)s %(operator)s %(geometry)s' def __init__ ( self , function = '' , operator = '' , result = '' , ** kwargs ) : self . function = function self . operator = operator self . result = result self . extra = kwargs def as_sql ( self , geo_col , geometry = '%s' ) : return self . sql_template % self . params ( geo_col , geometry ) def params ( self , geo_col , geometry ) : params = { 'function' : self . function , : geo_col , : geometry , : self . operator , : self . result , } params . update ( self . extra ) return params class SpatialFunction ( SpatialOperation ) : sql_template = '%(function)s(%(geo_col)s, %(geometry)s)' def __init__ ( self , func , result = '' , operator = '' , ** kwargs ) : default = { 'function' : func , : operator , : result } kwargs . update ( default ) super ( SpatialFunction , self ) . __init__ ( ** kwargs )
