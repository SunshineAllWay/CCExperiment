import os import stat from os . path import join , normcase , normpath , abspath , isabs , sep from django . utils . encoding import force_unicode try : WindowsError = WindowsError except NameError : class WindowsError ( Exception ) : pass if os . name == 'nt' : abspathu = abspath else : def abspathu ( path ) : if not isabs ( path ) : path = join ( os . getcwdu ( ) , path ) return normpath ( path ) def safe_join ( base , * paths ) : base = force_unicode ( base ) paths = [ force_unicode ( p ) for p in paths ] final_path = abspathu ( join ( base , * paths ) ) base_path = abspathu ( base ) base_path_len = len ( base_path ) if not normcase ( final_path ) . startswith ( normcase ( base_path ) ) or final_path [ base_path_len : base_path_len + 1 ] not in ( '' , sep ) : raise ValueError ( 'The joined path (%s) is located outside of the base ' % ( final_path , base_path ) ) return final_path def rmtree_errorhandler ( func , path , exc_info ) : exctype , value = exc_info [ : 2 ] if exctype is not WindowsError or 'Access is denied' not in str ( value ) : raise if ( ( os . stat ( path ) . st_mode & stat . S_IREAD ) != stat . S_IREAD ) : raise os . chmod ( path , stat . S_IWRITE ) func ( path )
