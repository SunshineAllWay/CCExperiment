from django . core . management . commands . inspectdb import Command as InspectDBCommand class Command ( InspectDBCommand ) : db_module = 'django.contrib.gis.db' gis_tables = { } def get_field_type ( self , connection , table_name , row ) : field_type , field_params , field_notes = super ( Command , self ) . get_field_type ( connection , table_name , row ) if field_type == 'GeometryField' : geo_col = row [ 0 ] field_type , geo_params = connection . introspection . get_geometry_type ( table_name , geo_col ) field_params . update ( geo_params ) if table_name in self . gis_tables : self . gis_tables [ table_name ] . append ( geo_col ) else : self . gis_tables [ table_name ] = [ geo_col ] return field_type , field_params , field_notes def get_meta ( self , table_name ) : meta_lines = super ( Command , self ) . get_meta ( table_name ) if table_name in self . gis_tables : meta_lines . insert ( 0 , ' objects = models.GeoManager()' ) return meta_lines
