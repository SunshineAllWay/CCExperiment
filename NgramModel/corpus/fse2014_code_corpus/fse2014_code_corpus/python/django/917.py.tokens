from functools import wraps from django . utils . decorators import available_attrs def xframe_options_deny ( view_func ) : def wrapped_view ( * args , ** kwargs ) : resp = view_func ( * args , ** kwargs ) if resp . get ( 'X-Frame-Options' , None ) is None : resp [ 'X-Frame-Options' ] = 'DENY' return resp return wraps ( view_func , assigned = available_attrs ( view_func ) ) ( wrapped_view ) def xframe_options_sameorigin ( view_func ) : def wrapped_view ( * args , ** kwargs ) : resp = view_func ( * args , ** kwargs ) if resp . get ( 'X-Frame-Options' , None ) is None : resp [ 'X-Frame-Options' ] = 'SAMEORIGIN' return resp return wraps ( view_func , assigned = available_attrs ( view_func ) ) ( wrapped_view ) def xframe_options_exempt ( view_func ) : def wrapped_view ( * args , ** kwargs ) : resp = view_func ( * args , ** kwargs ) resp . xframe_options_exempt = True return resp return wraps ( view_func , assigned = available_attrs ( view_func ) ) ( wrapped_view )
