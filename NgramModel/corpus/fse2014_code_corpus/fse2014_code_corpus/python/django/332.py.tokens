from django . contrib . localflavor . in_ . forms import ( INZipCodeField , INStateField , INStateSelect , INPhoneNumberField ) from django . test import SimpleTestCase class INLocalFlavorTests ( SimpleTestCase ) : def test_INPhoneNumberField ( self ) : error_format = [ u'Phone numbers must be in 02X-8X or 03X-7X or 04X-6X format.' ] valid = { : '0423-2443667' , : '0423 2443667' , : '04236-244366' , : '040-24436678' , } invalid = { : error_format , : error_format , : error_format , : error_format , : error_format , : error_format , : error_format , } self . assertFieldOutput ( INPhoneNumberField , valid , invalid ) def test_INPStateSelect ( self ) : f = INStateSelect ( ) out = u'''<select name="state"> <option value="KA">Karnataka</option> <option value="AP" selected="selected">Andhra Pradesh</option> <option value="KL">Kerala</option> <option value="TN">Tamil Nadu</option> <option value="MH">Maharashtra</option> <option value="UP">Uttar Pradesh</option> <option value="GA">Goa</option> <option value="GJ">Gujarat</option> <option value="RJ">Rajasthan</option> <option value="HP">Himachal Pradesh</option> <option value="JK">Jammu and Kashmir</option> <option value="AR">Arunachal Pradesh</option> <option value="AS">Assam</option> <option value="BR">Bihar</option> <option value="CG">Chattisgarh</option> <option value="HR">Haryana</option> <option value="JH">Jharkhand</option> <option value="MP">Madhya Pradesh</option> <option value="MN">Manipur</option> <option value="ML">Meghalaya</option> <option value="MZ">Mizoram</option> <option value="NL">Nagaland</option> <option value="OR">Orissa</option> <option value="PB">Punjab</option> <option value="SK">Sikkim</option> <option value="TR">Tripura</option> <option value="UA">Uttarakhand</option> <option value="WB">West Bengal</option> <option value="AN">Andaman and Nicobar</option> <option value="CH">Chandigarh</option> <option value="DN">Dadra and Nagar Haveli</option> <option value="DD">Daman and Diu</option> <option value="DL">Delhi</option> <option value="LD">Lakshadweep</option> <option value="PY">Pondicherry</option> </select>''' self . assertHTMLEqual ( f . render ( 'state' , 'AP' ) , out ) def test_INZipCodeField ( self ) : error_format = [ u'Enter a zip code in the format XXXXXX or XXX XXX.' ] valid = { : '360311' , : '360311' , } invalid = { : error_format , : error_format , : error_format , : error_format , : error_format } self . assertFieldOutput ( INZipCodeField , valid , invalid ) def test_INStateField ( self ) : error_format = [ u'Enter an Indian state or territory.' ] valid = {} invalid = { : error_format , : error_format , } self . assertFieldOutput ( INStateField , valid , invalid )
