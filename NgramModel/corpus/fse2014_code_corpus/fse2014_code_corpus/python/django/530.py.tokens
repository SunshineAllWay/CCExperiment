""" Various edge-cases for model managers. """ from django . db import models class OnlyFred ( models . Manager ) : def get_query_set ( self ) : return super ( OnlyFred , self ) . get_query_set ( ) . filter ( name = 'fred' ) class OnlyBarney ( models . Manager ) : def get_query_set ( self ) : return super ( OnlyBarney , self ) . get_query_set ( ) . filter ( name = 'barney' ) class Value42 ( models . Manager ) : def get_query_set ( self ) : return super ( Value42 , self ) . get_query_set ( ) . filter ( value = 42 ) class AbstractBase1 ( models . Model ) : name = models . CharField ( max_length = 50 ) class Meta : abstract = True manager1 = OnlyFred ( ) manager2 = OnlyBarney ( ) objects = models . Manager ( ) class AbstractBase2 ( models . Model ) : value = models . IntegerField ( ) class Meta : abstract = True restricted = Value42 ( ) class AbstractBase3 ( models . Model ) : comment = models . CharField ( max_length = 50 ) class Meta : abstract = True class Parent ( models . Model ) : name = models . CharField ( max_length = 50 ) manager = OnlyFred ( ) def __unicode__ ( self ) : return self . name class Child1 ( AbstractBase1 ) : data = models . CharField ( max_length = 25 ) def __unicode__ ( self ) : return self . data class Child2 ( AbstractBase1 , AbstractBase2 ) : data = models . CharField ( max_length = 25 ) def __unicode__ ( self ) : return self . data class Child3 ( AbstractBase1 , AbstractBase3 ) : data = models . CharField ( max_length = 25 ) def __unicode__ ( self ) : return self . data class Child4 ( AbstractBase1 ) : data = models . CharField ( max_length = 25 ) default = models . Manager ( ) def __unicode__ ( self ) : return self . data class Child5 ( AbstractBase3 ) : name = models . CharField ( max_length = 25 ) default = OnlyFred ( ) objects = models . Manager ( ) def __unicode__ ( self ) : return self . name class Child6 ( Child4 ) : value = models . IntegerField ( ) class Child7 ( Parent ) : pass
