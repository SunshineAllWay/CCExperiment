try : import cPickle as pickle except ImportError : import pickle from django . conf import settings from django . core import signing from django . contrib . sessions . backends . base import SessionBase class PickleSerializer ( object ) : def dumps ( self , obj ) : return pickle . dumps ( obj , pickle . HIGHEST_PROTOCOL ) def loads ( self , data ) : return pickle . loads ( data ) class SessionStore ( SessionBase ) : def load ( self ) : try : return signing . loads ( self . session_key , serializer = PickleSerializer , max_age = settings . SESSION_COOKIE_AGE , salt = 'django.contrib.sessions.backends.signed_cookies' ) except ( signing . BadSignature , ValueError ) : self . create ( ) return { } def create ( self ) : self . modified = True def save ( self , must_create = False ) : self . _session_key = self . _get_session_key ( ) self . modified = True def exists ( self , session_key = None ) : return False def delete ( self , session_key = None ) : self . _session_key = '' self . _session_cache = { } self . modified = True def cycle_key ( self ) : self . save ( ) def _get_session_key ( self ) : session_cache = getattr ( self , '_session_cache' , { } ) return signing . dumps ( session_cache , compress = True , salt = 'django.contrib.sessions.backends.signed_cookies' , serializer = PickleSerializer )
