from django . contrib . gis . db import models class State ( models . Model ) : name = models . CharField ( max_length = 20 ) objects = models . GeoManager ( ) class County ( models . Model ) : name = models . CharField ( max_length = 25 ) state = models . ForeignKey ( State ) mpoly = models . MultiPolygonField ( srid = 4269 ) objects = models . GeoManager ( ) class CountyFeat ( models . Model ) : name = models . CharField ( max_length = 25 ) poly = models . PolygonField ( srid = 4269 ) objects = models . GeoManager ( ) class City ( models . Model ) : name = models . CharField ( max_length = 25 ) population = models . IntegerField ( ) density = models . DecimalField ( max_digits = 7 , decimal_places = 1 ) dt = models . DateField ( ) point = models . PointField ( ) objects = models . GeoManager ( ) class Interstate ( models . Model ) : name = models . CharField ( max_length = 20 ) length = models . DecimalField ( max_digits = 6 , decimal_places = 2 ) path = models . LineStringField ( ) objects = models . GeoManager ( ) class CityBase ( models . Model ) : name = models . CharField ( max_length = 25 ) population = models . IntegerField ( ) density = models . DecimalField ( max_digits = 7 , decimal_places = 1 ) point = models . PointField ( ) objects = models . GeoManager ( ) class ICity1 ( CityBase ) : dt = models . DateField ( ) class ICity2 ( ICity1 ) : dt_time = models . DateTimeField ( auto_now = True ) class Invalid ( models . Model ) : point = models . PointField ( ) co_mapping = { 'name' : 'Name' , : { 'name' : 'State' } , : 'MULTIPOLYGON' , } cofeat_mapping = { 'name' : 'Name' , : 'POLYGON' , } city_mapping = { 'name' : 'Name' , : 'Population' , : 'Density' , : 'Created' , : 'POINT' , } inter_mapping = { 'name' : 'Name' , : 'Length' , : 'LINESTRING' , }
