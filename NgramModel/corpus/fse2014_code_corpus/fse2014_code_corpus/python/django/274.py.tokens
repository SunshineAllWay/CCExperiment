from django . template import Template , TemplateEncodingError , Context from django . utils . safestring import SafeData from django . utils . unittest import TestCase class UnicodeTests ( TestCase ) : def test_template ( self ) : t1 = Template ( u'ŠĐĆŽćžšđ {{ var }}' ) s = '\xc5\xa0\xc4\x90\xc4\x86\xc5\xbd\xc4\x87\xc5\xbe\xc5\xa1\xc4\x91 {{ var }}' t2 = Template ( s ) s = '\x80\xc5\xc0' self . assertRaises ( TemplateEncodingError , Template , s ) c1 = Context ( { "var" : "foo" } ) c2 = Context ( { u"var" : "foo" } ) c3 = Context ( { "var" : u"Đđ" } ) c4 = Context ( { u"var" : "\xc4\x90\xc4\x91" } ) self . assertEqual ( t1 . render ( c3 ) , t2 . render ( c3 ) ) self . assertIsInstance ( t1 . render ( c3 ) , unicode ) self . assertIsInstance ( t1 . render ( c3 ) , SafeData )
