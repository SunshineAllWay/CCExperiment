from django . utils . http import http_date , parse_http_date_safe class ConditionalGetMiddleware ( object ) : def process_response ( self , request , response ) : response [ 'Date' ] = http_date ( ) if not response . has_header ( 'Content-Length' ) : response [ 'Content-Length' ] = str ( len ( response . content ) ) if response . has_header ( 'ETag' ) : if_none_match = request . META . get ( 'HTTP_IF_NONE_MATCH' ) if if_none_match == response [ 'ETag' ] : response . status_code = 304 if response . has_header ( 'Last-Modified' ) : if_modified_since = request . META . get ( 'HTTP_IF_MODIFIED_SINCE' ) if if_modified_since is not None : if_modified_since = parse_http_date_safe ( if_modified_since ) if if_modified_since is not None : last_modified = parse_http_date_safe ( response [ 'Last-Modified' ] ) if last_modified is not None and last_modified <= if_modified_since : response . status_code = 304 return response
