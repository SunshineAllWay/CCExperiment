from django . contrib . admin import ModelAdmin from django . contrib . gis . admin . widgets import OpenLayersWidget from django . contrib . gis . gdal import OGRGeomType from django . contrib . gis . db import models class GeoModelAdmin ( ModelAdmin ) : default_lon = 0 default_lat = 0 default_zoom = 4 display_wkt = False display_srid = False extra_js = [ ] num_zoom = 18 max_zoom = False min_zoom = False units = False max_resolution = False max_extent = False modifiable = True mouse_position = True scale_text = True layerswitcher = True scrollable = True map_width = 600 map_height = 400 map_srid = 4326 map_template = 'gis/admin/openlayers.html' openlayers_url = 'http://openlayers.org/api/2.11/OpenLayers.js' point_zoom = num_zoom - 6 wms_url = 'http://labs.metacarta.com/wms/vmap0' wms_layer = 'basic' wms_name = 'OpenLayers WMS' debug = False widget = OpenLayersWidget @ property def media ( self ) : media = super ( GeoModelAdmin , self ) . media media . add_js ( [ self . openlayers_url ] ) media . add_js ( self . extra_js ) return media def formfield_for_dbfield ( self , db_field , ** kwargs ) : if isinstance ( db_field , models . GeometryField ) : request = kwargs . pop ( 'request' , None ) kwargs [ 'widget' ] = self . get_map_widget ( db_field ) return db_field . formfield ( ** kwargs ) else : return super ( GeoModelAdmin , self ) . formfield_for_dbfield ( db_field , ** kwargs ) def get_map_widget ( self , db_field ) : is_collection = db_field . geom_type in ( 'MULTIPOINT' , 'MULTILINESTRING' , 'MULTIPOLYGON' , 'GEOMETRYCOLLECTION' ) if is_collection : if db_field . geom_type == 'GEOMETRYCOLLECTION' : collection_type = 'Any' else : collection_type = OGRGeomType ( db_field . geom_type . replace ( 'MULTI' , '' ) ) else : collection_type = 'None' class OLMap ( self . widget ) : template = self . map_template geom_type = db_field . geom_type params = { 'default_lon' : self . default_lon , : self . default_lat , : self . default_zoom , : self . debug or self . display_wkt , : OGRGeomType ( db_field . geom_type ) , : db_field . name , : is_collection , : self . scrollable , : self . layerswitcher , : collection_type , : db_field . geom_type in ( 'LINESTRING' , 'MULTILINESTRING' ) , : db_field . geom_type in ( 'POLYGON' , 'MULTIPOLYGON' ) , : db_field . geom_type in ( 'POINT' , 'MULTIPOINT' ) , : self . num_zoom , : self . max_zoom , : self . min_zoom , : self . units , : self . max_resolution , : self . max_extent , : self . modifiable , : self . mouse_position , : self . scale_text , : self . map_width , : self . map_height , : self . point_zoom , : self . map_srid , : self . display_srid , : self . wms_url , : self . wms_layer , : self . wms_name , : self . debug , } return OLMap from django . contrib . gis import gdal if gdal . HAS_GDAL : if gdal . GDAL_VERSION >= ( 1 , 7 ) : spherical_mercator_srid = 3857 else : spherical_mercator_srid = 900913 class OSMGeoAdmin ( GeoModelAdmin ) : map_template = 'gis/admin/osm.html' num_zoom = 20 map_srid = spherical_mercator_srid max_extent = '-20037508,-20037508,20037508,20037508' max_resolution = '156543.0339' point_zoom = num_zoom - 6 units = 'm'
