"""A collection of modules for iterating through different kinds of tree, generating tokens identical to those produced by the tokenizer module. To create a tree walker for a new type of tree, you need to do implement a tree walker object (called TreeWalker by convention) that implements a 'serialize' method taking a tree as sole argument and returning an iterator generating tokens. """ treeWalkerCache = { } def getTreeWalker ( treeType , implementation = None , ** kwargs ) : treeType = treeType . lower ( ) if treeType not in treeWalkerCache : if treeType in ( "dom" , "pulldom" , "simpletree" ) : mod = __import__ ( treeType , globals ( ) ) treeWalkerCache [ treeType ] = mod . TreeWalker elif treeType == "genshi" : import genshistream treeWalkerCache [ treeType ] = genshistream . TreeWalker elif treeType == "beautifulsoup" : import soup treeWalkerCache [ treeType ] = soup . TreeWalker elif treeType == "lxml" : import lxmletree treeWalkerCache [ treeType ] = lxmletree . TreeWalker elif treeType == "etree" : import etree return etree . getETreeModule ( implementation , ** kwargs ) . TreeWalker return treeWalkerCache . get ( treeType )
