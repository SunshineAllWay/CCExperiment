from lib . hachoir_core . endian import BIG_ENDIAN , LITTLE_ENDIAN from lib . hachoir_core . field import GenericFieldSet from lib . hachoir_core . log import Logger import lib . hachoir_core . config as config class Parser ( GenericFieldSet ) : def __init__ ( self , stream , description = None ) : assert hasattr ( self , "endian" ) and self . endian in ( BIG_ENDIAN , LITTLE_ENDIAN ) GenericFieldSet . __init__ ( self , None , "root" , stream , description , stream . askSize ( self ) ) def _logger ( self ) : return Logger . _logger ( self ) def _setSize ( self , size ) : self . _truncate ( size ) self . raiseEvent ( "field-resized" , self ) size = property ( lambda self : self . _size , doc = "Size in bits" ) path = property ( lambda self : "/" ) autofix = property ( lambda self : config . autofix )
