import os from sickbeard import logger import sickbeard def fixStupidEncodings ( x , silent = False ) : if type ( x ) == str : try : return x . decode ( sickbeard . SYS_ENCODING ) except UnicodeDecodeError : logger . log ( u"Unable to decode value: " + repr ( x ) , logger . ERROR ) return None elif type ( x ) == unicode : return x else : logger . log ( u"Unknown value passed in, ignoring it: " + str ( type ( x ) ) + " (" + repr ( x ) + ":" + repr ( type ( x ) ) + ")" , logger . DEBUG if silent else logger . ERROR ) return None return None def fixListEncodings ( x ) : if type ( x ) != list : return x else : return filter ( lambda x : x != None , map ( fixStupidEncodings , x ) ) def ek ( func , * args ) : result = None if os . name == 'nt' : result = func ( * args ) else : result = func ( * [ x . encode ( sickbeard . SYS_ENCODING ) if type ( x ) in ( str , unicode ) else x for x in args ] ) if type ( result ) == list : return fixListEncodings ( result ) elif type ( result ) == str : return fixStupidEncodings ( result ) else : return result
