import os import sickbeard from urllib import urlencode from urllib2 import Request , urlopen , URLError from sickbeard import logger from sickbeard import encodingKludge as ek class pyTivoNotifier : def notify_snatch ( self , ep_name ) : pass def notify_download ( self , ep_name ) : pass def update_library ( self , ep_obj ) : if not sickbeard . USE_PYTIVO : return False host = sickbeard . PYTIVO_HOST shareName = sickbeard . PYTIVO_SHARE_NAME tsn = sickbeard . PYTIVO_TIVO_NAME showPath = ep_obj . show . location showName = ep_obj . show . name rootShowAndSeason = ek . ek ( os . path . dirname , ep_obj . location ) absPath = ep_obj . location showName = showName . replace ( ":" , "" ) root = showPath . replace ( showName , "" ) showAndSeason = rootShowAndSeason . replace ( root , "" ) container = shareName + "/" + showAndSeason file = "/" + absPath . replace ( root , "" ) requestUrl = "http://" + host + "/TiVoConnect?" + urlencode ( { 'Command' : 'Push' , 'Container' : container , 'File' : file , 'tsn' : tsn } ) logger . log ( u"pyTivo notification: Requesting " + requestUrl ) request = Request ( requestUrl ) try : response = urlopen ( request ) except URLError , e : if hasattr ( e , 'reason' ) : logger . log ( u"pyTivo notification: Error, failed to reach a server" ) logger . log ( u"'Error reason: " + e . reason ) return False elif hasattr ( e , 'code' ) : logger . log ( u"pyTivo notification: Error, the server couldn't fulfill the request" ) logger . log ( u"Error code: " + e . code ) return False else : logger . log ( u"pyTivo notification: Successfully requested transfer of file" ) return True notifier = pyTivoNotifier
