import gc PAGE_SIZE = 4096 def getMemoryLimit ( ) : return None def setMemoryLimit ( max_mem ) : return False def getMemorySize ( ) : try : statm = open ( '/proc/self/statm' ) . readline ( ) . split ( ) except IOError : return None return int ( statm [ 0 ] ) * PAGE_SIZE def clearCaches ( ) : gc . collect ( ) try : from resource import getpagesize , getrlimit , setrlimit , RLIMIT_AS PAGE_SIZE = getpagesize ( ) def getMemoryLimit ( ) : try : limit = getrlimit ( RLIMIT_AS ) [ 0 ] if 0 < limit : limit *= PAGE_SIZE return limit except ValueError : return None def setMemoryLimit ( max_mem ) : if max_mem is None : max_mem = - 1 try : setrlimit ( RLIMIT_AS , ( max_mem , - 1 ) ) return True except ValueError : return False except ImportError : pass def limitedMemory ( limit , func , * args , ** kw ) : clearCaches ( ) max_rss = getMemorySize ( ) if max_rss is not None : old_limit = getMemoryLimit ( ) limit = max_rss + limit limited = setMemoryLimit ( limit ) else : limited = False try : return func ( * args , ** kw ) finally : if limited : setMemoryLimit ( old_limit ) clearCaches ( )
