__author__ = "dbr/Ben" __version__ = "1.5" import logging import warnings from tvdb_exceptions import tvdb_userabort def log ( ) : return logging . getLogger ( __name__ ) class BaseUI : def __init__ ( self , config , log = None ) : self . config = config if log is not None : warnings . warn ( "the UI's log parameter is deprecated, instead use\n" ) self . log = logging . getLogger ( __name__ ) def selectSeries ( self , allSeries ) : return allSeries [ 0 ] class ConsoleUI ( BaseUI ) : def _displaySeries ( self , allSeries ) : print "TVDB Search Results:" for i , cshow in enumerate ( allSeries [ : 6 ] ) : i_show = i + 1 log ( ) . debug ( 'Showing allSeries[%s], series %s)' % ( i_show , allSeries [ i ] [ 'seriesname' ] ) ) print "%s -> %s [%s] # http://thetvdb.com/?tab=series&id=%s&lid=%s" % ( i_show , cshow [ 'seriesname' ] . encode ( "UTF-8" , "ignore" ) , cshow [ 'language' ] . encode ( "UTF-8" , "ignore" ) , str ( cshow [ 'id' ] ) , cshow [ 'lid' ] ) def selectSeries ( self , allSeries ) : self . _displaySeries ( allSeries ) if len ( allSeries ) == 1 : print "Automatically selecting only result" return allSeries [ 0 ] if self . config [ 'select_first' ] is True : print "Automatically returning first search result" return allSeries [ 0 ] while True : try : print "Enter choice (first number, ? for help):" ans = raw_input ( ) except KeyboardInterrupt : raise tvdb_userabort ( "User aborted (^c keyboard interupt)" ) except EOFError : raise tvdb_userabort ( "User aborted (EOF received)" ) log ( ) . debug ( 'Got choice of: %s' % ( ans ) ) try : selected_id = int ( ans ) - 1 except ValueError : if ans == "q" : log ( ) . debug ( 'Got quit command (q)' ) raise tvdb_userabort ( "User aborted ('q' quit command)" ) elif ans == "?" : print "## Help" print "# Enter the number that corresponds to the correct show." print "# ? - this help" print "# q - abort tvnamer" else : log ( ) . debug ( 'Unknown keypress %s' % ( ans ) ) else : log ( ) . debug ( 'Trying to return ID: %d' % ( selected_id ) ) try : return allSeries [ selected_id ] except IndexError : log ( ) . debug ( 'Invalid show number entered!' ) print "Invalid number (%s) selected!" self . _displaySeries ( allSeries )
