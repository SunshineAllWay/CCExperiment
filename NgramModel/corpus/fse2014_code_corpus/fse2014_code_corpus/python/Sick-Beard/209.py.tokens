import itertools from lib . hachoir_core . field import MissingField class FakeArray : def __init__ ( self , fieldset , name ) : pos = name . rfind ( "/" ) if pos != - 1 : self . fieldset = fieldset [ name [ : pos ] ] self . name = name [ pos + 1 : ] else : self . fieldset = fieldset self . name = name self . _format = "%s[%%u]" % self . name self . _cache = { } self . _known_size = False self . _max_index = - 1 def __nonzero__ ( self ) : if self . _cache : return True else : return ( 0 in self ) def __len__ ( self ) : total = self . _max_index + 1 if not self . _known_size : for index in itertools . count ( total ) : try : field = self [ index ] total += 1 except MissingField : break return total def __contains__ ( self , index ) : try : field = self [ index ] return True except MissingField : return False def __getitem__ ( self , index ) : try : value = self . _cache [ index ] except KeyError : try : value = self . fieldset [ self . _format % index ] except MissingField : self . _known_size = True raise self . _cache [ index ] = value self . _max_index = max ( index , self . _max_index ) return value def __iter__ ( self ) : for index in itertools . count ( 0 ) : try : yield self [ index ] except MissingField : raise StopIteration ( )
