class Tag ( object ) : def __init__ ( self , connection = None , key = None , value = None , propagate_at_launch = False , resource_id = None , resource_type = 'auto-scaling-group' ) : self . connection = connection self . key = key self . value = value self . propagate_at_launch = propagate_at_launch self . resource_id = resource_id self . resource_type = resource_type def __repr__ ( self ) : return 'Tag(%s=%s)' % ( self . key , self . value ) def startElement ( self , name , attrs , connection ) : pass def endElement ( self , name , value , connection ) : if name == 'Key' : self . key = value elif name == 'Value' : self . value = value elif name == 'PropogateAtLaunch' : if value . lower ( ) == 'true' : self . propogate_at_launch = True else : self . propogate_at_launch = False elif name == 'ResourceId' : self . resource_id = value elif name == 'ResourceType' : self . resource_type = value def build_params ( self , params , i ) : prefix = 'Tags.member.%d.' % i params [ prefix + 'ResourceId' ] = self . resource_id params [ prefix + 'ResourceType' ] = self . resource_type params [ prefix + 'Key' ] = self . key params [ prefix + 'Value' ] = self . value if self . propagate_at_launch : params [ prefix + 'PropagateAtLaunch' ] = 'true' else : params [ prefix + 'PropagateAtLaunch' ] = 'false' def delete ( self ) : return self . connection . delete_tags ( [ self ] )
