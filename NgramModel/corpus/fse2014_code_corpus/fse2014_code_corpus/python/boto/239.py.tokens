import os class Converter ( object ) : @ classmethod def convert_string ( cls , param , value ) : if not isinstance ( value , basestring ) : raise ValueError return value @ classmethod def convert_integer ( cls , param , value ) : return int ( value ) @ classmethod def convert_boolean ( cls , param , value ) : return True @ classmethod def convert_file ( cls , param , value ) : if os . path . isfile ( value ) : return value raise ValueError @ classmethod def convert_dir ( cls , param , value ) : if os . path . isdir ( value ) : return value raise ValueError @ classmethod def convert ( cls , param , value ) : try : if hasattr ( cls , 'convert_' + param . ptype ) : mthd = getattr ( cls , 'convert_' + param . ptype ) else : mthd = cls . convert_string return mthd ( param , value ) except : raise ValidationException ( param , '' ) class Param ( object ) : def __init__ ( self , name = None , ptype = 'string' , optional = True , short_name = None , long_name = None , doc = '' , metavar = None , cardinality = 1 , default = None , choices = None , encoder = None , request_param = True ) : self . name = name self . ptype = ptype self . optional = optional self . short_name = short_name self . long_name = long_name self . doc = doc self . metavar = metavar self . cardinality = cardinality self . default = default self . choices = choices self . encoder = encoder self . request_param = request_param @ property def optparse_long_name ( self ) : ln = None if self . long_name : ln = '--%s' % self . long_name return ln @ property def synopsis_long_name ( self ) : ln = None if self . long_name : ln = '--%s' % self . long_name return ln @ property def getopt_long_name ( self ) : ln = None if self . long_name : ln = '%s' % self . long_name if self . ptype != 'boolean' : ln += '=' return ln @ property def optparse_short_name ( self ) : sn = None if self . short_name : sn = '-%s' % self . short_name return sn @ property def synopsis_short_name ( self ) : sn = None if self . short_name : sn = '-%s' % self . short_name return sn @ property def getopt_short_name ( self ) : sn = None if self . short_name : sn = '%s' % self . short_name if self . ptype != 'boolean' : sn += ':' return sn def convert ( self , value ) : return Converter . convert ( self , value )
