from boto . ec2 . ec2object import TaggedEC2Object class Attachment ( object ) : def __init__ ( self , connection = None ) : self . vpc_id = None self . state = None def startElement ( self , name , attrs , connection ) : pass def endElement ( self , name , value , connection ) : if name == 'vpcId' : self . vpc_id = value elif name == 'state' : self . state = value else : setattr ( self , name , value ) class VpnGateway ( TaggedEC2Object ) : def __init__ ( self , connection = None ) : TaggedEC2Object . __init__ ( self , connection ) self . id = None self . type = None self . state = None self . availability_zone = None self . attachments = [ ] def __repr__ ( self ) : return 'VpnGateway:%s' % self . id def startElement ( self , name , attrs , connection ) : retval = TaggedEC2Object . startElement ( self , name , attrs , connection ) if retval is not None : return retval if name == 'item' : att = Attachment ( ) self . attachments . append ( att ) return att def endElement ( self , name , value , connection ) : if name == 'vpnGatewayId' : self . id = value elif name == 'type' : self . type = value elif name == 'state' : self . state = value elif name == 'availabilityZone' : self . availability_zone = value elif name == 'attachments' : pass else : setattr ( self , name , value ) def attach ( self , vpc_id ) : return self . connection . attach_vpn_gateway ( self . id , vpc_id )
