from boto . ec2 . ec2object import TaggedEC2Object class DhcpValueSet ( list ) : def startElement ( self , name , attrs , connection ) : pass def endElement ( self , name , value , connection ) : if name == 'value' : self . append ( value ) class DhcpConfigSet ( dict ) : def startElement ( self , name , attrs , connection ) : if name == 'valueSet' : if not self . has_key ( self . _name ) : self [ self . _name ] = DhcpValueSet ( ) return self [ self . _name ] def endElement ( self , name , value , connection ) : if name == 'key' : self . _name = value class DhcpOptions ( TaggedEC2Object ) : def __init__ ( self , connection = None ) : TaggedEC2Object . __init__ ( self , connection ) self . id = None self . options = None def __repr__ ( self ) : return 'DhcpOptions:%s' % self . id def startElement ( self , name , attrs , connection ) : retval = TaggedEC2Object . startElement ( self , name , attrs , connection ) if retval is not None : return retval if name == 'dhcpConfigurationSet' : self . options = DhcpConfigSet ( ) return self . options def endElement ( self , name , value , connection ) : if name == 'dhcpOptionsId' : self . id = value else : setattr ( self , name , value )
