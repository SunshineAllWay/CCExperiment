import unittest import time from boto . s3 . connection import S3Connection class S3BucketTest ( unittest . TestCase ) : def setUp ( self ) : self . conn = S3Connection ( ) self . bucket_name = 'bucket-%d' % int ( time . time ( ) ) self . bucket = self . conn . create_bucket ( self . bucket_name ) def tearDown ( self ) : for key in self . bucket : key . delete ( ) self . bucket . delete ( ) def test_next_marker ( self ) : expected = [ "a/" , "b" , "c" ] for key_name in expected : key = self . bucket . new_key ( key_name ) key . set_contents_from_string ( key_name ) rs = self . bucket . get_all_keys ( max_keys = 2 ) for element in rs : pass self . assertEqual ( element . name , "b" ) self . assertEqual ( rs . next_marker , None ) rs = self . bucket . get_all_keys ( max_keys = 2 , delimiter = "/" ) for element in rs : pass self . assertEqual ( element . name , "a/" ) self . assertEqual ( rs . next_marker , "b" ) rs = self . bucket . list ( ) for element in rs : self . assertEqual ( element . name , expected . pop ( 0 ) ) self . assertEqual ( expected , [ ] )
