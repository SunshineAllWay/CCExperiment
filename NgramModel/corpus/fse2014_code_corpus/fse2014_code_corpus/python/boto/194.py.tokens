from boto . ec2 . tag import TagSet class EC2Object ( object ) : def __init__ ( self , connection = None ) : self . connection = connection if self . connection and hasattr ( self . connection , 'region' ) : self . region = connection . region else : self . region = None def startElement ( self , name , attrs , connection ) : return None def endElement ( self , name , value , connection ) : setattr ( self , name , value ) class TaggedEC2Object ( EC2Object ) : def __init__ ( self , connection = None ) : EC2Object . __init__ ( self , connection ) self . tags = TagSet ( ) def startElement ( self , name , attrs , connection ) : if name == 'tagSet' : return self . tags else : return None def add_tag ( self , key , value = '' ) : status = self . connection . create_tags ( [ self . id ] , { key : value } ) if self . tags is None : self . tags = TagSet ( ) self . tags [ key ] = value def remove_tag ( self , key , value = None ) : if value : tags = { key : value } else : tags = [ key ] status = self . connection . delete_tags ( [ self . id ] , tags ) if key in self . tags : del self . tags [ key ]
