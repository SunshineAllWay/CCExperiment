import boto from boto . connection import AWSQueryConnection , AWSAuthConnection import time import urllib import xml . sax from boto . ecs . item import ItemSet from boto import handler class ECSConnection ( AWSQueryConnection ) : APIVersion = '2010-11-01' def __init__ ( self , aws_access_key_id = None , aws_secret_access_key = None , is_secure = True , port = None , proxy = None , proxy_port = None , proxy_user = None , proxy_pass = None , host = 'ecs.amazonaws.com' , debug = 0 , https_connection_factory = None , path = '/' ) : AWSQueryConnection . __init__ ( self , aws_access_key_id , aws_secret_access_key , is_secure , port , proxy , proxy_port , proxy_user , proxy_pass , host , debug , https_connection_factory , path ) def _required_auth_capability ( self ) : return [ 'ecs' ] def get_response ( self , action , params , page = 0 , itemSet = None ) : params [ 'Service' ] = "AWSECommerceService" params [ 'Operation' ] = action if page : params [ 'ItemPage' ] = page response = self . make_request ( None , params , "/onca/xml" ) body = response . read ( ) boto . log . debug ( body ) if response . status != 200 : boto . log . error ( '%s %s' % ( response . status , response . reason ) ) boto . log . error ( '%s' % body ) raise self . ResponseError ( response . status , response . reason , body ) if itemSet == None : rs = ItemSet ( self , action , params , page ) else : rs = itemSet h = handler . XmlHandler ( rs , self ) xml . sax . parseString ( body , h ) return rs def item_search ( self , search_index , ** params ) : params [ 'SearchIndex' ] = search_index return self . get_response ( 'ItemSearch' , params )
