def bucket_lister ( bucket , prefix = '' , delimiter = '' , marker = '' , headers = None ) : more_results = True k = None while more_results : rs = bucket . get_all_keys ( prefix = prefix , marker = marker , delimiter = delimiter , headers = headers ) for k in rs : yield k if k : marker = rs . next_marker or k . name more_results = rs . is_truncated class BucketListResultSet : def __init__ ( self , bucket = None , prefix = '' , delimiter = '' , marker = '' , headers = None ) : self . bucket = bucket self . prefix = prefix self . delimiter = delimiter self . marker = marker self . headers = headers def __iter__ ( self ) : return bucket_lister ( self . bucket , prefix = self . prefix , delimiter = self . delimiter , marker = self . marker , headers = self . headers ) def versioned_bucket_lister ( bucket , prefix = '' , delimiter = '' , key_marker = '' , version_id_marker = '' , headers = None ) : more_results = True k = None while more_results : rs = bucket . get_all_versions ( prefix = prefix , key_marker = key_marker , version_id_marker = version_id_marker , delimiter = delimiter , headers = headers , max_keys = 999 ) for k in rs : yield k key_marker = rs . next_key_marker version_id_marker = rs . next_version_id_marker more_results = rs . is_truncated class VersionedBucketListResultSet : def __init__ ( self , bucket = None , prefix = '' , delimiter = '' , key_marker = '' , version_id_marker = '' , headers = None ) : self . bucket = bucket self . prefix = prefix self . delimiter = delimiter self . key_marker = key_marker self . version_id_marker = version_id_marker self . headers = headers def __iter__ ( self ) : return versioned_bucket_lister ( self . bucket , prefix = self . prefix , delimiter = self . delimiter , key_marker = self . key_marker , version_id_marker = self . version_id_marker , headers = self . headers ) def multipart_upload_lister ( bucket , key_marker = '' , upload_id_marker = '' , headers = None ) : more_results = True k = None while more_results : rs = bucket . get_all_multipart_uploads ( key_marker = key_marker , upload_id_marker = upload_id_marker , headers = headers ) for k in rs : yield k key_marker = rs . next_key_marker upload_id_marker = rs . next_upload_id_marker more_results = rs . is_truncated class MultiPartUploadListResultSet : def __init__ ( self , bucket = None , key_marker = '' , upload_id_marker = '' , headers = None ) : self . bucket = bucket self . key_marker = key_marker self . upload_id_marker = upload_id_marker self . headers = headers def __iter__ ( self ) : return multipart_upload_lister ( self . bucket , key_marker = self . key_marker , upload_id_marker = self . upload_id_marker , headers = self . headers )
