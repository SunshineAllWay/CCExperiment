class ResultEntry ( dict ) : def startElement ( self , name , attrs , connection ) : return None def endElement ( self , name , value , connection ) : if name == 'Id' : self [ 'id' ] = value elif name == 'MessageId' : self [ 'message_id' ] = value elif name == 'MD5OfMessageBody' : self [ 'message_md5' ] = value elif name == 'SenderFault' : self [ 'sender_fault' ] = value elif name == 'Code' : self [ 'error_code' ] = value elif name == 'Message' : self [ 'error_message' ] = value class BatchResults ( object ) : def __init__ ( self , parent ) : self . parent = parent self . results = [ ] self . errors = [ ] def startElement ( self , name , attrs , connection ) : if name == 'SendMessageBatchResultEntry' : entry = ResultEntry ( ) self . results . append ( entry ) return entry if name == 'BatchResultErrorEntry' : entry = ResultEntry ( ) self . results . errors ( entry ) return entry return None def endElement ( self , name , value , connection ) : setattr ( self , name , value )
