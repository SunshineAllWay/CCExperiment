def query_lister ( domain , query = '' , max_items = None , attr_names = None ) : more_results = True num_results = 0 next_token = None while more_results : rs = domain . connection . query_with_attributes ( domain , query , attr_names , next_token = next_token ) for item in rs : if max_items : if num_results == max_items : raise StopIteration yield item num_results += 1 next_token = rs . next_token more_results = next_token != None class QueryResultSet : def __init__ ( self , domain = None , query = '' , max_items = None , attr_names = None ) : self . max_items = max_items self . domain = domain self . query = query self . attr_names = attr_names def __iter__ ( self ) : return query_lister ( self . domain , self . query , self . max_items , self . attr_names ) def select_lister ( domain , query = '' , max_items = None ) : more_results = True num_results = 0 next_token = None while more_results : rs = domain . connection . select ( domain , query , next_token = next_token ) for item in rs : if max_items : if num_results == max_items : raise StopIteration yield item num_results += 1 next_token = rs . next_token more_results = next_token != None class SelectResultSet ( object ) : def __init__ ( self , domain = None , query = '' , max_items = None , next_token = None , consistent_read = False ) : self . domain = domain self . query = query self . consistent_read = consistent_read self . max_items = max_items self . next_token = next_token def __iter__ ( self ) : more_results = True num_results = 0 while more_results : rs = self . domain . connection . select ( self . domain , self . query , next_token = self . next_token , consistent_read = self . consistent_read ) for item in rs : if self . max_items and num_results >= self . max_items : raise StopIteration yield item num_results += 1 self . next_token = rs . next_token if self . max_items and num_results >= self . max_items : raise StopIteration more_results = self . next_token != None def next ( self ) : return self . __iter__ ( ) . next ( )
