import uuid import urllib class InvalidationBatch ( object ) : def __init__ ( self , paths = None , connection = None , distribution = None , caller_reference = '' ) : self . paths = paths or [ ] self . distribution = distribution self . caller_reference = caller_reference if not self . caller_reference : self . caller_reference = str ( uuid . uuid4 ( ) ) if distribution : self . connection = connection else : self . connection = connection def add ( self , path ) : return self . paths . append ( path ) def remove ( self , path ) : return self . paths . remove ( path ) def __iter__ ( self ) : return iter ( self . paths ) def __getitem__ ( self , i ) : return self . paths [ i ] def __setitem__ ( self , k , v ) : self . paths [ k ] = v def escape ( self , p ) : if not p [ 0 ] == "/" : p = "/%s" % p return urllib . quote ( p ) def to_xml ( self ) : assert self . connection != None s = '<?xml version="1.0" encoding="UTF-8"?>\n' s += '<InvalidationBatch xmlns="http://cloudfront.amazonaws.com/doc/%s/">\n' % self . connection . Version for p in self . paths : s += ' <Path>%s</Path>\n' % self . escape ( p ) s += ' <CallerReference>%s</CallerReference>\n' % self . caller_reference s += '</InvalidationBatch>\n' return s def startElement ( self , name , attrs , connection ) : if name == "InvalidationBatch" : self . paths = [ ] return None def endElement ( self , name , value , connection ) : if name == 'Path' : self . paths . append ( value ) elif name == "Status" : self . status = value elif name == "Id" : self . id = value elif name == "CreateTime" : self . create_time = value elif name == "CallerReference" : self . caller_reference = value return None
