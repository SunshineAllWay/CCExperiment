import boto . pyami . installers import os import os . path import stat import boto import random from pwd import getpwnam class Installer ( boto . pyami . installers . Installer ) : def add_cron ( self , name , command , minute = "*" , hour = "*" , mday = "*" , month = "*" , wday = "*" , who = "root" , env = None ) : if minute == 'random' : minute = str ( random . randrange ( 60 ) ) if hour == 'random' : hour = str ( random . randrange ( 24 ) ) fp = open ( '/etc/cron.d/%s' % name , "w" ) if env : for key , value in env . items ( ) : fp . write ( '%s=%s\n' % ( key , value ) ) fp . write ( '%s %s %s %s %s %s %s\n' % ( minute , hour , mday , month , wday , who , command ) ) fp . close ( ) def add_init_script ( self , file , name ) : f_path = os . path . join ( "/etc/init.d" , name ) f = open ( f_path , "w" ) f . write ( file ) f . close ( ) os . chmod ( f_path , stat . S_IREAD | stat . S_IWRITE | stat . S_IEXEC ) self . run ( "/usr/sbin/update-rc.d %s defaults" % name ) def add_env ( self , key , value ) : boto . log . info ( 'Adding env variable: %s=%s' % ( key , value ) ) if not os . path . exists ( "/etc/environment.orig" ) : self . run ( 'cp /etc/environment /etc/environment.orig' , notify = False , exit_on_error = False ) fp = open ( '/etc/environment' , 'a' ) fp . write ( '\n%s="%s"' % ( key , value ) ) fp . close ( ) os . environ [ key ] = value def stop ( self , service_name ) : self . run ( '/etc/init.d/%s stop' % service_name ) def start ( self , service_name ) : self . run ( '/etc/init.d/%s start' % service_name ) def create_user ( self , user ) : self . run ( "useradd -m %s" % user ) usr = getpwnam ( user ) return usr def install ( self ) : raise NotImplementedError
