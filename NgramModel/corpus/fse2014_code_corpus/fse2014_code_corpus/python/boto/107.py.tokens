from boto import handler import xml . sax class Deleted ( object ) : def __init__ ( self , key = None , version_id = None , delete_marker = False , delete_marker_version_id = None ) : self . key = key self . version_id = version_id self . delete_marker = delete_marker self . delete_marker_version_id = delete_marker_version_id def __repr__ ( self ) : if self . version_id : return '<Deleted: %s.%s>' % ( self . key , self . version_id ) else : return '<Deleted: %s>' % self . key def startElement ( self , name , attrs , connection ) : return None def endElement ( self , name , value , connection ) : if name == 'Key' : self . key = value elif name == 'VersionId' : self . version_id = value elif name == 'DeleteMarker' : if value . lower ( ) == 'true' : self . delete_marker = True elif name == 'DeleteMarkerVersionId' : self . delete_marker_version_id = value else : setattr ( self , name , value ) class Error ( object ) : def __init__ ( self , key = None , version_id = None , code = None , message = None ) : self . key = key self . version_id = version_id self . code = code self . message = message def __repr__ ( self ) : if self . version_id : return '<Error: %s.%s(%s)>' % ( self . key , self . version_id , self . code ) else : return '<Error: %s(%s)>' % ( self . key , self . code ) def startElement ( self , name , attrs , connection ) : return None def endElement ( self , name , value , connection ) : if name == 'Key' : self . key = value elif name == 'VersionId' : self . version_id = value elif name == 'Code' : self . code = value elif name == 'Message' : self . message = value else : setattr ( self , name , value ) class MultiDeleteResult ( object ) : def __init__ ( self , bucket = None ) : self . bucket = None self . deleted = [ ] self . errors = [ ] def startElement ( self , name , attrs , connection ) : if name == 'Deleted' : d = Deleted ( ) self . deleted . append ( d ) return d elif name == 'Error' : e = Error ( ) self . errors . append ( e ) return e return None def endElement ( self , name , value , connection ) : setattr ( self , name , value )
