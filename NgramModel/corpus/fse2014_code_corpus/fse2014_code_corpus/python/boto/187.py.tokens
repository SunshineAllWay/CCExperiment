class Details ( dict ) : def startElement ( self , name , attrs , connection ) : return None def endElement ( self , name , value , connection ) : if name == 'name' : self . _name = value elif name == 'status' : self [ self . _name ] = value else : setattr ( self , name , value ) class Event ( object ) : def __init__ ( self , code = None , description = None , not_before = None , not_after = None ) : self . code = code self . description = description self . not_before = not_before self . not_after = not_after def __repr__ ( self ) : return 'Event:%s' % self . code def startElement ( self , name , attrs , connection ) : return None def endElement ( self , name , value , connection ) : if name == 'code' : self . code = value elif name == 'description' : self . description = value elif name == 'notBefore' : self . not_before = value elif name == 'notAfter' : self . not_after = value else : setattr ( self , name , value ) class Status ( object ) : def __init__ ( self , status = None , details = None ) : self . status = status if not details : details = Details ( ) self . details = details def __repr__ ( self ) : return 'Status:%s' % self . status def startElement ( self , name , attrs , connection ) : if name == 'details' : return self . details return None def endElement ( self , name , value , connection ) : if name == 'status' : self . status = value else : setattr ( self , name , value ) class EventSet ( list ) : def startElement ( self , name , attrs , connection ) : if name == 'item' : event = Event ( ) self . append ( event ) return event else : return None def endElement ( self , name , value , connection ) : setattr ( self , name , value ) class InstanceStatus ( object ) : def __init__ ( self , id = None , zone = None , events = None , state_code = None , state_name = None ) : self . id = id self . zone = zone self . events = events self . state_code = state_code self . state_name = state_name self . system_status = Status ( ) self . instance_status = Status ( ) def __repr__ ( self ) : return 'InstanceStatus:%s' % self . id def startElement ( self , name , attrs , connection ) : if name == 'eventsSet' : self . events = EventSet ( ) return self . events elif name == 'systemStatus' : return self . system_status elif name == 'instanceStatus' : return self . instance_status else : return None def endElement ( self , name , value , connection ) : if name == 'instanceId' : self . id = value elif name == 'availabilityZone' : self . zone = value elif name == 'code' : self . state_code = int ( value ) elif name == 'name' : self . state_name = value else : setattr ( self , name , value ) class InstanceStatusSet ( list ) : def __init__ ( self , connection = None ) : list . __init__ ( self ) self . connection = connection self . next_token = None def startElement ( self , name , attrs , connection ) : if name == 'item' : status = InstanceStatus ( ) self . append ( status ) return status else : return None def endElement ( self , name , value , connection ) : if name == 'NextToken' : self . next_token = value setattr ( self , name , value )
