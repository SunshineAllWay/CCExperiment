import os from boto . ec2 . ec2object import EC2Object from boto . exception import BotoClientError class KeyPair ( EC2Object ) : def __init__ ( self , connection = None ) : EC2Object . __init__ ( self , connection ) self . name = None self . fingerprint = None self . material = None def __repr__ ( self ) : return 'KeyPair:%s' % self . name def endElement ( self , name , value , connection ) : if name == 'keyName' : self . name = value elif name == 'keyFingerprint' : self . fingerprint = value elif name == 'keyMaterial' : self . material = value else : setattr ( self , name , value ) def delete ( self ) : return self . connection . delete_key_pair ( self . name ) def save ( self , directory_path ) : if self . material : directory_path = os . path . expanduser ( directory_path ) file_path = os . path . join ( directory_path , '%s.pem' % self . name ) if os . path . exists ( file_path ) : raise BotoClientError ( '%s already exists, it will not be overwritten' % file_path ) fp = open ( file_path , 'wb' ) fp . write ( self . material ) fp . close ( ) os . chmod ( file_path , 0600 ) return True else : raise BotoClientError ( 'KeyPair contains no material' ) def copy_to_region ( self , region ) : if region . name == self . region : raise BotoClientError ( 'Unable to copy to the same Region' ) conn_params = self . connection . get_params ( ) rconn = region . connect ( ** conn_params ) kp = rconn . create_key_pair ( self . name ) return kp
