package org.apache.cassandra.db;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.ExecutionException;
public interface ColumnFamilyStoreMBean
{
    public String getColumnFamilyName();
    public int getMemtableDataSize();
    public int getMemtableColumnsCount();
    public int getMemtableSwitchCount();
    public Object forceFlush() throws IOException;
    public long[] getRecentSSTablesPerReadHistogram();
    public long[] getSSTablesPerReadHistogram();
    public long getReadCount();
    public long getTotalReadLatencyMicros();
    public long[] getLifetimeReadLatencyHistogramMicros();
    public long[] getRecentReadLatencyHistogramMicros();
    public double getRecentReadLatencyMicros();
    public long getWriteCount();
    public long getTotalWriteLatencyMicros();
    public long[] getLifetimeWriteLatencyHistogramMicros();
    public long[] getRecentWriteLatencyHistogramMicros();
    public double getRecentWriteLatencyMicros();
    public int getPendingTasks();
    public int getLiveSSTableCount();
    public long getLiveDiskSpaceUsed();
    public long getTotalDiskSpaceUsed();
    public void forceMajorCompaction() throws ExecutionException, InterruptedException;
    public void invalidateKeyCache();
    public void invalidateRowCache();
    public long getMinRowSize();
    public long getMaxRowSize();
    public long getMeanRowSize();
    public long getBloomFilterFalsePositives();
    public long getRecentBloomFilterFalsePositives();
    public double getBloomFilterFalseRatio();
    public double getRecentBloomFilterFalseRatio();
    public int getMinimumCompactionThreshold();
    public void setMinimumCompactionThreshold(int threshold);
    public int getMaximumCompactionThreshold();
    public void setMaximumCompactionThreshold(int threshold);
    public void disableAutoCompaction();
    public int getMemtableFlushAfterMins();
    public void setMemtableFlushAfterMins(int time);
    public int getMemtableThroughputInMB();
    public void setMemtableThroughputInMB(int size);
    public double getMemtableOperationsInMillions();
    public void setMemtableOperationsInMillions(double ops);
    public long estimateKeys();
    public long[] getEstimatedRowSizeHistogram();
    public long[] getEstimatedColumnCountHistogram();
    public List<String> getBuiltIndexes();
}
