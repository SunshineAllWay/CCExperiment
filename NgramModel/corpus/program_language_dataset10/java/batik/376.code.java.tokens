package org . apache . batik . css . engine . value . svg ; import org . apache . batik . css . engine . CSSEngine ; import org . apache . batik . css . engine . value . Value ; import org . apache . batik . css . engine . value . ValueManager ; import org . apache . batik . util . CSSConstants ; import org . w3c . css . sac . LexicalUnit ; import org . w3c . dom . DOMException ; import org . w3c . dom . css . CSSPrimitiveValue ; public class GlyphOrientationVerticalManager extends GlyphOrientationManager { public String getPropertyName ( ) { return CSSConstants . CSS_GLYPH_ORIENTATION_VERTICAL_PROPERTY ; } public Value getDefaultValue ( ) { return SVGValueConstants . AUTO_VALUE ; } public Value createValue ( LexicalUnit lu , CSSEngine engine ) throws DOMException { if ( lu . getLexicalUnitType ( ) == LexicalUnit . SAC_IDENT ) { if ( lu . getStringValue ( ) . equalsIgnoreCase ( CSSConstants . CSS_AUTO_VALUE ) ) { return SVGValueConstants . AUTO_VALUE ; } throw createInvalidIdentifierDOMException ( lu . getStringValue ( ) ) ; } return super . createValue ( lu , engine ) ; } public Value createStringValue ( short type , String value , CSSEngine engine ) throws DOMException { if ( type != CSSPrimitiveValue . CSS_IDENT ) { throw createInvalidStringTypeDOMException ( type ) ; } if ( value . equalsIgnoreCase ( CSSConstants . CSS_AUTO_VALUE ) ) { return SVGValueConstants . AUTO_VALUE ; } throw createInvalidIdentifierDOMException ( value ) ; } }
