package org . apache . batik . dom . svg ; import org . apache . batik . dom . AbstractDocument ; import org . apache . batik . util . DoublyIndexedTable ; import org . apache . batik . util . SVGTypes ; import org . w3c . dom . Node ; import org . w3c . dom . svg . SVGAnimatedBoolean ; import org . w3c . dom . svg . SVGAnimatedPreserveAspectRatio ; import org . w3c . dom . svg . SVGAnimatedRect ; import org . w3c . dom . svg . SVGStringList ; import org . w3c . dom . svg . SVGViewElement ; public class SVGOMViewElement extends SVGOMElement implements SVGViewElement { protected static DoublyIndexedTable xmlTraitInformation ; static { DoublyIndexedTable t = new DoublyIndexedTable ( SVGOMElement . xmlTraitInformation ) ; t . put ( null , SVG_PRESERVE_ASPECT_RATIO_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_PRESERVE_ASPECT_RATIO_VALUE ) ) ; t . put ( null , SVG_VIEW_BOX_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_NUMBER_LIST ) ) ; t . put ( null , SVG_EXTERNAL_RESOURCES_REQUIRED_ATTRIBUTE , new TraitInformation ( true , SVGTypes . TYPE_BOOLEAN ) ) ; xmlTraitInformation = t ; } protected static final AttributeInitializer attributeInitializer ; static { attributeInitializer = new AttributeInitializer ( 2 ) ; attributeInitializer . addAttribute ( null , null , SVG_PRESERVE_ASPECT_RATIO_ATTRIBUTE , "xMidYMid meet" ) ; attributeInitializer . addAttribute ( null , null , SVG_ZOOM_AND_PAN_ATTRIBUTE , SVG_MAGNIFY_VALUE ) ; } protected SVGOMAnimatedBoolean externalResourcesRequired ; protected SVGOMAnimatedPreserveAspectRatio preserveAspectRatio ; protected SVGOMViewElement ( ) { } public SVGOMViewElement ( String prefix , AbstractDocument owner ) { super ( prefix , owner ) ; initializeLiveAttributes ( ) ; } protected void initializeAllLiveAttributes ( ) { super . initializeAllLiveAttributes ( ) ; initializeLiveAttributes ( ) ; } private void initializeLiveAttributes ( ) { externalResourcesRequired = createLiveAnimatedBoolean ( null , SVG_EXTERNAL_RESOURCES_REQUIRED_ATTRIBUTE , false ) ; preserveAspectRatio = createLiveAnimatedPreserveAspectRatio ( ) ; } public String getLocalName ( ) { return SVG_VIEW_TAG ; } public SVGStringList getViewTarget ( ) { throw new UnsupportedOperationException ( "SVGViewElement.getViewTarget is not implemented" ) ; } public short getZoomAndPan ( ) { return SVGZoomAndPanSupport . getZoomAndPan ( this ) ; } public void setZoomAndPan ( short val ) { SVGZoomAndPanSupport . setZoomAndPan ( this , val ) ; } public SVGAnimatedRect getViewBox ( ) { throw new UnsupportedOperationException ( "SVGFitToViewBox.getViewBox is not implemented" ) ; } public SVGAnimatedPreserveAspectRatio getPreserveAspectRatio ( ) { return preserveAspectRatio ; } public SVGAnimatedBoolean getExternalResourcesRequired ( ) { return externalResourcesRequired ; } protected AttributeInitializer getAttributeInitializer ( ) { return attributeInitializer ; } protected Node newNode ( ) { return new SVGOMViewElement ( ) ; } protected DoublyIndexedTable getTraitInformationTable ( ) { return xmlTraitInformation ; } }
